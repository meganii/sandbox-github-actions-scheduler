{
  "id": "6753e3a8cae968331672ce11",
  "title": "ES2024",
  "created": 1733551021,
  "updated": 1735207144,
  "lines": [
    {
      "id": "6753e3a8cae968331672ce11",
      "text": "ES2024",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1733551021,
      "updated": 1733551021
    },
    {
      "id": "67554fc17838e3000025d53d",
      "text": "[ES2023] ← ES2024 → [ES2025]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1733644226,
      "updated": 1733644243
    },
    {
      "id": "67554fc17838e3000025d53e",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1733644226,
      "updated": 1733644226
    },
    {
      "id": "6753e3ad71b3c20000a50075",
      "text": "\t[ES2024]って2024年1月公開じゃなかったっけ[綾坂こと.icon]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1733551021,
      "updated": 1733880737
    },
    {
      "id": "6753e3ad71b3c20000a50076",
      "text": "\t\t`Promise.withResolvers`とか`Object.groupBy`とか",
      "userId": "62919f6444e78d001d73e522",
      "created": 1733551021,
      "updated": 1733880735
    },
    {
      "id": "6753e3ed71b3c20000a50077",
      "text": "",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1733551085,
      "updated": 1733551085
    },
    {
      "id": "6753e5ae71b3c20000a50080",
      "text": "[https://qiita.com/rana_kualu/items/16539958b0c9d3b3dba8 【JavaScript】ES2024の新機能まとめ #日本語訳 - Qiita]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1733551534,
      "updated": 1733645203
    },
    {
      "id": "6753e3ed71b3c20000a50078",
      "text": "`Promise.withResolvers()`",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1733551085,
      "updated": 1733551089
    },
    {
      "id": "6753e3f471b3c20000a5007b",
      "text": "\tpromise, resolve, rejectを含むオブジェクトを返す",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1733551092,
      "updated": 1733551127
    },
    {
      "id": "6755454971b3c2000060af40",
      "text": "\tまあこうすればいいけどね",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1733641545,
      "updated": 1733641550
    },
    {
      "id": "6755454e71b3c2000060af41",
      "text": "\t\tcode:js",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1733641550,
      "updated": 1733641554
    },
    {
      "id": "6755455371b3c2000060af43",
      "text": "\t\t let resolve;",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1733641555,
      "updated": 1733641620
    },
    {
      "id": "6755458b71b3c2000060af45",
      "text": "\t\t let reject;",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1733641611,
      "updated": 1733641618
    },
    {
      "id": "6755456571b3c2000060af44",
      "text": "\t\t let promise = new Promise((a,b)=>{resolve=a;reject=b;})",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1733641573,
      "updated": 1733641609
    },
    {
      "id": "67554f137838e3000025d53c",
      "text": "\tこれも便利だけど、新規作成したpromiseを停止しやすくする仕組みより、既存のpromiseを外部から停止できる関数がほしい[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1733644052,
      "updated": 1733644146
    },
    {
      "id": "67556a8d71b3c2000060af4e",
      "text": "\t\t[bsahd.icon]つ[AbortController]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1733651086,
      "updated": 1733651092
    },
    {
      "id": "676cfdf87838e300000c4b60",
      "text": "\t\tこれも結局Promise内部に細工する必要あるのでは…？[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735196151,
      "updated": 1735196170
    },
    {
      "id": "676cfe0b7838e300000c4b61",
      "text": "\t\t問題は既存コード（ライブラリなど）が作成したPromiseを[プロセス]のキルみたいに外部から強制終了できないこと[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735196171,
      "updated": 1735196512
    },
    {
      "id": "676cfe707838e300000c4b62",
      "text": "\t\t　Nodeなら組み込みライブラリを使用してサブプロセス作って管理する方法があるけれど…",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735196271,
      "updated": 1735196447
    },
    {
      "id": "676cfeca7838e300000c4b63",
      "text": "\t\t　　ブラウザでは使えない",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735196362,
      "updated": 1735196377
    },
    {
      "id": "676cfeda7838e300000c4b64",
      "text": "\t\t　　そういうコード書くの少し面倒",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735196377,
      "updated": 1735196418
    },
    {
      "id": "676cff037838e300000c4b65",
      "text": "\t\t　　メモリ共有もできなかった気がする",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735196419,
      "updated": 1735196442
    },
    {
      "id": "676cff2d7838e300000c4b66",
      "text": "\t\t　[ゾンビインスタンス]があるとメモリ消費量が処理時間に比例して増加するので、どうにかしたいところ",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735196461,
      "updated": 1735196501
    },
    {
      "id": "676d08cf71b3c200004cee47",
      "text": "\t\t　[強制終了]をするような設計が間違ってるのでは...[bsahd.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1735198927,
      "updated": 1735207144
    },
    {
      "id": "676d16b47838e300002aa4f1",
      "text": " \t\t　\t間違ってないです。終了できないライブラリに対処する単純な方法が強制終了しかないというだけです[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735202484,
      "updated": 1735202820
    },
    {
      "id": "676d170d7838e300002aa4f2",
      "text": " \t\t　\t強制終了できなかったら、例えばOSの場合、ゾンビ化するアプリケーションを起動すると閉じるにはOSを再起動するしかなくなります",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735202572,
      "updated": 1735202653
    },
    {
      "id": "676d17607838e300002aa4f3",
      "text": " \t\t　\t　これが例えば、OSの要件に「24時間稼働させること」があったら？というのを考えてみてください",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735202655,
      "updated": 1735202692
    },
    {
      "id": "676d08dc71b3c200004cee48",
      "text": "\t\t　\tというか強制終了機能が付くとfinally的な処理が難しくなりそうだから",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1735198940,
      "updated": 1735198998
    },
    {
      "id": "676d254c71b3c20000660550",
      "text": "\t\t　\tどうしても強制終了したいならWeb Workerかな...",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1735206221,
      "updated": 1735206231
    },
    {
      "id": "676d264071b3c20000660551",
      "text": "\t\t　\t\tPromiseベースでも、空無限ループとか組まれたら元コードごとフリーズする",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1735206465,
      "updated": 1735206489
    },
    {
      "id": "676d271d71b3c20000660552",
      "text": "\t\t　\t\t\tPromiseはあくまで協調的",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1735206686,
      "updated": 1735206694
    },
    {
      "id": "676d095d71b3c200004cee49",
      "text": "\t\t　\t根本的な解決をしてほしい",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1735199070,
      "updated": 1735199076
    },
    {
      "id": "676d0a2271b3c200004cee4b",
      "text": "\t\t　\t\t「動いてるから触らない」はクソコードを生み出してしまう",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1735199266,
      "updated": 1735199292
    },
    {
      "id": "676d0a9a71b3c200004cee4c",
      "text": "\t\t　\t\tOSSならフォークとかできる",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1735199386,
      "updated": 1735199703
    },
    {
      "id": "676d17a97838e300002aa4f6",
      "text": "\t\t　\t\t　ソースコードを解析して修正する人手は誰が用意してくれます？[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735202729,
      "updated": 1735202804
    },
    {
      "id": "676d1c827838e300002aa4fa",
      "text": "\t\t　\t\t　趣味なら直せるけど、業務だとそこまで面倒見るのきついっす",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735203969,
      "updated": 1735204005
    },
    {
      "id": "676d1ca67838e300002aa4fb",
      "text": "\t\t　\t\t　　お金出ないので",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735204005,
      "updated": 1735204005
    },
    {
      "id": "676d0ac371b3c200004cee4d",
      "text": "\t\t　\t\tAbort済みのAbortControllerってどう処理されるんだ？",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1735199428,
      "updated": 1735199446
    },
    {
      "id": "676d0bd871b3c200004cee4f",
      "text": "\t\t　\t\t\t関数の最初に自分で判定するっぽい",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1735199705,
      "updated": 1735199781
    },
    {
      "id": "676d0c2771b3c200004cee50",
      "text": "\t\t　\t\t\tまあEventTargetだからそうだよな...",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1735199783,
      "updated": 1735200055
    },
    {
      "id": "676d0d3871b3c200004cee51",
      "text": "\t\t　\t\t\tじゃあsignalリレーをしてもいいのかな",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1735200057,
      "updated": 1735200065
    },
    {
      "id": "6753e3ef71b3c20000a50079",
      "text": "Array Grouping",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1733551087,
      "updated": 1733551697
    },
    {
      "id": "6753e65271b3c20000a50082",
      "text": "\t>配列をグルーピングするメソッドObject.groupByとMap.groupByを追加します。",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1733551698,
      "updated": 1733551707
    },
    {
      "id": "675552127838e3000025d53f",
      "text": "\tこれの逆で、既に分類されたオブジェクトを平坦に戻す仕組みは無いのだろうか[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1733644819,
      "updated": 1733644840
    },
    {
      "id": "67556a7371b3c2000060af4d",
      "text": "\t\t`Object.values(tarfet).flat()`[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1733651060,
      "updated": 1733651066
    },
    {
      "id": "6753e65171b3c20000a50081",
      "text": "",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1733551697,
      "updated": 1733551697
    }
  ]
}