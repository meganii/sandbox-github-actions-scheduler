{
  "id": "604fb055c8f35b002226a69e",
  "title": "@imo",
  "created": 1615835223,
  "updated": 1659046006,
  "lines": [
    {
      "id": "604fb055c8f35b002226a69e",
      "text": "@imo",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615835223,
      "updated": 1615835223
    },
    {
      "id": "62e0450d1280f00000233d3c",
      "text": "[/imo-memo/useState#62dc1d0706848400000fa011]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658864910,
      "updated": 1658864914
    },
    {
      "id": "62e045121280f00000233d3d",
      "text": " s/`setCount(prevCount) => prevCount + 1`/`setCount((prevCount) => prevCount + 1)`",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658864915,
      "updated": 1658864948
    },
    {
      "id": "62e045351280f00000233d3e",
      "text": " `setCount(count)`は直前のcountを受け取るのではなく、countを新しい値で更新する関数です",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658864950,
      "updated": 1658865025
    },
    {
      "id": "62e045801280f00000233d3f",
      "text": "  直前の値を受け取って新しい値に書き換えるのは`setCount((prevCount) => newCount)`のほう",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865025,
      "updated": 1658865078
    },
    {
      "id": "62e0ca3f0684840000a6426a",
      "text": "  あ、そういうことなのですね。感謝します！🙇‍♂️[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1658899008,
      "updated": 1658899842
    },
    {
      "id": "62e13aea068484000058429c",
      "text": "  \tスミマセン～、確認なのですが、",
      "userId": "5ad57975d54cd50014068484",
      "created": 1658927851,
      "updated": 1658927898
    },
    {
      "id": "62e13b1a068484000058429d",
      "text": "  \t\ta.プリミティブな値を受け取ると、その値で更新する",
      "userId": "5ad57975d54cd50014068484",
      "created": 1658927898,
      "updated": 1658928103
    },
    {
      "id": "62e1ccee1280f000008a2e1f",
      "text": "  \t\t https://scrapbox-bundler.vercel.app?url=https://scrapbox.io/api/code/villagepump/@imo/a.jsx&bundle&minify&run&reload",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965230,
      "updated": 1658965287
    },
    {
      "id": "62e1cbb81280f000008a2e0c",
      "text": "  \t\t code:a.jsx",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658964921,
      "updated": 1658965284
    },
    {
      "id": "62e1cbf11280f000008a2e0e",
      "text": "  \t\t  /** @jsx h */",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658964977,
      "updated": 1658964978
    },
    {
      "id": "62e1cbf21280f000008a2e0f",
      "text": "      /** @jsxFrag Fragment */",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658964978,
      "updated": 1658964978
    },
    {
      "id": "62e1cbbb1280f000008a2e0d",
      "text": "  \t\t  import { Fragment, h, render } from \"https://esm.sh/preact@10.6.4\";",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658964926,
      "updated": 1658964982
    },
    {
      "id": "62e1cbf61280f000008a2e10",
      "text": "  \t\t  import { useState, useCallback } from \"https://esm.sh/preact@10.6.4/hooks\";",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658964982,
      "updated": 1658965589
    },
    {
      "id": "62e1cbfe1280f000008a2e12",
      "text": "  \t\t  ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658964990,
      "updated": 1658964990
    },
    {
      "id": "62e1cd941280f000008a2e20",
      "text": "  \t\t  ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965396,
      "updated": 1658965396
    },
    {
      "id": "62e1cbf71280f000008a2e11",
      "text": "  \t\t  const App = () => {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658964984,
      "updated": 1658965004
    },
    {
      "id": "62e1cc0b1280f000008a2e13",
      "text": "  \t\t    const [count, setCount] = useState(0);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965004,
      "updated": 1658965018
    },
    {
      "id": "62e1ce561280f000008a2e3b",
      "text": "  \t\t    const countUp = useCallback(() => setCount(count + 1), [count]);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965591,
      "updated": 1658965606
    },
    {
      "id": "62e1ce701280f000008a2e3c",
      "text": "  \t\t    const countDown = useCallback(() => setCount(count - 1), [count]);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965616,
      "updated": 1658965622
    },
    {
      "id": "62e1ce711280f000008a2e3d",
      "text": "  \t\t    ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965618,
      "updated": 1658965618
    },
    {
      "id": "62e1cc1b1280f000008a2e15",
      "text": "  \t\t    return (",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965019,
      "updated": 1658965204
    },
    {
      "id": "62e1ccd41280f000008a2e1a",
      "text": "  \t\t      <div style=\"position: fixed; top:60px; left: 50%; transform: translate(-50%, 0); background-color: var(--page-bg, #fefefe); border: solid 1px rgba(0,0,0,.15); border-radius: 4px;\">",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965204,
      "updated": 1658965870
    },
    {
      "id": "62e1cc871280f000008a2e17",
      "text": "    \t\t      Counter: {count}<br />",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965127,
      "updated": 1658965206
    },
    {
      "id": "62e1cc9e1280f000008a2e18",
      "text": "    \t\t      <span style=\"user-select: none;\" onClick={countUp}>+</span>",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965150,
      "updated": 1658965612
    },
    {
      "id": "62e1ccc91280f000008a2e19",
      "text": "    \t\t      <span style=\"user-select: none;\" onClick={countDown}>-</span>",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965193,
      "updated": 1658965630
    },
    {
      "id": "62e1cc861280f000008a2e16",
      "text": "    \t\t    </div>",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965126,
      "updated": 1658965208
    },
    {
      "id": "62e1ccd91280f000008a2e1b",
      "text": "    \t\t  );",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965209,
      "updated": 1658965210
    },
    {
      "id": "62e1cc0c1280f000008a2e14",
      "text": "  \t\t  };",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965004,
      "updated": 1658965025
    },
    {
      "id": "62e1ccdb1280f000008a2e1c",
      "text": "  \t\t  ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965211,
      "updated": 1658965211
    },
    {
      "id": "62e1ce171280f000008a2e22",
      "text": "  \t\t  const div = document.createElement(\"div\");",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965527,
      "updated": 1658965537
    },
    {
      "id": "62e1ce261280f000008a2e23",
      "text": "  \t\t  document.body.append(div);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965542,
      "updated": 1658965550
    },
    {
      "id": "62e1ccdb1280f000008a2e1d",
      "text": "  \t\t  render(<App />, div);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965211,
      "updated": 1658965541
    },
    {
      "id": "62e1cce91280f000008a2e1e",
      "text": "  \t\t  ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965225,
      "updated": 1658965225
    },
    {
      "id": "62e13b2f068484000058429e",
      "text": "  \t\tb.関数を受け取ると、その関数は直前の値を引数として受け取り、更新した値を返す",
      "userId": "5ad57975d54cd50014068484",
      "created": 1658927919,
      "updated": 1658928077
    },
    {
      "id": "62e1ce431280f000008a2e3a",
      "text": "  \t\t https://scrapbox-bundler.vercel.app?url=https://scrapbox.io/api/code/villagepump/@imo/b.jsx&bundle&minify&run&reload",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965571,
      "updated": 1659046002
    },
    {
      "id": "62e1ce381280f000008a2e24",
      "text": "  \t\t code:b.jsx",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965560,
      "updated": 1659046006
    },
    {
      "id": "62e1ce3c1280f000008a2e25",
      "text": "  \t\t  /** @jsx h */",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ce3c1280f000008a2e26",
      "text": "      /** @jsxFrag Fragment */",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ce3c1280f000008a2e27",
      "text": "      import { Fragment, h, render } from \"https://esm.sh/preact@10.6.4\";",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ce3c1280f000008a2e28",
      "text": "      import { useState } from \"https://esm.sh/preact@10.6.4/hooks\";",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ce3c1280f000008a2e29",
      "text": "      ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ce3c1280f000008a2e2a",
      "text": "      ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ce3c1280f000008a2e2b",
      "text": "      const App = () => {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ce3c1280f000008a2e2c",
      "text": "        const [count, setCount] = useState(0);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ce851280f000008a2e3e",
      "text": "  \t\t    const countUp = useCallback(() => setCount((prev) => prev + 1), []);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965637,
      "updated": 1658965675
    },
    {
      "id": "62e1ce851280f000008a2e3f",
      "text": "  \t\t    const countDown = useCallback(() => setCount((prev) => prev - 1), []);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965637,
      "updated": 1658965674
    },
    {
      "id": "62e1ce851280f000008a2e40",
      "text": "  \t\t    ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965637,
      "updated": 1658965637
    },
    {
      "id": "62e1ce3c1280f000008a2e2d",
      "text": "        return (",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ce3c1280f000008a2e2e",
      "text": "          <div style=\"position: fixed; top:60px; left: 50%; transform: translate(-50%, 0); background-color: var(--page-bg, #fefefe); border: solid 1px rgba(0,0,0,.15); border-radius: 4px;\">",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965883
    },
    {
      "id": "62e1ce3c1280f000008a2e2f",
      "text": "            Counter: {count}<br />",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ceb71280f000008a2e41",
      "text": "    \t\t      <span style=\"user-select: none;\" onClick={countUp}>+</span>",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965687,
      "updated": 1658965687
    },
    {
      "id": "62e1ceb71280f000008a2e42",
      "text": "    \t\t      <span style=\"user-select: none;\" onClick={countDown}>-</span>",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965687,
      "updated": 1658965687
    },
    {
      "id": "62e1ce3c1280f000008a2e32",
      "text": "          </div>",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ce3c1280f000008a2e33",
      "text": "        );",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ce3c1280f000008a2e34",
      "text": "      };",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ce3c1280f000008a2e35",
      "text": "      ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ce3c1280f000008a2e36",
      "text": "      const div = document.createElement(\"div\");",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ce3c1280f000008a2e37",
      "text": "      document.body.append(div);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ce3c1280f000008a2e38",
      "text": "      render(<App />, div);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e1ce3c1280f000008a2e39",
      "text": "      ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965564,
      "updated": 1658965564
    },
    {
      "id": "62e13bcd068484000058429f",
      "text": "  \tということで合ってますか？",
      "userId": "5ad57975d54cd50014068484",
      "created": 1658928077,
      "updated": 1658928087
    },
    {
      "id": "62e1cece1280f000008a2e43",
      "text": "  \tはい。あってます[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965710,
      "updated": 1658965723
    },
    {
      "id": "62e1cedb1280f000008a2e44",
      "text": "  \t　折角なのでサンプルコード添えました",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965723,
      "updated": 1658965735
    },
    {
      "id": "62e1cee61280f000008a2e45",
      "text": "  \t　 リンクを踏んで生成したコードを開発コンソールで実行すると試せます",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658965735,
      "updated": 1658965757
    },
    {
      "id": "62e293050684840000ed2cde",
      "text": "   \tなんと！お時間割いていただき感謝します🙏[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1659015941,
      "updated": 1659016271
    },
    {
      "id": "62e045b51280f00000233d40",
      "text": " `setCount((prevCount) => newCount)`の形があるのは、再レンダリングの抑制のためです",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865078,
      "updated": 1658865167
    },
    {
      "id": "62e0466c1280f00000233d4b",
      "text": "  たとえば以下の場合、`useEffect`部分が無限ループに陥ってしまう",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865261,
      "updated": 1658865295
    },
    {
      "id": "62e0468e1280f00000233d4c",
      "text": "   `setState`で`state`を更新する→`state`の値が変わるので次のレンダリングサイクルで`useEffect`が再実行される→再び`state`の更新が走る→`useEffect`が再実行→`state`が更新される→(以下無限ループ)",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865295,
      "updated": 1658865390
    },
    {
      "id": "62e0460e1280f00000233d41",
      "text": "   code:js",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865167,
      "updated": 1658865278
    },
    {
      "id": "62e046241280f00000233d45",
      "text": "    const [state, setState] = useState(0);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865190,
      "updated": 1658865278
    },
    {
      "id": "62e046251280f00000233d46",
      "text": "    ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865190,
      "updated": 1658865278
    },
    {
      "id": "62e046121280f00000233d42",
      "text": "    useEffect(() => {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865171,
      "updated": 1658865278
    },
    {
      "id": "62e046451280f00000233d47",
      "text": "      // ...",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865222,
      "updated": 1658865278
    },
    {
      "id": "62e046191280f00000233d43",
      "text": "      const newState = state + 1;",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865178,
      "updated": 1658865278
    },
    {
      "id": "62e046491280f00000233d48",
      "text": "      setState(newState);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865226,
      "updated": 1658865278
    },
    {
      "id": "62e046491280f00000233d49",
      "text": "      // ...",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865226,
      "updated": 1658865278
    },
    {
      "id": "62e0461a1280f00000233d44",
      "text": "    }, [state, /* ... */]);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865179,
      "updated": 1658865278
    },
    {
      "id": "62e046671280f00000233d4a",
      "text": "  関数形の更新方法を用いると、このような「前の状態を使いたいけど、再レンダリングの対象にしたくない」場合に対応できる",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865256,
      "updated": 1658865484
    },
    {
      "id": "62e0474b1280f00000233d4d",
      "text": "   code:js",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865484,
      "updated": 1658865487
    },
    {
      "id": "62e0474e1280f00000233d4e",
      "text": "    const [state, setState] = useState(0);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865487,
      "updated": 1658865501
    },
    {
      "id": "62e0475b1280f00000233d4f",
      "text": "    ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865501,
      "updated": 1658865501
    },
    {
      "id": "62e0475b1280f00000233d50",
      "text": "    useEffect(() => {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865501,
      "updated": 1658865501
    },
    {
      "id": "62e0475b1280f00000233d51",
      "text": "      // ...",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865501,
      "updated": 1658865501
    },
    {
      "id": "62e0475b1280f00000233d53",
      "text": "      setState((prevState) => prevState + 1);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865501,
      "updated": 1658865545
    },
    {
      "id": "62e0475b1280f00000233d54",
      "text": "      // ...",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865501,
      "updated": 1658865501
    },
    {
      "id": "62e0475b1280f00000233d55",
      "text": "    }, [/* ... */]); // 依存配列からstateを消せる",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865501,
      "updated": 1658865539
    },
    {
      "id": "62e0478f1280f00000233d56",
      "text": "    ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658865552,
      "updated": 1658865552
    },
    {
      "id": "6182839fa19e4000000651ca",
      "text": "\t\t`useEffect`は、第一引数にコールバック関数を、第二引数に変更を見たい値を配列に入れて取る、という感じで合ってますか？[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1635943328,
      "updated": 1658899387
    },
    {
      "id": "62e0cbb90684840000a6426c",
      "text": "\t\t\tで、前者のコードはコールバック内で変更される値を第二引数に取ってるからループする、という",
      "userId": "5ad57975d54cd50014068484",
      "created": 1658899385,
      "updated": 1658899509
    },
    {
      "id": "62e0d6e11280f0000001a794",
      "text": "\t\t\t そういうことです[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658902241,
      "updated": 1658902244
    },
    {
      "id": "62e0cc350684840000a6426d",
      "text": " \t\tワガママで恐縮なのですが、後者のコードが使われる状況が想像しづらかったので、この形が実際に使われている例などは見せて頂けませんでしょうか？",
      "userId": "5ad57975d54cd50014068484",
      "created": 1658899510,
      "updated": 1658899817
    },
    {
      "id": "62e0d4ca1280f0000001a78a",
      "text": "  \t\tわかりました～。UserScriptでよく使っているのですぐ出てきそうです[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658901706,
      "updated": 1658902063
    },
    {
      "id": "62e0d4ea1280f0000001a78b",
      "text": "  \t\t　と思ったが意外とすぐに見つからない",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658901738,
      "updated": 1658902063
    },
    {
      "id": "62e0d5821280f0000001a78d",
      "text": "  \t\t　 `useMemo()`ばっかだ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658901890,
      "updated": 1658902063
    },
    {
      "id": "62e0d62b1280f0000001a78f",
      "text": "  \t\t　 どうやらコールバックを使うパターンは少なそうです",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658902060,
      "updated": 1658902084
    },
    {
      "id": "62e0d6471280f0000001a790",
      "text": "  \t\t　複雑なコードで申し訳ないですが、見つかったのを載せておきます",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658902087,
      "updated": 1658902219
    },
    {
      "id": "62e0d58a1280f0000001a78e",
      "text": "   \t\t　[/takker/takker-workflow@0.0.1/next-action-viewer#6251407e1280f000004d23b7]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658901897,
      "updated": 1658902219
    },
    {
      "id": "62e0d6b61280f0000001a791",
      "text": "   \t\t　https://github.com/takker99/ScrapBubble/blob/fa0e4c01571b942022e465919851621b723cc519/useBubbles.ts#L51",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658902198,
      "updated": 1658902220
    },
    {
      "id": "62e0d6d51280f0000001a792",
      "text": "   \t\t　https://github.com/takker99/ScrapBubble/blob/fa0e4c01571b942022e465919851621b723cc519/usePages.ts#L37",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658902229,
      "updated": 1658902230
    },
    {
      "id": "62e0d72b1280f0000001a796",
      "text": "   \t\t 値Aの更新を引き金に、値Aと値Bから新しい値Bを作成するロジックで使われているみたいです",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658902316,
      "updated": 1658902370
    },
    {
      "id": "62e0d7621280f0000001a797",
      "text": "   \t\t 大抵は値Aから値Bを作成するロジックですむので、使用頻度は少ないのかも",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658902370,
      "updated": 1658902430
    },
    {
      "id": "62e0d79e1280f0000001a798",
      "text": "   \t\t コールバック系のsetStateの出現率をコードの複雑さの指標として使えるかもしれない",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1658902430,
      "updated": 1658902505
    },
    {
      "id": "62e0d6d61280f0000001a793",
      "text": "   \t\t感謝します！🙏時間をかけて読んでみようと思います[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1658902230,
      "updated": 1658925727
    },
    {
      "id": "62e13299068484000001d7f8",
      "text": "   \t\t実例をすぐに見せていただけることはありがたいことでございます🙇‍♂️",
      "userId": "5ad57975d54cd50014068484",
      "created": 1658925721,
      "updated": 1658926732
    },
    {
      "id": "62e0caae0684840000a6426b",
      "text": "",
      "userId": "5ad57975d54cd50014068484",
      "created": 1658899118,
      "updated": 1658899118
    },
    {
      "id": "618283a2a19e4000000651ce",
      "text": "https://twitter.com/xizbRnz7h9cszQE/status/1454753603260801027",
      "userId": "5df97d83ccfabb0017a19e40",
      "created": 1635943331,
      "updated": 1635943332
    },
    {
      "id": "618283a4a19e4000000651cf",
      "text": " 画像を見て、imo さんを連想したのでご報告[kidooom.icon]",
      "userId": "5df97d83ccfabb0017a19e40",
      "created": 1635943332,
      "updated": 1635943370
    },
    {
      "id": "618283a0a19e4000000651cd",
      "text": "\t\tこれは可愛い！買います[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1635943328,
      "updated": 1635949830
    },
    {
      "id": "61831a771280f000007ee090",
      "text": "\t\t画像見てフイタw[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1635981943,
      "updated": 1635981947
    },
    {
      "id": "61829c3f0684840000559bf9",
      "text": "",
      "userId": "5ad57975d54cd50014068484",
      "created": 1635949631,
      "updated": 1635949631
    },
    {
      "id": "617fdda7e5172d00005582f8",
      "text": "[/spud-oimo/簡単にできたときの罠#6168435106848400002381e9]",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1635769767,
      "updated": 1635769767
    },
    {
      "id": "617fdd97e5172d00005582f6",
      "text": "　[調子が悪い時の振舞い方を定型化したい#6085dad6e5172d0000230f61]とか？[yosider.icon]",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1635769751,
      "updated": 1635769756
    },
    {
      "id": "617fdd9de5172d00005582f7",
      "text": "\t\tこれか！[/icons/感謝.icon][imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1635769757,
      "updated": 1635777379
    },
    {
      "id": "617ffb640684840000241945",
      "text": "\t\t自分が書いたわけではなかった",
      "userId": "5ad57975d54cd50014068484",
      "created": 1635777380,
      "updated": 1635777388
    },
    {
      "id": "617ffb310684840000241944",
      "text": "",
      "userId": "5ad57975d54cd50014068484",
      "created": 1635777329,
      "updated": 1635777329
    },
    {
      "id": "614fa8c91280f000006f533d",
      "text": "[/spud-oimo/目標は抽象的な方がいいかも]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1632610505,
      "updated": 1632610506
    },
    {
      "id": "614fa8cb1280f000006f533f",
      "text": " 目標と過程の話を読んで、似たようなことを書かれている記事↓を思い出しました[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1632610507,
      "updated": 1632610539
    },
    {
      "id": "614fa8eb1280f000006f5340",
      "text": "  [/motoso/北極星はほとんど変わらないが、今実現すべきことは変わる]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1632610539,
      "updated": 1632610539
    },
    {
      "id": "614fa8eb1280f000006f5341",
      "text": "  読んでみるといいかもです",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1632610539,
      "updated": 1632610559
    },
    {
      "id": "614febbd068484000001eee9",
      "text": "   謝謝🙏[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1632627644,
      "updated": 1632627684
    },
    {
      "id": "614febc7068484000001eeea",
      "text": "    記載してませんでしたが、自分の記事はkidooomさんのページを読んで書いたものでした🙇‍♂️",
      "userId": "5ad57975d54cd50014068484",
      "created": 1632627655,
      "updated": 1632628099
    },
    {
      "id": "614fec99068484000001eeeb",
      "text": "    [/kidaaam-92022284/目標設定の具体と抽象]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1632627864,
      "updated": 1632628009
    },
    {
      "id": "614ffeffa19e40000017c836",
      "text": "    \t会社に入ると「[目標設定]」で多くの人が悩んでて、結構な時間を使ってました（自分もそう）[kidooom.icon]",
      "userId": "5df97d83ccfabb0017a19e40",
      "created": 1632632575,
      "updated": 1632635319
    },
    {
      "id": "614fff61a19e40000017c837",
      "text": "    \t[/rashitamemo/rashita.icon]さんの書いた[https://amzn.to/3EPHCm5 目標の研究]という本も参考になりました。[kidooom.icon]",
      "userId": "5df97d83ccfabb0017a19e40",
      "created": 1632632673,
      "updated": 1632632703
    },
    {
      "id": "614fec9d068484000001eeec",
      "text": "   リンクを色々眺めてみたんですが、これに似たことが結構詳細に書かれていますね",
      "userId": "5ad57975d54cd50014068484",
      "created": 1632627869,
      "updated": 1632628048
    },
    {
      "id": "614fed3f068484000001eeed",
      "text": "   \t[/motoso/理想へ至るたくさんの道からどうやって道を選ぶか]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1632628031,
      "updated": 1632628032
    },
    {
      "id": "614ffff8a19e40000017c838",
      "text": "   \t\t図示されてて良いですね。図を見て、[スクウェア・エニックス]のCTOの方が書いたこの資料を思い出しました。[kidooom.icon]",
      "userId": "5df97d83ccfabb0017a19e40",
      "created": 1632632825,
      "updated": 1632635298
    },
    {
      "id": "615000c7a19e40000017c839",
      "text": "   \t\t\thttp://www.jp.square-enix.com/tech/openconference/library/2011/dldata/PM/PM.pdf のp120 からの図",
      "userId": "5df97d83ccfabb0017a19e40",
      "created": 1632633031,
      "updated": 1632633268
    },
    {
      "id": "615036520684840000a11183",
      "text": "   \t\t\t\tお～分かりやすいです[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1632646738,
      "updated": 1632646825
    },
    {
      "id": "615036800684840000a11184",
      "text": "   \t\t\t\tそしてこういう状況になるとめっちゃヘコむ…",
      "userId": "5ad57975d54cd50014068484",
      "created": 1632646784,
      "updated": 1632646804
    },
    {
      "id": "61504a4c1280f00000ea4904",
      "text": "   \t\t\t[土木計画学]の方法論って[ソフトウェア開発]にも援用できそうだなー、とビル建設のメタファーを見て思いついた[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1632651852,
      "updated": 1632651921
    },
    {
      "id": "61504a911280f00000ea4905",
      "text": "   \t\t\t 失敗プロジェクトを「計画なしで進めた社会基盤施設の設計施工運用」と同類としてみると、途端に恐ろしさを実感できる",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1632651921,
      "updated": 1632652057
    },
    {
      "id": "614fa8c91280f000006f533e",
      "text": "",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1632610505,
      "updated": 1632610505
    },
    {
      "id": "60c709541280f000003d8821",
      "text": "[/spud-oimo/2021　6月　落書き#60c4f6a80684840000a68b75]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1623656788,
      "updated": 1623656792
    },
    {
      "id": "60c709591280f000003d8823",
      "text": " ブレイドとファイズだー！！[takker.icon*2]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1623656793,
      "updated": 1623656814
    },
    {
      "id": "60c747640684840000d50c1d",
      "text": "  マジでキングフォーム好きなんですよねー、カブトムシのツノを王冠にしているのがデザイン的に完璧すぎる[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1623672676,
      "updated": 1623672751
    },
    {
      "id": "60c709a71280f000003d8825",
      "text": " メカっぽいと言えば、G3-Xやイクサ、バース、魔進チェイサーも参考になりそうです",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1623656870,
      "updated": 1623657021
    },
    {
      "id": "60c7475b0684840000d50c1c",
      "text": " \tあーバース良いですね、個人的にあれくらいのディティール密度が好きだったり[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1623672668,
      "updated": 1623672766
    },
    {
      "id": "60c749600684840000d50c20",
      "text": " \tあとはダブルのSJエクストリームも良さそう",
      "userId": "5ad57975d54cd50014068484",
      "created": 1623673184,
      "updated": 1623673184
    },
    {
      "id": "60c747960684840000d50c1e",
      "text": " \t「メカ + 西洋っぽい鎧」の組み合わせでULTRAMAN版のアグルスーツを基にしようと思っていたのですが、仮面ライダーの方からもいくつか参考にしようと思って色々探してましたｗ",
      "userId": "5ad57975d54cd50014068484",
      "created": 1623672727,
      "updated": 1623673018
    },
    {
      "id": "60c709551280f000003d8822",
      "text": "",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1623656788,
      "updated": 1623656788
    },
    {
      "id": "60b22f26e5172d0000af85b8",
      "text": "[/spud-oimo/2021　5月　落書き]",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1622290214,
      "updated": 1622290215
    },
    {
      "id": "60b22f28e5172d0000af85b9",
      "text": " うわああああああ[yosider.icon]",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1622290217,
      "updated": 1622290315
    },
    {
      "id": "60b22f31e5172d0000af85bb",
      "text": " 恐縮です…ありがとうございます！！",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1622290226,
      "updated": 1622290239
    },
    {
      "id": "60b22f6de5172d0000af85be",
      "text": "  こんなの初めてです〜嬉しい",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1622290285,
      "updated": 1622290287
    },
    {
      "id": "60b23ee10684840000946a73",
      "text": "  \t👍[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1622294240,
      "updated": 1622294250
    },
    {
      "id": "60b23ed30684840000946a72",
      "text": "  \t喜んでもらえるの嬉しいですね～",
      "userId": "5ad57975d54cd50014068484",
      "created": 1622294227,
      "updated": 1622294259
    },
    {
      "id": "60b22f46e5172d0000af85bc",
      "text": " めっちゃスタイリッシュな[ちゃんみお]だ！",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1622290246,
      "updated": 1622290298
    },
    {
      "id": "60b22fe11280f0000085b0a9",
      "text": " [/icons/いい話だ.icon][takker.icon][sta.icon]",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1622290402,
      "updated": 1622339353
    },
    {
      "id": "60b22f29e5172d0000af85ba",
      "text": "",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1622290217,
      "updated": 1622290217
    },
    {
      "id": "60a500801280f000007378dc",
      "text": "[昔のasearchは全角文字に弱かった]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1621426304,
      "updated": 1621678287
    },
    {
      "id": "60a371061280f00000ea2e39",
      "text": "",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1621324040,
      "updated": 1621325312
    },
    {
      "id": "6098b9061280f00000c864b3",
      "text": "[/spud-oimo/ポジティブに言い換えているのか現実逃避なのか]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620621575,
      "updated": 1620621590
    },
    {
      "id": "6098b9171280f00000c864b5",
      "text": " そもそも今自分の前にあるそれが問題なのかどうかから考えるという視点もありそうですね[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620621591,
      "updated": 1620621670
    },
    {
      "id": "6098b9661280f00000c864b6",
      "text": "  問題でなければ、問題解決のプロセスを進める必要もないわけで",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620621670,
      "updated": 1620621712
    },
    {
      "id": "6098ea5706848400006d7868",
      "text": "  \tですね、そもそも「問題の発見→即座にその解決」というやり方は場合によって裏目に出たりする[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1620634200,
      "updated": 1620634414
    },
    {
      "id": "6098eb4d06848400006d786d",
      "text": "  \t一見して問題でも全体で見ると他の要素との依存関係が出来ていたり",
      "userId": "5ad57975d54cd50014068484",
      "created": 1620634445,
      "updated": 1620634495
    },
    {
      "id": "6098ea9806848400006d7869",
      "text": "  \tそういうことなのでそれが問題なのかということの他、問題だったとしても解決せずに放置・保留することが案外ベストだったりする",
      "userId": "5ad57975d54cd50014068484",
      "created": 1620634264,
      "updated": 1620634477
    },
    {
      "id": "6098eafb06848400006d786b",
      "text": "  \t\tその他このあたりも、1個は自分のページなので若干恥ずかしいですが…",
      "userId": "5ad57975d54cd50014068484",
      "created": 1620634363,
      "updated": 1620634540
    },
    {
      "id": "6098eaff06848400006d786c",
      "text": "  \t\t[/shokai/タスクを効率的に処理していくと高速にクソアプリを実装してしまう]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1620634367,
      "updated": 1620634367
    },
    {
      "id": "6098ead806848400006d786a",
      "text": "   \t[/spud-oimo/問題提起だけする#5f7adf700684840000d6a563]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1620634329,
      "updated": 1620634333
    },
    {
      "id": "6098ffad1280f00000005440",
      "text": "   \t [/icons/よさそう.icon][takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639662,
      "updated": 1620639667
    },
    {
      "id": "6098ffb21280f00000005441",
      "text": "   \t コストの観点には気づきませんでした",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639667,
      "updated": 1620639730
    },
    {
      "id": "6098ffd71280f00000005442",
      "text": "   \t  教科書をそのまま写せば予習として認められるのに、専門用語の英訳や、数式の厳密な定義を調べ始めて余計な時間を食うのと同じ構図かな？",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639704,
      "updated": 1620639814
    },
    {
      "id": "609900461280f00000005443",
      "text": "   \t  ちょっと違う気がする",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639816,
      "updated": 1620639835
    },
    {
      "id": "6098b9901280f00000c864b7",
      "text": " あとこれは自分の話になってしまうので恐縮ですが、自分は「ポジティブに言い換える」の代わりに[/takker/道具として駆使]するという語句を使っています",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620621712,
      "updated": 1620621813
    },
    {
      "id": "6098b9f61280f00000c864ba",
      "text": "  例えば器用貧乏であれグズであれ、良いか悪いか云々以前にただの事実なんですよね",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620621814,
      "updated": 1620621855
    },
    {
      "id": "6098ba1f1280f00000c864bb",
      "text": "   (事実を誤認してる場合もある)",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620621855,
      "updated": 1620621892
    },
    {
      "id": "6098eeb206848400006d7876",
      "text": "   \tレベルの高い周囲との比較で自分を過小評価してしまう、みたいな場合も考えられますね[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1620635315,
      "updated": 1620635315
    },
    {
      "id": "6098fd381280f00000005430",
      "text": "   \tあるあるです[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639032,
      "updated": 1620639042
    },
    {
      "id": "6098fd481280f00000005432",
      "text": "   \t ハードル高くして自滅するパターン",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639048,
      "updated": 1620639063
    },
    {
      "id": "6098fd681280f00000005434",
      "text": "   \t いままあ自分のことなんですけどね",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639080,
      "updated": 1620639091
    },
    {
      "id": "6098fd731280f00000005435",
      "text": "   \t  少しずつ修正しているつもり",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639091,
      "updated": 1620639102
    },
    {
      "id": "6098eeae06848400006d7875",
      "text": "   わかる、もっと言うと、それは評価者の主観でもあるわけだし、それ以上の意味合いは含まないはず[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1620635310,
      "updated": 1620635310
    },
    {
      "id": "6098eeb506848400006d7877",
      "text": "   \tしかし主観に基づく評価によって気分が左右されるということもまた事実…なのでそのあたりの気分の整え方は心得ておきたい",
      "userId": "5ad57975d54cd50014068484",
      "created": 1620635318,
      "updated": 1620635485
    },
    {
      "id": "6098fd921280f00000005436",
      "text": "    \tこれに関連したことがどこかに書いてあった気がするような……[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639122,
      "updated": 1620639139
    },
    {
      "id": "6098fda31280f00000005437",
      "text": "    \t[- 思い出したら貼りますね]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639139,
      "updated": 1620639937
    },
    {
      "id": "609900c11280f00000005444",
      "text": "    \t [うつ病の認知療法・認知行動療法（患者さんのための資料）]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639939,
      "updated": 1620639944
    },
    {
      "id": "6098b9ee1280f00000c864b8",
      "text": "  それを受けて自分がどう反応するかは自由です",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620621806,
      "updated": 1620622035
    },
    {
      "id": "6098bad41280f00000c864bf",
      "text": "  ならば、それを手持ちのカードだとみなして、他のカードと組み合わせて何を為すのかを考えればいいわけです",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620622036,
      "updated": 1620622077
    },
    {
      "id": "6098bae11280f00000c864c0",
      "text": "   もちろん、カード自体を強化したり(自己研鑽)、逆の性質を持つカードに変えたり(弱点とみなして克服)するという手段もとれます",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620622049,
      "updated": 1620622166
    },
    {
      "id": "6098bb561280f00000c864c1",
      "text": "   ただ、それらが一番優先される手段ではなく、他の無数にある手段の一つとして相対化されているのが重要なんじゃないかと思っています",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620622166,
      "updated": 1620622235
    },
    {
      "id": "6098ecc906848400006d786f",
      "text": "   \tデスネ、どうにも問題（に、見えるもの）が目の前にあると取り掛かりたくなるということはある…[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1620634825,
      "updated": 1620634871
    },
    {
      "id": "6098bb9c1280f00000c864c3",
      "text": "   [- まあ大抵は対象を問題だと認識して解決する手段しかとれないことが往々にしてあるけど]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620622235,
      "updated": 1620622286
    },
    {
      "id": "6098ed0606848400006d7870",
      "text": " また一応、該当ページを書いた文脈として、「なんか最近ネガティブな性質をポジティブに言い換えるライフハックを見るな～」みたいなことを感じていたというものがあります[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1620634886,
      "updated": 1620635113
    },
    {
      "id": "6098ede906848400006d7871",
      "text": " \tそれ自体は大いにアリだとは思うのですが、そのライフハックに「ネガティブな性質は存在してはいけない」みたいな前提を感じてなんだかな～とも思っていました（これは邪推だと思います、提案している人は励ましのつもりだろうし）",
      "userId": "5ad57975d54cd50014068484",
      "created": 1620635113,
      "updated": 1620636624
    },
    {
      "id": "6098efac06848400006d7878",
      "text": " \t何をやっても中途半端な人とか、要領の悪い人とか、それらを無理にポジティブに置き換えようとせず、それはそのままとして存在し続けても別に良くね…とは思います",
      "userId": "5ad57975d54cd50014068484",
      "created": 1620635565,
      "updated": 1620635703
    },
    {
      "id": "6098fdca1280f00000005438",
      "text": " \t ぜんぶわかる[takker.icon*3]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639179,
      "updated": 1620639186
    },
    {
      "id": "6098f2f70684840000b1dd7d",
      "text": " \tまた個人的な意見ですが、人間の[デフォルトは悲観主義]で、[楽観主義]の方が作られた状態だと思うので、ポジティブなスタンスはエネルギーに余裕があるときにやるのが望ましいかなとも思います",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620636407,
      "updated": 1620639251
    },
    {
      "id": "6098f60a06848400003f71fd",
      "text": " \t\tただまあ、人を元気づけようとして、裏目としてポジティブを強要するような[ダル絡み]になってしまうことは、割と私自身に心当たりがあり…[imo.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620637194,
      "updated": 1620639224
    },
    {
      "id": "6098fdf91280f00000005439",
      "text": " \t\t [他者を元気づけ]るのはとても難しいと思います[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639225,
      "updated": 1620639244
    },
    {
      "id": "6098fe0c1280f0000000543a",
      "text": " \t\tなるほどたしかに[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639244,
      "updated": 1620639365
    },
    {
      "id": "6098fe461280f0000000543c",
      "text": " \t\t [2021/05/09#6097aac61280f000001bdf1a]のようなケースを考えると、デフォルトは存在せず、その時その時で主義が変わるんじゃないかと思いましたが、「学問する」を外部から与えられたpotentialだとみなせば、確かに楽観主義は作られたものかもしれませんね",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639302,
      "updated": 1620639479
    },
    {
      "id": "6098fef61280f0000000543e",
      "text": " \t\t もちろん、深くつっこめば単純な二分法に帰着できないのは自明ですが、大まかなイメージとしては問題ないと思います",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639479,
      "updated": 1620639568
    },
    {
      "id": "609911280684840000c7223e",
      "text": " \t\t \t悲観・楽観の分け方は雑な二分法ですねｗ汲み取ってもらってスミマセン[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1620644136,
      "updated": 1620644187
    },
    {
      "id": "6098ff501280f0000000543f",
      "text": " \t\tもしかしたらデフォルトで楽観主義の人もいるかも？",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620639568,
      "updated": 1620639595
    },
    {
      "id": "6098b9061280f00000c864b4",
      "text": "",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620621575,
      "updated": 1620621575
    },
    {
      "id": "604fb0571280f0000067cb42",
      "text": "[/imo-memo/JavaScriptの空の波括弧]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615835223,
      "updated": 1615835225
    },
    {
      "id": "604fb0591280f0000067cb44",
      "text": " [/icons/eyes.icon][takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615835225,
      "updated": 1615835233
    },
    {
      "id": "604fb0871280f0000067cb46",
      "text": " 質問される前に回答するという高度な技をやろうかと思いましたが、[imo.icon]さん自身で調べたさそうなので控えておきます",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615835271,
      "updated": 1615835365
    },
    {
      "id": "604fb0e61280f0000067cb47",
      "text": " 参考になりそうな情報源だけ上げておきます",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615835365,
      "updated": 1615835378
    },
    {
      "id": "604fb0611280f0000067cb45",
      "text": "  [/programming-notes/引数分割束縛]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615835233,
      "updated": 1615835380
    },
    {
      "id": "6051c7091280f000004dfdea",
      "text": "   [引数分割束縛]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615972107,
      "updated": 1615972113
    },
    {
      "id": "604fb0f41280f0000067cb48",
      "text": "   関連する概念",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615835380,
      "updated": 1615835440
    },
    {
      "id": "604fb13f1280f0000067cb4b",
      "text": "    [https://cpprefjp.github.io/lang/cpp17/structured_bindings.html 構造化束縛 - cpprefjp C++日本語リファレンス]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615835454,
      "updated": 1615835454
    },
    {
      "id": "604fb1251280f0000067cb4a",
      "text": "    pythonのtuple",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615835429,
      "updated": 1615835450
    },
    {
      "id": "604fb15a1280f0000067cb4d",
      "text": "  [https://chaika.hatenablog.com/entry/2019/12/16/083000 JavaScript 分割代入な引数にデフォルト値を設定したい - かもメモ]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615835481,
      "updated": 1615835481
    },
    {
      "id": "604fb1401280f0000067cb4c",
      "text": "  [- ここまで文献上げたらもう回答したようなものな気がするけどまあいいや]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615835456,
      "updated": 1615835521
    },
    {
      "id": "60506dd10684840000613faf",
      "text": "  あら！これは非常に嬉しい[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615883730,
      "updated": 1615883730
    },
    {
      "id": "605070c30684840000613fb3",
      "text": "  \tちょっと読んだのですが、この書き方をするメリットが、1.後で書くときに簡易に出来ること、2.引数を渡す際の順番を考慮しなくてよくなること、ってことですか？",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615884484,
      "updated": 1615884509
    },
    {
      "id": "6051b23e1280f00000300c25",
      "text": "  \t 1. ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615966784,
      "updated": 1615966962
    },
    {
      "id": "6051b2f01280f00000300c34",
      "text": "  \t  user側の利点は場合によっては薄くなるかもです[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615966962,
      "updated": 1615966962
    },
    {
      "id": "6051b25c1280f00000300c27",
      "text": "   \t 　`test(0)`と書けば済むはずが、わざわざ`test({index: 0})`と書かなくてはいけなくなる",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615966813,
      "updated": 1615966992
    },
    {
      "id": "6051c6f21280f000004dfde8",
      "text": "   \t 　[名前付き引数]のデメリットです",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615972085,
      "updated": 1615972094
    },
    {
      "id": "6051b2681280f00000300c28",
      "text": "  \t 　また開発者側からすると",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615966826,
      "updated": 1615966838
    },
    {
      "id": "6051b2731280f00000300c29",
      "text": "  \t 　 code:js",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615966838,
      "updated": 1615966843
    },
    {
      "id": "6051b2791280f00000300c2a",
      "text": "  \t 　  function test({title, project}) {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615966843,
      "updated": 1615966855
    },
    {
      "id": "6051b2871280f00000300c2c",
      "text": "  \t 　    //...",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615966857,
      "updated": 1615966859
    },
    {
      "id": "6051b2851280f00000300c2b",
      "text": "  \t 　  }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615966855,
      "updated": 1615966855
    },
    {
      "id": "6051b28a1280f00000300c2d",
      "text": "  \t 　と書くか、",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615966860,
      "updated": 1615966866
    },
    {
      "id": "6051b2901280f00000300c2e",
      "text": "  \t 　 code:js",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615966866,
      "updated": 1615966869
    },
    {
      "id": "6051b2931280f00000300c2f",
      "text": "  \t 　  function text(params) {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615966869,
      "updated": 1615966875
    },
    {
      "id": "6051b2991280f00000300c30",
      "text": "   \t 　   const {title, project} = params;",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615966875,
      "updated": 1615966890
    },
    {
      "id": "6051b2a11280f00000300c31",
      "text": "   \t 　   //...",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615966883,
      "updated": 1615966890
    },
    {
      "id": "6051b2a51280f00000300c32",
      "text": "  \t 　  }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615966888,
      "updated": 1615966888
    },
    {
      "id": "6051b2a91280f00000300c33",
      "text": "  \t 　と書くかの違いなので、見方を変えるとそこまでのメリットでもないんですよね",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615966891,
      "updated": 1615966927
    },
    {
      "id": "6051b2411280f00000300c26",
      "text": "  \t 2. これが一番大きいですね[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615966787,
      "updated": 1615966997
    },
    {
      "id": "6051b4b31280f00000300c3e",
      "text": "  \t  ちなみに型付き言語なら、型である程度順番間違えを防げます",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615967413,
      "updated": 1615967510
    },
    {
      "id": "6051b5151280f00000300c3f",
      "text": "  \t   e.g. `function test(value1: string, value2: number)`を`test(0, 'test')`と呼び出すとType Errorになる",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615967511,
      "updated": 1615967598
    },
    {
      "id": "6051b53e1280f00000300c40",
      "text": "  \t  尤も引数がどれも同じ型だったりすると防ぎようがないので、あくまである程度ですね",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615967552,
      "updated": 1615967591
    },
    {
      "id": "6051b5651280f00000300c41",
      "text": "  \t   e.g. `function test(value1: string, value2: string)`は`test('foo', 'bar')`で呼び出しても`test('bar', 'foo')`で呼び出してもエラーにならない",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615967591,
      "updated": 1615967637
    },
    {
      "id": "605203bb0684840000399028",
      "text": "  \t   なるほど[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615987644,
      "updated": 1615987647
    },
    {
      "id": "60506dd30684840000613fb0",
      "text": "  \t例えば`function test(param)`ではなく`function test({param})`のような書き方は、あとでその引数に値を入れるときに便利になり、",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615883731,
      "updated": 1615884636
    },
    {
      "id": "60506fa40684840000613fb2",
      "text": "  \tで、`const greet = ({ name, msg = 'Hi' } = {}) =>`みたいな形をとるのは、ここで言えば[- nameと]`msg`の値に`\"Hi\"`をデフォルトとして指定するための書き方ってことですか？",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615884196,
      "updated": 1615966762
    },
    {
      "id": "604fb15b1280f0000067cb4e",
      "text": "\t\t\t\tといっても、これらは今の私みたいに初めたての段階だと、肌感覚であまりメリットを感じられない感じもしますがっ！",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615835483,
      "updated": 1615884689
    },
    {
      "id": "6051b3271280f00000300c36",
      "text": "\t\t\t そんな感じです[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615967018,
      "updated": 1615967046
    },
    {
      "id": "605203d60684840000399029",
      "text": "\t\t\t \tあ、カンマ区切りは複数指定ではないわけですね[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615987671,
      "updated": 1615987709
    },
    {
      "id": "605071650684840000613fb6",
      "text": "\t\tまた質問したかったことについてなんですが、[https://scrapbox.io/nota-techconf/ページタイトルに絵文字を入れて状態管理する 以前takkerさんが作ったUserScript]に`import`文が使われていたことと、それについての注意事項について以下に書かれていたので、`import`を使わない書き方のものにしてみたかったんですよね[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615884646,
      "updated": 1615885131
    },
    {
      "id": "605071ef0684840000613fb7",
      "text": "\t\t[/programming-notes/UserScriptの危険性]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615884784,
      "updated": 1615884784
    },
    {
      "id": "60506dc80684840000613fad",
      "text": "\t\t（takkerさんやyosiderさん達を疑っているわけじゃないですヨ）",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615883720,
      "updated": 1615885192
    },
    {
      "id": "60511bf8e5172d0000897023",
      "text": "\t\t　大事な心がけと思います[yosider.icon]",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1615928312,
      "updated": 1615928358
    },
    {
      "id": "6051b34c1280f00000300c38",
      "text": "\t\tおっしゃるとおりです。本当はこの部分も`import`を使わないか、`/api/code/nota-techconf`からのimportに留めるべきです[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615967054,
      "updated": 1615967139
    },
    {
      "id": "6051b3751280f00000300c39",
      "text": "\t\t　それをせず別のprojectからimportした理由は、単に同じコードを書くのが面倒くさかったからですごめんなさい……",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615967095,
      "updated": 1615967161
    },
    {
      "id": "60520408068484000039902a",
      "text": "\t\t　\t全然大丈夫ですよ～！ｗ[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615987721,
      "updated": 1615987738
    },
    {
      "id": "6050736f0684840000613fb9",
      "text": "\t\tで、コードのどの部分が使われているかを確認しながら書き換えることは勉強にもなるかな～と思って調べていたという感じです",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615885168,
      "updated": 1615885250
    },
    {
      "id": "605073c20684840000613fba",
      "text": "\t\ttakkerさんに直接答えを聞いた方が早いのは間違いないのですが、まあちょっと勉強も兼ねてやりたいので、自分ではお手上げの状態になったらまた伺っても良いですか？",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615885250,
      "updated": 1615885458
    },
    {
      "id": "6051b3bb1280f00000300c3a",
      "text": "\t\t いつでも大丈夫ですよ～[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615967165,
      "updated": 1615967175
    },
    {
      "id": "6051b3c51280f00000300c3b",
      "text": "\t\t といっても別にprogrammingは専業じゃないので、あまり教えられることはないと思います。それでもよろしければお答えします。",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615967175,
      "updated": 1615967374
    },
    {
      "id": "60520423068484000039902b",
      "text": "\t\t \tありがたし[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615987747,
      "updated": 1615987755
    },
    {
      "id": "60511b0ce5172d0000897021",
      "text": "\t\timportを使うこと自体が危ないというより、他人が編集できるUserScriptをimportすることが危ないので、importを使わないのではなく、import先のUserScriptも含めて個人プロジェクトにコピーして、個人プロジェクト内でimportするのがいいかなと思います[yosider.icon]",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1615928077,
      "updated": 1615928393
    },
    {
      "id": "60517f7b0684840000b16403",
      "text": " \t\t\tこれについてなんですが、import元になっているスクリプトがどういう関係になっているかが自分には複雑で理解できていなかったんですねｗ[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615953787,
      "updated": 1615954037
    },
    {
      "id": "60517fdf0684840000b16405",
      "text": " \t\t\tcode:script.js",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615953887,
      "updated": 1615953899
    },
    {
      "id": "60517feb0684840000b16406",
      "text": " \t\t\t import {press} from '/api/code/programming-notes/scrapbox-keyboard-emulation/script.js';",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615953900,
      "updated": 1615953900
    },
    {
      "id": "60517fec0684840000b16407",
      "text": "     import {goHeadLine} from '/api/code/takker/scrapbox-cursor-emulation/cursor.js';",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615953900,
      "updated": 1615953900
    },
    {
      "id": "60517fec0684840000b16408",
      "text": "     ",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615953900,
      "updated": 1615953900
    },
    {
      "id": "60517fec0684840000b16409",
      "text": "     let repeat = false;",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615953900,
      "updated": 1615953900
    },
    {
      "id": "60517fec0684840000b1640a",
      "text": "     // 以下略",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615953900,
      "updated": 1615953944
    },
    {
      "id": "60517fc30684840000b16404",
      "text": " \t\t\tここの1、2行目でimportされてるコードが、どういうもの・どういう意図でimportされてるのかな～というのを理解したかった",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615953859,
      "updated": 1615954151
    },
    {
      "id": "6051c748e5172d000005df48",
      "text": " \t\t\t　[/icons/なるほど.icon][yosider.icon]",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1615972169,
      "updated": 1615972181
    },
    {
      "id": "6051b4201280f00000300c3c",
      "text": " \t\t\t `import`文に説明つけたほうが良いかなあ[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615967266,
      "updated": 1615967282
    },
    {
      "id": "6051b42f1280f00000300c3d",
      "text": " \t\t\t でも[/programming-notes/scrapbox-keyboard-emulation]と[/takker/scrapbox-cursor-emulation]に飛べばなんのコードか分かるので、説明をつける必要はあまりなさそう",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1615967282,
      "updated": 1615967345
    },
    {
      "id": "60511bc7e5172d0000897022",
      "text": "\t\t\t（勝手にアドバイスしてしまいすみません）",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1615928264,
      "updated": 1615928279
    },
    {
      "id": "60517f3c0684840000b16400",
      "text": " \t\t\tや！全然ありがたいです！[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615953725,
      "updated": 1615953741
    },
    {
      "id": "605073490684840000613fb8",
      "text": "",
      "userId": "5ad57975d54cd50014068484",
      "created": 1615885129,
      "updated": 1615885129
    }
  ]
}