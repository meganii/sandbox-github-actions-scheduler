{
  "id": "64da125c08f4ee001ce86752",
  "title": "雑に見るUp and Running with Remix",
  "created": 1692013151,
  "updated": 1692015967,
  "lines": [
    {
      "id": "64da125c08f4ee001ce86752",
      "text": "雑に見るUp and Running with Remix",
      "userId": "59fb21121207900012774b17",
      "created": 1692013151,
      "updated": 1692013169
    },
    {
      "id": "64da125f774b17000003ce98",
      "text": "https://egghead.io/courses/up-and-running-with-remix-b82b6bb6",
      "userId": "59fb21121207900012774b17",
      "created": 1692013151,
      "updated": 1692013173
    },
    {
      "id": "64da125f774b17000003ce9a",
      "text": "　https://remix.run/docs/en/1.19.3/tutorials/blog#quickstart の動画版",
      "userId": "59fb21121207900012774b17",
      "created": 1692013152,
      "updated": 1692014004
    },
    {
      "id": "64da15ae774b170000933709",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1692013998,
      "updated": 1692013998
    },
    {
      "id": "64da127b774b17000003cea0",
      "text": "[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1692013180,
      "updated": 1692013472
    },
    {
      "id": "64da13a1774b17000003cea4",
      "text": "　新しくWebアプリを1つ作ろうとしている。Create react appで作っていたけどメンテナンスモードになっているので不採用。いくつか見た中で[Remix]を見繕ったのでチュートリアルをやる",
      "userId": "59fb21121207900012774b17",
      "created": 1692013473,
      "updated": 1692015763
    },
    {
      "id": "64da13d5774b17000003cea6",
      "text": "　せっかくなのでここでやってみる",
      "userId": "59fb21121207900012774b17",
      "created": 1692013526,
      "updated": 1692013539
    },
    {
      "id": "64da13e4774b17000003cea9",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1692013541,
      "updated": 1692013541
    },
    {
      "id": "64da13e4774b17000003ceaa",
      "text": "4",
      "userId": "59fb21121207900012774b17",
      "created": 1692013541,
      "updated": 1692013755
    },
    {
      "id": "64da1583774b170000933705",
      "text": " フロント側にもルーティングのAPIを定義できる",
      "userId": "59fb21121207900012774b17",
      "created": 1692013956,
      "updated": 1692013956
    },
    {
      "id": "64da1611774b17000093370b",
      "text": "　　レンダリングしなくてもブラウザがリクエストをするのでpublic APIと同じ扱いになる点に注意",
      "userId": "59fb21121207900012774b17",
      "created": 1692014097,
      "updated": 1692014097
    },
    {
      "id": "64da1583774b170000933706",
      "text": "　　これができると何が嬉しいの？[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1692013956,
      "updated": 1692013956
    },
    {
      "id": "64da1581774b170000933702",
      "text": "　loader関数を定義すると",
      "userId": "59fb21121207900012774b17",
      "created": 1692013953,
      "updated": 1692013953
    },
    {
      "id": "64da1581774b170000933703",
      "text": "　　サーバーでレンダリングされてHTMLが返る",
      "userId": "59fb21121207900012774b17",
      "created": 1692013953,
      "updated": 1692013953
    },
    {
      "id": "64da1581774b170000933704",
      "text": "　　ブラウザがアクセスするとfetchした時にデータを受け取れる",
      "userId": "59fb21121207900012774b17",
      "created": 1692013953,
      "updated": 1692013953
    },
    {
      "id": "64da14f5774b1700009336fd",
      "text": "　　へー[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1692013814,
      "updated": 1692013961
    },
    {
      "id": "64da1546774b170000933701",
      "text": "5",
      "userId": "59fb21121207900012774b17",
      "created": 1692013894,
      "updated": 1692013977
    },
    {
      "id": "64da1599774b170000933708",
      "text": " データをロジックのページに直で書くのは嫌だから切り離す",
      "userId": "59fb21121207900012774b17",
      "created": 1692013978,
      "updated": 1692014035
    },
    {
      "id": "64da1589774b170000933707",
      "text": " .server.tsはクライアントにはバンドルされないようにcompilerが処理する",
      "userId": "59fb21121207900012774b17",
      "created": 1692013962,
      "updated": 1692014780
    },
    {
      "id": "64da18a6774b17000093370c",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1692014758,
      "updated": 1692014758
    },
    {
      "id": "64da1bb5774b170000c441f9",
      "text": "6",
      "userId": "59fb21121207900012774b17",
      "created": 1692015541,
      "updated": 1692015542
    },
    {
      "id": "64da1c52774b170000c44203",
      "text": " loaderに型をつけてTypeScriptをわからせる",
      "userId": "59fb21121207900012774b17",
      "created": 1692015700,
      "updated": 1692015730
    },
    {
      "id": "64da1bb6774b170000c441fb",
      "text": " >TypeScript isn't super jazzed about what we're doing in here",
      "userId": "59fb21121207900012774b17",
      "created": 1692015542,
      "updated": 1692015544
    },
    {
      "id": "64da1bb8774b170000c441fc",
      "text": "  [GPT-4.icon] このフレーズ「TypeScript isn't super jazzed about what we're doing in here」は、カジュアルな言い回しで、TypeScriptがプログラムで行っていることに対して完全に満足していない、または問題があるかもしれないという意味です。",
      "userId": "59fb21121207900012774b17",
      "created": 1692015544,
      "updated": 1692015595
    },
    {
      "id": "64da1be8774b170000c441ff",
      "text": "  「[super jazzed]」: 非常に興奮している、または満足しているという意味の俗語",
      "userId": "59fb21121207900012774b17",
      "created": 1692015592,
      "updated": 1692015650
    },
    {
      "id": "64da1be8774b170000c44200",
      "text": "  この文脈では: TypeScriptがあなたのコードに対して警告やエラーを出しているかもしれない",
      "userId": "59fb21121207900012774b17",
      "created": 1692015592,
      "updated": 1692015602
    },
    {
      "id": "64da1be8774b170000c44201",
      "text": "  つまり: あなたが書いているコードがTypeScriptの厳格な型チェックに完全に合致していない可能性がある",
      "userId": "59fb21121207900012774b17",
      "created": 1692015592,
      "updated": 1692015604
    },
    {
      "id": "64da1be8774b170000c44202",
      "text": "  この表現はプログラマー間のカジュアルなコミュニケーションでよく使用されるもので、具体的な問題を指摘しているわけではないことが多いです。",
      "userId": "59fb21121207900012774b17",
      "created": 1692015592,
      "updated": 1692015605
    },
    {
      "id": "64da1d24774b170000c44204",
      "text": " getPosts()の戻り値の型を指定する",
      "userId": "59fb21121207900012774b17",
      "created": 1692015909,
      "updated": 1692015919
    },
    {
      "id": "64da1d2e774b170000c44205",
      "text": "  `typeof getPosts`で関数が返るので、`ReturnType<typeof getPosts>`とする",
      "userId": "59fb21121207900012774b17",
      "created": 1692015919,
      "updated": 1692015967
    },
    {
      "id": "64da1bb5774b170000c441fa",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1692015542,
      "updated": 1692015542
    }
  ]
}