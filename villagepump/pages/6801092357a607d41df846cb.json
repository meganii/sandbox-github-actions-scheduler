{
  "id": "6801092357a607d41df846cb",
  "title": "JSDocでよくね？の過激ver",
  "created": 1744898340,
  "updated": 1748417485,
  "lines": [
    {
      "id": "6801092357a607d41df846cb",
      "text": "JSDocでよくね？の過激ver",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "68010923000000000069387e",
      "text": "✂ from [2025/04/17]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "680109230000000000693880",
      "text": "[綾坂こと.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "680109230000000000693881",
      "text": " https://qiita.com/MadakaHeri/items/45e514dfbbc85fd64c77",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "680109230000000000693882",
      "text": " \t\t著者ブチ切れてて草[Summer498.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "680109230000000000693883",
      "text": " \t[JSDocでよくね？]の過激verだ(？？？？)",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "680109230000000000693884",
      "text": " \t改めて言語化を試みる",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "680109230000000000693885",
      "text": " \t\tたぶん、「型ヒントを得るためにわざわざトランスパイルの手間を挟む必要性を感じない」かなぁ",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "680109230000000000693886",
      "text": " \t\t JSは極論環境構築なしで動くような手軽な言語なのに、そこに手間を足す意義は……？",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "680109230000000000693887",
      "text": " \t\t \t(ブラウザはみなさんお持ちですよね、という前提)",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "680109230000000000693888",
      "text": " \t\t \tESMはCSP(Content-Security-Policy)があると読み込ませるために自分のドメインにコピーする必要があったような[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "680109230000000000693889",
      "text": " \t\t \t\t[ES Modules]は専門外なのよなぁ、一応困ったことはないがなんともいえない[綾坂こと.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "68010923000000000069388a",
      "text": " \t\t \t\t\t[GitHub]に置かれてるやつを[jsDelivr]経由でimportするのはよくやる",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "68010923000000000069388b",
      "text": " \t\t \t\t\t\t今のところそれで十分と感じている",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "68010923000000000069388c",
      "text": " \t\t \t\tUIはReactをminify+bundle無しでESM読込みすると転送量が爆発するし",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "68010923000000000069388d",
      "text": " \t\t \t\t\tちなみにPreactはビルドなしワークフローというページが用意されている[. https://preactjs.com/guide/v10/no-build-workflows]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "680239f70000000000c81311",
      "text": " \t\tコメントでも指摘されているけど、JS+ESM+JSDocが何を示しているのかよくわからなかった[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1744976369,
      "updated": 1744976388
    },
    {
      "id": "68023a0b0000000000c81312",
      "text": " \t\t JS+JSDocはともかく、ESMがでてくるのはなにゆえ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1744976388,
      "updated": 1744976427
    },
    {
      "id": "68023a1e0000000000c81313",
      "text": " \t\t  bundlerの話か？でもそれは型と関係ないような",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1744976407,
      "updated": 1744976420
    },
    {
      "id": "68023a350000000000c81315",
      "text": " \t\t あとJS+JSDocはTypeScriptと(declare周りを除いて)同じことができるから、JS+JSDocを採用しているのならTypeScriptを採用しているのとなにもかわらないような",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744976431,
      "updated": 1744977010
    },
    {
      "id": "68023c720000000000237a0f",
      "text": " \t\t JS+JSDoc+ESMはブラウザで直接動く[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744977010,
      "updated": 1744977232
    },
    {
      "id": "6834e736000000000085803a",
      "text": " \t\t 「[JavaScript] + [JSDoc] + [ES Modules]」と「[Typescript] + [CommonJS] Modules」？[綾坂こと.icon]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1748297526,
      "updated": 1748297590
    },
    {
      "id": "6834e7250000000000858039",
      "text": " \t\t\t\tモジュール周り何も知らない状態で言ってるので見当違いならごめん",
      "userId": "62919f6444e78d001d73e522",
      "created": 1748297510,
      "updated": 1748297528
    },
    {
      "id": "683585fe0000000000c41067",
      "text": " \t\t\t\t[CommonJS]は現代ではまず使わないので関係ないと思います[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1748338176,
      "updated": 1748338197
    },
    {
      "id": "6836a61a00000000008290b0",
      "text": " \t\t\t\t\tほな違うか〜[綾坂こと.icon]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1748411930,
      "updated": 1748411935
    },
    {
      "id": "683586140000000000c41068",
      "text": " \t\t\t\tTSで記述するときでもESMが前提です",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1748338198,
      "updated": 1748338212
    },
    {
      "id": "6835910c0000000000bfa59a",
      "text": " \t\t\t\tNode.js REPLだとCJSだったり[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1748341005,
      "updated": 1748341016
    },
    {
      "id": "68010923000000000069388e",
      "text": " \tもっと過激になると型無しのJSになったりw[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744977258
    },
    {
      "id": "68010923000000000069388f",
      "text": "\t\t\tintellisenseやドキュメント作成目的ならこれでいいんじゃないの",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744898340,
      "updated": 1744898340
    },
    {
      "id": "680109230000000000693890",
      "text": "   少し前に出た[Hyper](nue.js)は型なしのJSで実装されてた[wogikaze.icon]",
      "userId": "64099110a39a5c001c8a016e",
      "created": 1744898340,
      "updated": 1748319827
    },
    {
      "id": "68353e5400000000000c6e77",
      "text": "    > これは、関心を適切に分離することを意味します。TypeScriptをあらゆる場所で使うという考え方から脱却すれば、本当に重要なことに集中できます。複雑なビジネスロジックのためのシステムプログラミング、洗練されたインターフェースのためのデザインエンジニアリング、シームレスなエクスペリエンスのためのUX開発などです。真の静的型付けは、コアビジネスロジックなど、付加価値を生み出す部分でのみ使用し、プレゼンテーション層は簡潔でセマンティックな状態を維持します。[FAQ - Nue https://nuejs.org/docs/faq.html]",
      "userId": "64099110a39a5c001c8a016e",
      "created": 1748319828,
      "updated": 1748320031
    },
    {
      "id": "68353f2d00000000000c6e78",
      "text": "    流石にここまで型がないとメソッドの補完もできないし不便",
      "userId": "64099110a39a5c001c8a016e",
      "created": 1748320046,
      "updated": 1748320090
    },
    {
      "id": "68357fcf00000000001a07b0",
      "text": "",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336591,
      "updated": 1748336591
    },
    {
      "id": "6835817a00000000001a07b6",
      "text": "[taktamur.icon]",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748337018,
      "updated": 1748337018
    },
    {
      "id": "68357d7a00000000001a079a",
      "text": " 自分は型あり言語大好きだし、TypeScriptイイネ！って思ってるから元記事読んで突っ込みたくなったのもあるけど、元記事で言わんとしている事もちょっとわかる気がした。なのでつらつらと感想文。",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748335994,
      "updated": 1748338886
    },
    {
      "id": "6835800f00000000001a07b2",
      "text": " \t「JavaScriptの暴れ馬的な面を意識しつつ、楽するためのサポートだけを享受するスタイルの提案」、ってのが元記事の言いたいことかなぁと思った",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336656,
      "updated": 1748338902
    },
    {
      "id": "6835807900000000001a07b4",
      "text": " \t以下、元記事で共感したところ",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336761,
      "updated": 1748336770
    },
    {
      "id": "68357f8b00000000001a07aa",
      "text": "  \tめんどくさい",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336524,
      "updated": 1748337086
    },
    {
      "id": "68357db500000000001a079b",
      "text": "  \t\tnode.jsを使ってTypeScriptで書こうとしたら、設定が複雑奇怪になってソースを書いてるのか設定いじってるのか分からなくなる時がある",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336054,
      "updated": 1748337086
    },
    {
      "id": "68357df300000000001a079c",
      "text": "  \t\t\t→これはDenoとか、別の環境を触ったら印象変わるかもしれない",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336115,
      "updated": 1748337086
    },
    {
      "id": "68357e0500000000001a079d",
      "text": "  \t\t\t→少なくとも自分のプライベートでは、node.js + TypeScriptはやりたくない（めんどくさい）",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336133,
      "updated": 1748337892
    },
    {
      "id": "6835905b0000000000bfa599",
      "text": "  \t\t\tテンプレートを使えばだいぶ改善される[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1748340828,
      "updated": 1748340885
    },
    {
      "id": "68357e1b00000000001a079e",
      "text": "  \t半端",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336156,
      "updated": 1748337086
    },
    {
      "id": "68357f9500000000001a07ab",
      "text": "  \t\tTypeScriptの型情報が実行時に消え失せるのはその通りで、Javaとかと比べると半端に見えるかも",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336533,
      "updated": 1748337086
    },
    {
      "id": "68357e6200000000001a079f",
      "text": "  \t\t\tテクニック的に回避する方法はあるけど",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336226,
      "updated": 1748337086
    },
    {
      "id": "6835814700000000001a07b5",
      "text": "  \t\t外部からの入力のバリデーションをちゃんとやらないと、stringにintやundefinedが混ざり込む→実行時エラー",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336968,
      "updated": 1748337086
    },
    {
      "id": "68357e6c00000000001a07a0",
      "text": "  \t\t仕様として半端になったなぁと思う箇所もある",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336237,
      "updated": 1748337680
    },
    {
      "id": "6835840f00000000006463c1",
      "text": "  \t\t\t（歴史的経緯とか他言語どうなってるとか色々と膨らみそうではある）",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748337680,
      "updated": 1748337680
    },
    {
      "id": "68357e9100000000001a07a1",
      "text": "  \t\t\tcode:typescipt",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336274,
      "updated": 1748337086
    },
    {
      "id": "68357f9d00000000001a07ac",
      "text": "  \t\t\t const a = [1,2,3];",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336541,
      "updated": 1748337086
    },
    {
      "id": "68357fa100000000001a07ad",
      "text": "  \t\t\t const b:number = a[4]; // ここでnumber|undefinedになるのを検出して欲しかったなぁ。。",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336545,
      "updated": 1748337086
    },
    {
      "id": "6836a4e000000000008290a9",
      "text": "  \t\t\t↑`Array#at()`だと`number|undefined`になるんですけどねぇ……[綾坂こと.icon]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1748411616,
      "updated": 1748411637
    },
    {
      "id": "6836a4f400000000008290aa",
      "text": "  \t\t\t\tちょっと困ることはある",
      "userId": "62919f6444e78d001d73e522",
      "created": 1748411637,
      "updated": 1748411654
    },
    {
      "id": "6836b6cc0000000000a76bfd",
      "text": "  \t\t\t\t[noUncheckedIndexedAccess]のことか[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1748416205,
      "updated": 1748416214
    },
    {
      "id": "68357eac00000000001a07a3",
      "text": " \tJavaScriptはかなりの暴れ馬な言語だと思う。",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336300,
      "updated": 1748336895
    },
    {
      "id": "68357fb900000000001a07af",
      "text": "\t\t\tなんでも出来るが乗り手の力量が求められるようなイメージ",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336570,
      "updated": 1748336903
    },
    {
      "id": "683583a500000000006463c0",
      "text": "\t\t\t\t正直自分は乗りこなせる気がしない",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748337573,
      "updated": 1748337588
    },
    {
      "id": "68357f4c00000000001a07a8",
      "text": "\t\t\tTypsScript→JavaScriptにトランスバイルするパターンだと、JavaScriptの暴れ馬的性質が見えなくなって、注意ができなくなってしまう危険性はある、のかも",
      "userId": "62919f6444e78d001d73e522",
      "created": 1748336460,
      "updated": 1748412455
    },
    {
      "id": "68357f7b00000000001a07a9",
      "text": "\t\t\t\t気軽にチェーンソーを振り回してるようにも見えるかも？",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336508,
      "updated": 1748336918
    },
    {
      "id": "6836a8280000000000f15a1b",
      "text": "\t\t\t暴れ馬←それはそう[綾坂こと.icon]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1748412456,
      "updated": 1748412461
    },
    {
      "id": "6836a82d0000000000f15a1c",
      "text": "\t\t\t\t[JS Is Weird]しかり、あまりにも暴れ馬すぎる",
      "userId": "62919f6444e78d001d73e522",
      "created": 1748412462,
      "updated": 1748412631
    },
    {
      "id": "6836a88b0000000000f15a1d",
      "text": "\t\t\t\t現代JavaScriptには暴れさせずに書くメソッドが確立してきているとは思う (相対的に)平和 [綾坂こと.icon]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1748412555,
      "updated": 1748412591
    },
    {
      "id": "68357fd300000000001a07b1",
      "text": "",
      "userId": "58a90dd3ee5de7001150db17",
      "created": 1748336596,
      "updated": 1748336919
    },
    {
      "id": "68369a1e0000000000c99b87",
      "text": "[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748408863,
      "updated": 1748408864
    },
    {
      "id": "68369a210000000000c99b89",
      "text": "　JavaScriptもTypeScriptも双方の特徴を正しく理解していて、その上でJSを選ぶなら仕方ないと思うけど",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748408865,
      "updated": 1748408898
    },
    {
      "id": "68369a420000000000c99b8a",
      "text": "　世の中の大半はTSを知らないでJSを使う人なので、上の記事を読んで安易にJSに飛びつく人がいるとしたら如何なものかと思う",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748408898,
      "updated": 1748408955
    },
    {
      "id": "68369a7c0000000000c99b8b",
      "text": "　　JSは一周回って理解のある[上級者向け]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748408956,
      "updated": 1748409983
    },
    {
      "id": "68369bd50000000000c99b8c",
      "text": "　TypeScriptによる恩恵をちゃんと理解しているのに、それらを丸ごと捨ててもいい理由に一切触れていないのが謎すぎる",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748409301,
      "updated": 1748409925
    },
    {
      "id": "68369bf70000000000c99b8d",
      "text": "　　>TypeScriptの最大の魅力は、補完、ジャンプ、インテリセンスといったIDE体験の向上ですね。",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748409336,
      "updated": 1748409339
    },
    {
      "id": "68369bfb0000000000c99b8e",
      "text": "　　これらの魅力があっても、TSは修正コストやビルド時間が長いから使いたくないという意見ならわかる",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748409339,
      "updated": 1748409485
    },
    {
      "id": "68369c2c0000000000c99b8f",
      "text": "  　でもそれなら複数の観点から判断基準を記載すべきであり、記事のように「TSを使うべきではない」という結論に直接持っていかれると理論が飛躍しているように感じられる",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748409389,
      "updated": 1748409453
    },
    {
      "id": "68369c880000000000c99b92",
      "text": "  IDE体験の向上はめちゃくちゃ大事だと思うけれど、それ本当に捨ててもいいの？",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748409480,
      "updated": 1748409518
    },
    {
      "id": "68369cad0000000000c99b93",
      "text": "  　コード解析がしづらくなってかえって[メンテナンス性]落ちると思うけど大丈夫？",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748409518,
      "updated": 1748409905
    },
    {
      "id": "68369de40000000000c99b98",
      "text": "  　型情報を明記しないで後続メンバーへの[仕事の引き継ぎ]ちゃんとうまくやれる？",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748409828,
      "updated": 1748409881
    },
    {
      "id": "68369ccf0000000000c99b94",
      "text": "  　設計書あれば全部問題ないという体で考えていない？",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748409551,
      "updated": 1748409578
    },
    {
      "id": "68369d110000000000c99b95",
      "text": "  TSを使うとコード改修の際に型定義も変更しなければならないから、結果的に修正コストが増大するはわかる",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748409618,
      "updated": 1748409677
    },
    {
      "id": "68369d4c0000000000c99b96",
      "text": "  　でもそれでいきなりTSやめるとするのではなく、TSとの向き合い方をもう少し見直した方がいい気がする",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748409677,
      "updated": 1748409815
    },
    {
      "id": "68369d730000000000c99b97",
      "text": "  　[単一責務原則]とかで工夫して型修正の際の影響範囲を減らすとかできそうだけどな",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748409716,
      "updated": 1748409755
    },
    {
      "id": "6836a57600000000008290ad",
      "text": "  補完もジャンプもインテリセンスも、[JavaScript] + [JSDoc] + [@ts-check]なら全部使える[綾坂こと.icon]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1748411767,
      "updated": 1748411820
    },
    {
      "id": "6836a5ab00000000008290ae",
      "text": "  \t「それらを丸ごと捨ててもいい理由に一切触れていない」のは「そもそも捨ててないから」だと思う",
      "userId": "62919f6444e78d001d73e522",
      "created": 1748411820,
      "updated": 1748411843
    },
    {
      "id": "6836b3aa000000000093c811",
      "text": "  \t　記事を見た感じはTSの型そのものを否定してJSに回帰しようとしているように見受けられるため、違うかと[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748415403,
      "updated": 1748415450
    },
    {
      "id": "6836b3e6000000000093c812",
      "text": "  \t　結局TSの型使ってたらJSの柔軟性は得られないので",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748415462,
      "updated": 1748415497
    },
    {
      "id": "6836b408000000000093c813",
      "text": "  \t　一部だけ型定義するという話であれば、フレームワークの問題じゃなく運用の話です",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748415497,
      "updated": 1748415523
    },
    {
      "id": "6836a5c200000000008290af",
      "text": "  \t(私が補完とジャンプとインテリセンスがそれぞれ何かを間違えていなければこれでいいはず)",
      "userId": "62919f6444e78d001d73e522",
      "created": 1748411843,
      "updated": 1748411894
    },
    {
      "id": "6836a8ec0000000000f15a1e",
      "text": "  \tIDE体験の向上のためにわざわざトランスパイルの手間まで足す必要性はなくない？みたいな主張をしたい",
      "userId": "62919f6444e78d001d73e522",
      "created": 1748412653,
      "updated": 1748412749
    },
    {
      "id": "6836ba6b00000000003c98c8",
      "text": "  \t　TSの型やその他機能が本当に必要かどうかの議論はあっていいと思う[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748417132,
      "updated": 1748417195
    },
    {
      "id": "6836ba7e00000000003c98c9",
      "text": "  \t　　無ければトランスパイル時間を短縮できるメリットがあるので",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748417150,
      "updated": 1748417166
    },
    {
      "id": "6836bac200000000003c98cb",
      "text": "  \t　　[JSDocでよくね？]に関連する",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748417218,
      "updated": 1748417229
    },
    {
      "id": "6836bad700000000003c98cc",
      "text": "  \t　　[JSDocもいらなくね？]まで話していいと思う",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748417239,
      "updated": 1748417259
    },
    {
      "id": "6836b6b20000000000e4b8fa",
      "text": "  ビルドに時間がかかるという話もあったけど、具体的に何のこと指してるのかまではちゃんと読んでない[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748416179,
      "updated": 1748416208
    },
    {
      "id": "6836b6d10000000000e4b8fb",
      "text": "  　トランスパイルがJSDoc削除より時間がかかるなら気になるな",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748416209,
      "updated": 1748416232
    },
    {
      "id": "6836b8b900000000003c98c3",
      "text": "  　　処理内容は互いにコードを削除するだけで双方そんなに複雑じゃないだろうから、[import type]をただのimportとして書くとかやってなければそんなに変わらない気がする",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748416697,
      "updated": 1748416770
    },
    {
      "id": "6836bbc600000000003c98cd",
      "text": "  　　TSは構文解析の手間があるか",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748417478,
      "updated": 1748417485
    },
    {
      "id": "6836b6e80000000000e4b8fc",
      "text": "  　Reactなどでバンドルまでの時間がかかると言っているのなら、それはJSでも同じという話になる",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748416232,
      "updated": 1748416264
    },
    {
      "id": "6836b94a00000000003c98c5",
      "text": "  　　tsc以外はビルド時に型を参照しない",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748416842,
      "updated": 1748416856
    },
    {
      "id": "6836b9b000000000003c98c7",
      "text": "  　　　tscは型チェックを真面目にやるのもあって激遅",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748416945,
      "updated": 1748416959
    },
    {
      "id": "6836b98b00000000003c98c6",
      "text": "  　　てかnpmでTSのまま公開してるやつそんな無いだろうから、ライブラリやフレームワークまで含めたビルドパフォーマンスはJS/TSでそんなに変わらないはず",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748416908,
      "updated": 1748416931
    },
    {
      "id": "68369a1e0000000000c99b88",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1748408863,
      "updated": 1748408863
    }
  ]
}