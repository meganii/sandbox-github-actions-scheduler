{
  "id": "6366c7b6c5892c00233deae4",
  "title": "Object.is()の挙動",
  "created": 1667680183,
  "updated": 1667695220,
  "lines": [
    {
      "id": "6366c7b6c5892c00233deae4",
      "text": "Object.is()の挙動",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680183,
      "updated": 1667680194
    },
    {
      "id": "6366c7b77838e30000611558",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680183,
      "updated": 1667680203
    },
    {
      "id": "6366c7c87838e30000611567",
      "text": "[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680200,
      "updated": 1667680201
    },
    {
      "id": "6366c7b77838e30000611559",
      "text": " [https://gyazo.com/1002f101fbcf7a552b5986e4d874cffe]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680183,
      "updated": 1667680213
    },
    {
      "id": "6366c7b77838e3000061155a",
      "text": " \tどういうことやねん",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680183,
      "updated": 1667680213
    },
    {
      "id": "6366c7b77838e3000061155b",
      "text": " \t中身も参照も同じだと思うんだけど、[Object.is()]の結果は常にfalse",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680183,
      "updated": 1667680213
    },
    {
      "id": "6366c7b77838e3000061155c",
      "text": " \t一番上の階層の配列の参照先が違うから常にfalseを吐いてる？",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680183,
      "updated": 1667680213
    },
    {
      "id": "6366c7b77838e3000061155d",
      "text": " \t\t[https://gyazo.com/874e3c8bc29da16df15d7725017a499a]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680183,
      "updated": 1667680213
    },
    {
      "id": "6366c7b77838e3000061155e",
      "text": " \t\t配列の参照先が違うのはおそらく確か",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680183,
      "updated": 1667680213
    },
    {
      "id": "6366c7b77838e3000061155f",
      "text": " \t\t[Array.prototype.slice()]は[シャローコピー]だったはずだし、[スプレッド構文]か`[]`の囲み自体が参照先を変えている？",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680183,
      "updated": 1667680213
    },
    {
      "id": "6366c7b77838e30000611560",
      "text": " \t\t\t[- 内部仕様にそこまで詳しくないので、誰か教えて欲しいです]（自己解決）",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680183,
      "updated": 1667680213
    },
    {
      "id": "6366c7b77838e30000611561",
      "text": " \t\t\t[https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Operators/Spread_syntax#配列リテラルでのスプレッド構文 配列リテラルでのスプレッド構文 - スプレッド構文 - JavaScript | MDN]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680183,
      "updated": 1667680213
    },
    {
      "id": "6366c7b77838e30000611562",
      "text": " \t\t\t↑（[スプレッド構文]のページ）に「[配列を複製する]」という項目があった",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680183,
      "updated": 1667680280
    },
    {
      "id": "6366c7b77838e30000611563",
      "text": " \t\t\t>コピーは 1 段階の深さで行われます。そのため、次の例のような多次元配列のようなオブジェクトをコピーする場合には適さないでしょう。",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680183,
      "updated": 1667680213
    },
    {
      "id": "6366c7b77838e30000611564",
      "text": " \t\t\t>([Object.assign()] についても同じことが言えます。)",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680183,
      "updated": 1667680213
    },
    {
      "id": "6366c7b77838e30000611565",
      "text": " \t\t\t\t1深度という条件付きではあるけれど、[Object.is()]を騙す程度なら十分かな",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680183,
      "updated": 1667680213
    },
    {
      "id": "636702597838e30000cec99a",
      "text": " \t\t今思ったけど[Array.prototype.slice()]は要らなかったな",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667695194,
      "updated": 1667695220
    },
    {
      "id": "6366c7b77838e30000611566",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1667680183,
      "updated": 1667680183
    }
  ]
}