{
  "id": "615440de5f7d44001d501704",
  "title": "二項演算",
  "created": 1632911583,
  "updated": 1633140618,
  "lines": [
    {
      "id": "615440de5f7d44001d501704",
      "text": "二項演算",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1632911583,
      "updated": 1632911583
    },
    {
      "id": "615440df1280f000005ec1a8",
      "text": "2つの変数の各定義域と値域が同じ[函数]のこと",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1632911583,
      "updated": 1632911643
    },
    {
      "id": "615440e01280f000005ec1a9",
      "text": " [$ \\mu:A\\times A\\to A]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1632911584,
      "updated": 1632911621
    },
    {
      "id": "615440ee1280f000005ec1aa",
      "text": " 入力と出力が同じ型じゃないといけないのか。[/icons/知らんかった.icon][takker.icon][yosider.icon][基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1632911599,
      "updated": 1633137398
    },
    {
      "id": "6154608ee5172d0000e66348",
      "text": " 　そうじゃなくても二項演算と呼ぶ場合もあるらしい",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1632919694,
      "updated": 1632919708
    },
    {
      "id": "615441061280f000005ec1ab",
      "text": " 　　[https://ja.wikipedia.org/wiki/二項演算#外部二項演算 二項演算#外部二項演算 - Wikipedia]",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1632911623,
      "updated": 1632919709
    },
    {
      "id": "6154607ae5172d0000e66346",
      "text": "\t入力と出力が違う型になる例には、`==`とかある[mrsekut.icon]",
      "userId": "5b4ea932de544f0014198270",
      "created": 1632919674,
      "updated": 1633140588
    },
    {
      "id": "6157bf671982700000ddc04e",
      "text": "\t\t`2 == 3`→ `False`",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633140584,
      "updated": 1633140584
    },
    {
      "id": "6157bf671982700000ddc04f",
      "text": "",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633140584,
      "updated": 1633140618
    },
    {
      "id": "6157b40319827000008104d4",
      "text": "",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633137667,
      "updated": 1633137667
    },
    {
      "id": "6157bf6d1982700000ddc050",
      "text": "",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633140589,
      "updated": 1633140589
    },
    {
      "id": "6157b3f319827000008104d1",
      "text": "集合に、[二項演算]と[単位元]を入れると[モノイド]になる",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633137652,
      "updated": 1633138172
    },
    {
      "id": "6157b60819827000008104e3",
      "text": "\t群とかよりいくらか一般的なやつ[mrsekut.icon]",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633138185,
      "updated": 1633138191
    },
    {
      "id": "6157b41019827000008104d5",
      "text": "\ttable:例",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633137680,
      "updated": 1633137685
    },
    {
      "id": "6157b41419827000008104d6",
      "text": "\t 集合\t二項演算\t単位元\t連結できる！",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633137685,
      "updated": 1633137717
    },
    {
      "id": "6157b42119827000008104d7",
      "text": "\t String\t<>\t\"\"\t\"ho\" <> \"ge\" <> \"piyo\" (== \"hogepiyo\")",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633137697,
      "updated": 1633137783
    },
    {
      "id": "6157b46019827000008104d8",
      "text": "\t Int\t*\t1\t1*2*3",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633137760,
      "updated": 1633137799
    },
    {
      "id": "6157b3f619827000008104d2",
      "text": "\t\tInt\t+\t0\t1+2+3",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633137654,
      "updated": 1633137804
    },
    {
      "id": "6157b48d19827000008104da",
      "text": "\t\tList\t++\t[]\t`[1,2,3] ++ [3,4,5] ++ [6]`",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633137805,
      "updated": 1633138407
    },
    {
      "id": "6157b47919827000008104d9",
      "text": "\t補足",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633137786,
      "updated": 1633137865
    },
    {
      "id": "6157b4c919827000008104dc",
      "text": "\t\t`<>`は、Haskellの文字列結合。",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633137865,
      "updated": 1633137875
    },
    {
      "id": "6157b4d319827000008104dd",
      "text": "\t\t\tJSなら`.concat()`とか`+`とか",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633137876,
      "updated": 1633137918
    },
    {
      "id": "6157b4c919827000008104db",
      "text": "\tこれを見ると、入力と出力が同じな感じもなんとなくわかる[mrsekut.icon]",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633137865,
      "updated": 1633138105
    },
    {
      "id": "6157b5a919827000008104e2",
      "text": " なるほど、[入れ子]にできるという特徴があるんですね[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633138090,
      "updated": 1633139566
    },
    {
      "id": "6157bb631280f000000650ef",
      "text": "  入力と出力が同じ型の函数を特別視するのも納得がいく",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633139556,
      "updated": 1633140594
    },
    {
      "id": "6157bf711982700000ddc051",
      "text": "\t集合が`Int`で、二項演算が`==`だとモノイドにはならない",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633140594,
      "updated": 1633140594
    },
    {
      "id": "6157bef31982700000ddc04d",
      "text": "",
      "userId": "5b4ea932de544f0014198270",
      "created": 1633140467,
      "updated": 1633140467
    }
  ]
}