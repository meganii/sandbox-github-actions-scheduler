{
  "id": "6744f440c53e20b2348598f2",
  "title": "Encoding Living Standard",
  "created": 1732572234,
  "updated": 1732572302,
  "lines": [
    {
      "id": "6744f440c53e20b2348598f2",
      "text": "Encoding Living Standard",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732572234,
      "updated": 1732572234
    },
    {
      "id": "6744f48b71b3c20000492fb3",
      "text": "[whatwg]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732572300,
      "updated": 1732572302
    },
    {
      "id": "6744f44a71b3c20000492fa9",
      "text": "https://triple-underscore.github.io/Encoding-ja.html#preface",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732572235,
      "updated": 1732572235
    },
    {
      "id": "6744f46971b3c20000492fad",
      "text": ">1. 序",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732572265,
      "updated": 1732572266
    },
    {
      "id": "6744f46971b3c20000492fae",
      "text": "> UTF-8 符号化法は、 普遍的な有符号文字集合である Unicode の交換に最も適切な符号化法である。 よって，この仕様は、 新たな［ プロトコル, 形式 ］および［ 新たな文脈において配備される既存の形式 ］に対し，[UTF-8] 符号化法を要求する （また，それを定義する）。",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732572266,
      "updated": 1732572272
    },
    {
      "id": "6744f46971b3c20000492faf",
      "text": "> 符号化法には，他のもの（旧来の符号化法）もあり、 過去にある程度までは定義されたが， UA 間で常に同じ仕方で実装されているとは限らない。 また、 常に同じラベルを利用するとは限らず，［ 符号化法の中の未定義な区画, あるいは かつてのプロプライエタリな区画への対処 ］も相違することが多い。 この仕様は、［ 新たな実装が符号化法実装をリバースエンジニアせずに済む ］よう，および［ 既存の UA が一つに収束できる ］よう，これらの隔たりを埋めることに取り組む。",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732572266,
      "updated": 1732572266
    },
    {
      "id": "6744f46971b3c20000492fb0",
      "text": "> 特に，この仕様は、 それらすべての符号化法を，各符号化法の［ バイト列とスカラー値列を相互に変換するアルゴリズム, 正準的な名前, 識別用のラベルたち ］とともに定義する。 また、 符号化法を成す各種アルゴリズムのうち一部を JavaScript に公開する API も定義する。",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732572266,
      "updated": 1732572266
    },
    {
      "id": "6744f46971b3c20000492fb1",
      "text": "> UA は、 すでに IANA Character Sets レジストリに挙げられているラベルからも有意に逸脱している。 旧来の符号化法を これ以上拡散させないため、 この仕様は前述の詳細について網羅的であり， レジストリはもう不要である。 特に，この仕様は、 符号化法を拡張するための仕組みは供さない。 ",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732572266,
      "updated": 1732572266
    },
    {
      "id": "6744f47371b3c20000492fb2",
      "text": "過激だな～",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732572275,
      "updated": 1732572279
    },
    {
      "id": "6744f44b71b3c20000492fab",
      "text": "[encoding]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732572236,
      "updated": 1732572238
    },
    {
      "id": "6744f44a71b3c20000492faa",
      "text": "[文字コード]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732572235,
      "updated": 1732572246
    },
    {
      "id": "6744f45471b3c20000492fac",
      "text": "",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732572244,
      "updated": 1732572244
    }
  ]
}