{
  "id": "67124715ad4e80233f6ee6d5",
  "title": "Parsing Expression Grammer",
  "created": 1729251095,
  "updated": 1729251209,
  "lines": [
    {
      "id": "67124715ad4e80233f6ee6d5",
      "text": "Parsing Expression Grammer",
      "userId": "6619476365154e00252812e7",
      "created": 1729251095,
      "updated": 1729251095
    },
    {
      "id": "671247172812e70000dc75df",
      "text": "[https://ja.wikipedia.org/wiki/Parsing_Expression_Grammar Parsing Expression Grammar - Wikipedia]",
      "userId": "6619476365154e00252812e7",
      "created": 1729251095,
      "updated": 1729251099
    },
    {
      "id": "6712471b2812e70000dc75e2",
      "text": "",
      "userId": "6619476365154e00252812e7",
      "created": 1729251099,
      "updated": 1729251099
    },
    {
      "id": "671247252812e70000dc75e3",
      "text": "> Parsing Expression Grammar（[PEG]）は、分析的形式文法の一種であり、形式言語をその言語に含まれる文字列を認識するための一連の規則を使って表したものである。PEGは再帰下降構文解析を文法を示すためだけに純粋に図式的に表現したものと見ることもでき、具体的な構文解析器の実装やその用途とは独立している。",
      "userId": "6619476365154e00252812e7",
      "created": 1729251109,
      "updated": 1729251116
    },
    {
      "id": "671247262812e70000dc75e4",
      "text": "> PEGにおける構文（文法）の定義は文脈自由文法の[バッカス・ナウア記法]によるそれに似ているが、文脈自由文法では一般に「｜」（縦棒、バーティカルバー）で表される「これらのうちどれか」ではなく、「最初の解析がうまくいったらそれを、失敗なら次を順に試してゆき、成功したものを採用」（「/」であらわす）という意味を使う。",
      "userId": "6619476365154e00252812e7",
      "created": 1729251110,
      "updated": 1729251128
    },
    {
      "id": "671247262812e70000dc75e5",
      "text": "> このため、文脈自由文法とは異なり、PEGには曖昧さは存在しない。文字列を構文解析する場合、正しい構文木は常に1つしかない。このためPEGはコンピュータ言語の構文解析に向いており、一方、自然言語の多義性を、そのまま複数の構文木が可能である、という形で形式化するのには向かない。",
      "userId": "6619476365154e00252812e7",
      "created": 1729251110,
      "updated": 1729251110
    },
    {
      "id": "671247192812e70000dc75e1",
      "text": "",
      "userId": "6619476365154e00252812e7",
      "created": 1729251097,
      "updated": 1729251097
    },
    {
      "id": "6712474f2812e70000dc75e6",
      "text": "へー自然言語とコンピュータ言語が同じ文法で分析するという発想がまずなかったわ[moeki.icon]",
      "userId": "6619476365154e00252812e7",
      "created": 1729251152,
      "updated": 1729251209
    },
    {
      "id": "671247532812e70000dc75e7",
      "text": "",
      "userId": "6619476365154e00252812e7",
      "created": 1729251155,
      "updated": 1729251155
    }
  ]
}