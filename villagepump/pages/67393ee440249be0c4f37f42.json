{
  "id": "67393ee440249be0c4f37f42",
  "title": "オブジェクト/配列の比較",
  "created": 1731804910,
  "updated": 1735935123,
  "lines": [
    {
      "id": "67393ee440249be0c4f37f42",
      "text": "オブジェクト/配列の比較",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bcb",
      "text": "✂ from [2024/11/16]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bcc",
      "text": "",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804921
    },
    {
      "id": "67393ee471b3c20000c03bcd",
      "text": "Why????[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bce",
      "text": "\t[https://gyazo.com/b9ecc11d024f08cdf5cdf5344632bf61]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bcf",
      "text": "\t 別のobjectだから[takker.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd0",
      "text": "   https://developer.mozilla.org/ja/docs/Web/JavaScript/Data_structures#オブジェクト",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd1",
      "text": "   中身が同じでも、いわゆる参照が違えば違うobjectになる",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd2",
      "text": "   [- [JS Is Weird]][- だな～][bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1735913947
    },
    {
      "id": "67393ee471b3c20000c03bd3",
      "text": "   これはJS Is Weirdなのではなくここ20年くらいの言語のほとんどがいろいろな形で似た現象を引き起こすんだよな〜[nishio.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd4",
      "text": "   \tPythonの場合は値を比較する`==`とオブジェクトの同一性を比較する`is`を分けることにした",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd5",
      "text": "   \tcode::",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd6",
      "text": "   \t In []: {\"a\": 1} == {\"a\": 1}",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd7",
      "text": "     Out[]: True",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd8",
      "text": "     ",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd9",
      "text": "     In []: {\"a\": 1} is {\"a\": 1}",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bda",
      "text": "     Out[]: False",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "677844337838e30000661cf1",
      "text": "   むしろ配列やオブジェクトをそのまま比較した時に、参照比較ではなく値の比較してくれる言語そんなに多くない気がする[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735935024,
      "updated": 1735935079
    },
    {
      "id": "677844737838e30000661cf2",
      "text": "   　参照比較が直感的ではなく、使う場面も値比較に比べてそこまで多くないのはわかるけど",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735935089,
      "updated": 1735935123
    },
    {
      "id": "67393ee471b3c20000c03bdb",
      "text": "\t[https://gyazo.com/40f48f067037ff1cd7f836068aef5664]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bdc",
      "text": " 対処法:JSONにして比較する",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bdd",
      "text": " \tいやがらせをする[nishio.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bde",
      "text": " \t\t[https://gyazo.com/3d3b127fddda5a28e85fecd144260c94]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bdf",
      "text": " \t\t[https://pisuke-code.com/js-sort-object-by-key-or-value/ キー名でソートする][bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393fa171b3c2000055c39c",
      "text": " \t\t\t`function sort(t){return Object.fromEntries(Object.entries(t).sort((x,y)=>{var w=x[0],z=y[0];if(w<z){return -1;}if(w>z){return 1;}return 0;}))}`",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731805090,
      "updated": 1731805473
    },
    {
      "id": "67393ee471b3c20000c03be0",
      "text": " `const deepEqual = (a, b) => typeof a !== typeof b ? false : Array.isArray(a) ? a.every((value, key) => deepEqual(b[key], value)) : typeof a !== \"object\" ? a === b : Object.entries(a).every(([key, value]) => deepEqual(b[key], value));`でいけるかと思ったけど、SetやMap, symbolのことを考慮してないから不十分か[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1731804910,
      "updated": 1731807671
    },
    {
      "id": "673949aa1280f00000d568ff",
      "text": "  意外とむずかしい",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1731807660,
      "updated": 1731807666
    },
    {
      "id": "6739d2f271b3c20000a45ce9",
      "text": "  \tJSONだって対応してないはずだから大丈夫[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731842802,
      "updated": 1731842810
    },
    {
      "id": "6747cd8773e5220000f1a5f7",
      "text": " 対処法2 : lodashにisEqualってあった気がする[綾坂こと.icon]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1732758920,
      "updated": 1732758947
    },
    {
      "id": "6747cda373e5220000f1a5f8",
      "text": " \t[https://lodash.com/docs/4.17.15#isEqual]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1732758947,
      "updated": 1732758982
    },
    {
      "id": "6747d0c87838e300009caaab",
      "text": " \t個人的には[deep-equal]使ってる[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1732759752,
      "updated": 1732759769
    },
    {
      "id": "6747d0da7838e300009caaac",
      "text": " \t　https://www.npmjs.com/package/deep-equal",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1732759769,
      "updated": 1732759771
    },
    {
      "id": "6747d0de7838e300009caaae",
      "text": " \t　正直なんでもいいと思う",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1732759774,
      "updated": 1732759782
    },
    {
      "id": "67393ee471b3c20000c03be1",
      "text": "",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "6746c79571b3c200002b3013",
      "text": "これ、[ポインタ]を知ってると説明が楽だな",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732691862,
      "updated": 1732701530
    },
    {
      "id": "6746ed5b71b3c200002b302a",
      "text": "\t内部的にはオブジェクト分を動的確保して変数領域にはポインタを入れてる",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732701531,
      "updated": 1732701566
    },
    {
      "id": "6746c7f571b3c200002b3015",
      "text": "",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732691958,
      "updated": 1732691958
    },
    {
      "id": "6747cecf1280f00000c4e735",
      "text": "最近こういうことが必要になる場面に出くわしてないな[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1732759247,
      "updated": 1732759259
    },
    {
      "id": "6747cef81280f00000c4e738",
      "text": "　JS書きはじめのころはだいぶ悩んだ気がする",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1732759288,
      "updated": 1732759298
    },
    {
      "id": "6747cedb1280f00000c4e737",
      "text": "　比較しなくて済むような処理方法で無意識に書いてるのかも",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1732759259,
      "updated": 1732759287
    },
    {
      "id": "6747ced11280f00000c4e736",
      "text": "",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1732759249,
      "updated": 1732759249
    },
    {
      "id": "6747d0ec7838e300009caaaf",
      "text": "逆にオブジェクトそのものを比較したい場面ってなんだろ[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1732759787,
      "updated": 1732759805
    },
    {
      "id": "6747d0fe7838e300009caab1",
      "text": "　大抵の場合、オブジェクトに主キーを持たせておけばそいつの比較だけで事足りる",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1732759806,
      "updated": 1732759826
    },
    {
      "id": "6747d1137838e300009caab2",
      "text": "　むしろオブジェクト全体を見ないと[一意]性を保てない設計はちょっとまずい気がする",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1732759826,
      "updated": 1732759861
    },
    {
      "id": "6747d1387838e300009caab3",
      "text": "　　一意性を確かめる際に一々全オブジェクトの比較をしないといけなくなるので",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1732759864,
      "updated": 1732759900
    },
    {
      "id": "6747d1687838e300009caab4",
      "text": "　差分があるかを調べる際にオブジェクトの同値性を比較することはある",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1732759912,
      "updated": 1732759952
    },
    {
      "id": "6747d0ee7838e300009caab0",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1732759790,
      "updated": 1732759790
    }
  ]
}