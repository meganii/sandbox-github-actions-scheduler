{
  "id": "67393ee440249be0c4f37f42",
  "title": "オブジェクト/配列の比較",
  "created": 1731804910,
  "updated": 1732701566,
  "lines": [
    {
      "id": "67393ee440249be0c4f37f42",
      "text": "オブジェクト/配列の比較",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bcb",
      "text": "✂ from [2024/11/16]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bcc",
      "text": "",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804921
    },
    {
      "id": "67393ee471b3c20000c03bcd",
      "text": "Why????[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bce",
      "text": "\t[https://gyazo.com/b9ecc11d024f08cdf5cdf5344632bf61]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bcf",
      "text": "\t 別のobjectだから[takker.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd0",
      "text": "   https://developer.mozilla.org/ja/docs/Web/JavaScript/Data_structures#オブジェクト",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd1",
      "text": "   中身が同じでも、いわゆる参照が違えば違うobjectになる",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd2",
      "text": "   [JS Is Weird]だな～[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd3",
      "text": "   これはJS Is Weirdなのではなくここ20年くらいの言語のほとんどがいろいろな形で似た現象を引き起こすんだよな〜[nishio.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd4",
      "text": "   \tPythonの場合は値を比較する`==`とオブジェクトの同一性を比較する`is`を分けることにした",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd5",
      "text": "   \tcode::",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd6",
      "text": "   \t In []: {\"a\": 1} == {\"a\": 1}",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd7",
      "text": "     Out[]: True",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd8",
      "text": "     ",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bd9",
      "text": "     In []: {\"a\": 1} is {\"a\": 1}",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bda",
      "text": "     Out[]: False",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bdb",
      "text": "\t[https://gyazo.com/40f48f067037ff1cd7f836068aef5664]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bdc",
      "text": " 対処法:JSONにして比較する",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bdd",
      "text": " \tいやがらせをする[nishio.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bde",
      "text": " \t\t[https://gyazo.com/3d3b127fddda5a28e85fecd144260c94]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393ee471b3c20000c03bdf",
      "text": " \t\t[https://pisuke-code.com/js-sort-object-by-key-or-value/ キー名でソートする][bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "67393fa171b3c2000055c39c",
      "text": " \t\t\t`function sort(t){return Object.fromEntries(Object.entries(t).sort((x,y)=>{var w=x[0],z=y[0];if(w<z){return -1;}if(w>z){return 1;}return 0;}))}`",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731805090,
      "updated": 1731805473
    },
    {
      "id": "67393ee471b3c20000c03be0",
      "text": " `const deepEqual = (a, b) => typeof a !== typeof b ? false : Array.isArray(a) ? a.every((value, key) => deepEqual(b[key], value)) : typeof a !== \"object\" ? a === b : Object.entries(a).every(([key, value]) => deepEqual(b[key], value));`でいけるかと思ったけど、SetやMap, symbolのことを考慮してないから不十分か[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1731804910,
      "updated": 1731807671
    },
    {
      "id": "673949aa1280f00000d568ff",
      "text": "  意外とむずかしい",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1731807660,
      "updated": 1731807666
    },
    {
      "id": "6739d2f271b3c20000a45ce9",
      "text": "  \tJSONだって対応してないはずだから大丈夫[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731842802,
      "updated": 1731842810
    },
    {
      "id": "67393ee471b3c20000c03be1",
      "text": "",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731804910,
      "updated": 1731804910
    },
    {
      "id": "6746c79571b3c200002b3013",
      "text": "これ、[ポインタ]を知ってると説明が楽だな",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732691862,
      "updated": 1732701530
    },
    {
      "id": "6746ed5b71b3c200002b302a",
      "text": "\t内部的にはオブジェクト分を動的確保して変数領域にはポインタを入れてる",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732701531,
      "updated": 1732701566
    },
    {
      "id": "6746c7f571b3c200002b3015",
      "text": "",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732691958,
      "updated": 1732691958
    }
  ]
}