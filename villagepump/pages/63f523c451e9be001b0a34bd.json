{
  "id": "63f523c451e9be001b0a34bd",
  "title": "TextSplitter",
  "created": 1677009865,
  "updated": 1677965023,
  "lines": [
    {
      "id": "63f523c451e9be001b0a34bd",
      "text": "TextSplitter",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677009865,
      "updated": 1677009865
    },
    {
      "id": "63f523c979e1130000f536f7",
      "text": "[LangChain]の要素の一つ",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677009865,
      "updated": 1677009870
    },
    {
      "id": "63f523ce79e1130000f536f9",
      "text": " [https://langchain.readthedocs.io/en/latest/reference/modules/text_splitter.html?highlight=textsplitter Text Splitter — 🦜🔗 LangChain 0.0.92]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677009870,
      "updated": 1677009925
    },
    {
      "id": "63f5240479e1130000f536fa",
      "text": " 大きすぎると言語モデルに食わせられない",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677009925,
      "updated": 1677035653
    },
    {
      "id": "63f5887a79e1130000d30ad6",
      "text": "  例えば、GPT-3だと4000tokenが限界",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677035642,
      "updated": 1677035649
    },
    {
      "id": "63f5888579e1130000d30ad8",
      "text": " ので、でかい文章を小さいchunkに分ける",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677035654,
      "updated": 1677035654
    },
    {
      "id": "63f523c979e1130000f536f8",
      "text": "　[https://note.com/npaka/n/nda9dc5eae1df LangChainのTextSplitterを試す｜npaka｜note] ",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677009866,
      "updated": 1677010138
    },
    {
      "id": "63f5253379e11300000b2bb6",
      "text": "",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677010228,
      "updated": 1677010229
    },
    {
      "id": "63f5883579e1130000d30acb",
      "text": "",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677035573,
      "updated": 1677035573
    },
    {
      "id": "63f5253479e11300000b2bb7",
      "text": " Scrapboxのインデント形式に対応したTextSplitterを作ると役に立ちそう[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677010229,
      "updated": 1677010255
    },
    {
      "id": "63f5254279e11300000b2bb8",
      "text": " 　例えばすごい長いページがあったとする",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677010242,
      "updated": 1677035417
    },
    {
      "id": "63f5879979e1130000d30ac8",
      "text": " 　既存のTextSplitterは、単純に分割しようとする",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677035417,
      "updated": 1677035420
    },
    {
      "id": "63f5879e79e1130000d30ac9",
      "text": " 　　単純に文字数で分割したり、意味のまとまりで分割したり、色々ある",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677035422,
      "updated": 1677035446
    },
    {
      "id": "63f587b679e1130000d30aca",
      "text": " 　　けど、どれも文の順番は保ったまま一部を切り出してチャンクを生成している",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677035446,
      "updated": 1677035543
    },
    {
      "id": "63f5253279e11300000b2bb5",
      "text": "　　箇条書きであれば、「長い文章のうちの3段目のインデントまでの内容を切り出す」みたいな感じで小さいチャンクを取り出すことが可能[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677010227,
      "updated": 1677035569
    },
    {
      "id": "63f567bf79e1130000855fb8",
      "text": "　　 インデントの深さで意味を表しているからこそ、簡単な文字処理で、異なる粒度のチャンク抽出ができる[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677027264,
      "updated": 1677031476
    },
    {
      "id": "63f5681779e1130000855fba",
      "text": "　　 これ、ScrapboxのChat Botが他のもの（Bing AI, [Mem], etc）と比べてめっちゃ良いものになるポテンシャルがあるのでは[blu3mo.icon*3]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677027351,
      "updated": 1677027395
    },
    {
      "id": "63f5883879e1130000d30acc",
      "text": "　　 [Scrapboxの文章はLLMにも読みやすいのでは]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677035576,
      "updated": 1677035584
    },
    {
      "id": "6403b6cd79e113000075c8b5",
      "text": "　　 文章の構造が、インデント箇条書き = 木構造で表現されていると言える[blu3mo.icon*2]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677965006,
      "updated": 1677965006
    },
    {
      "id": "6403b6ce79e113000075c8b6",
      "text": "  例えば長いページがあったとして、",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677965006,
      "updated": 1677965017
    },
    {
      "id": "6403b6ce79e113000075c8b7",
      "text": "　　　[https://kakeru.app/82bea3221deb085819feea6026df93fe https://i.kakeru.app/82bea3221deb085819feea6026df93fe.svg]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677965006,
      "updated": 1677965023
    },
    {
      "id": "6403b6ce79e113000075c8b8",
      "text": "　　　 従来の手法（上）だと、切り刻んでチャンクを作るしかない",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677965006,
      "updated": 1677965023
    },
    {
      "id": "6403b6ce79e113000075c8b9",
      "text": "　　　  チャンク1: 上半分",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677965006,
      "updated": 1677965023
    },
    {
      "id": "6403b6ce79e113000075c8ba",
      "text": "　　　  チャンク2: 下半分",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677965006,
      "updated": 1677965023
    },
    {
      "id": "6403b6ce79e113000075c8bb",
      "text": "　　　 Scrapboxのような箇条書き前提の手法（下）なら、箇条書きの意味を元に色々な解像度のチャンクが作れる",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677965006,
      "updated": 1677965023
    },
    {
      "id": "6403b6ce79e113000075c8bc",
      "text": "　　　 　チャンク1: インデント浅い文だけ持ってきた、全体像がわかるチャンク",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677965006,
      "updated": 1677965023
    },
    {
      "id": "6403b6ce79e113000075c8bd",
      "text": "　　　 　チャンク2, 3: インデント深い文も持ってきた、一部についてより深くわかるチャンク",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677965006,
      "updated": 1677965023
    },
    {
      "id": "6403b6ce79e113000075c8be",
      "text": "　　 なので、全体を要約するようなタスクにも、一部について深く聞くタスクにも、少ないチャンク数で対応できるようになるはず",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677965006,
      "updated": 1677965023
    },
    {
      "id": "6403b6ce79e113000075c8bf",
      "text": "　　  LLMが「流し読み」をできるようになった、みたいな表現が合っていそう",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677965006,
      "updated": 1677965023
    },
    {
      "id": "6403b6ce79e113000075c8c0",
      "text": " 　その結果、[Mem]とか[Notion]を読むLLMより、[Scrapbox]を読むLLMの方が理解力(?)が強くなりうる気がしている[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677965006,
      "updated": 1677965023
    },
    {
      "id": "63f7a82679e1130000c93a13",
      "text": "",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1677174823,
      "updated": 1677174823
    },
    {
      "id": "63f5256879e11300000b2bb9",
      "text": "\t\t[- [Cluster Of Line]の単位で切る、とかも使えるかもしれない][sta.icon]いや気のせい[sta.icon]",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1677010281,
      "updated": 1677964355
    },
    {
      "id": "6403b46379d3a900005e9edf",
      "text": "\t\t\t既に取り上げられてるとおり、空行区切りよりもインデントの深さで識別しないとダメそう",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1677964387,
      "updated": 1677964404
    },
    {
      "id": "63f5666579d3a9000045a604",
      "text": "",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1677026918,
      "updated": 1677026918
    },
    {
      "id": "63f5cffaaff09e000004baad",
      "text": "実はこういう分割が正しいかもしれない[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1677053947,
      "updated": 1677053959
    },
    {
      "id": "63f5d007aff09e000004baaf",
      "text": " [https://gyazo.com/7959f1b16296f2a9a6cd9b4e51c952d5]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1677053959,
      "updated": 1677054125
    },
    {
      "id": "63f5d0acaff09e000086fd9a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1677054125,
      "updated": 1677054125
    },
    {
      "id": "63f5cffdaff09e000004baae",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1677053950,
      "updated": 1677053950
    },
    {
      "id": "63f853d4774b17000018b72c",
      "text": "「こうすると良い」は[2023/2/21 Scrapboxの内容を元にしたチャットbotを実装する]で実装された後にためしてわかる？[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677218772,
      "updated": 1677218813
    },
    {
      "id": "63f853d7774b17000018b72d",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1677218775,
      "updated": 1677218775
    }
  ]
}