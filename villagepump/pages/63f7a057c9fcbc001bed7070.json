{
  "id": "63f7a057c9fcbc001bed7070",
  "title": "雑読「問題解決力を鍛える！アルゴリズムとデータ構造」：1章 アルゴリズムとは",
  "created": 1677172824,
  "updated": 1677173642,
  "lines": [
    {
      "id": "63f7a067774b1700009834ee",
      "text": "雑読「問題解決力を鍛える！アルゴリズムとデータ構造」：1章 アルゴリズムとは",
      "userId": "59fb21121207900012774b17",
      "created": 1677172840,
      "updated": 1677172853
    },
    {
      "id": "63f7a058774b1700009834a6",
      "text": "from [雑に読む「問題解決力を鍛える！アルゴリズムとデータ構造」]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834a7",
      "text": "1章 [アルゴリズム]とは",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834a8",
      "text": " 1.1 アルゴリズムとは何か",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834a9",
      "text": " 　問題を解くための手順のこと",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834aa",
      "text": "  年齢当てゲームの例",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834ab",
      "text": "  　n個の候補があったとき、前からやるとn回の質問が必要（[線形探索法]）",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834ac",
      "text": "  　二分探索なら圧倒的に早い",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834ad",
      "text": "  　　m回の質問で候補を[$ \\frac{1}{2}^m]に絞り込める",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834ae",
      "text": "  　[Akinator]も何らかの方法で二分探索してるのかな[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834af",
      "text": "  　　明らかに年齢ほど単純ではない",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834b0",
      "text": "  　　そもそも質問に対して2〜4通りの答えがあるのでは？いわば2〜4分探索[nishio.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834b1",
      "text": "  　　 単なるツリーの探索なので普通はそういう呼び方はしない",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834b2",
      "text": "  　　 4択ぐらいあるから2分ではありませんでした...[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834b3",
      "text": " 1.2 アルゴリズムの例(1)：深さ優先探索と幅優先探索",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834b4",
      "text": " 　探索はあらゆるアルゴリズムの基礎",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834b5",
      "text": " 　[深さ優先探索] [Depth-first search] [DFS]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834b6",
      "text": " 　 虫食い算の例",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834b7",
      "text": " 　 >基本的には力任せの探索アルゴリズムですが，探索順序を工夫することで劇的な性能差が出ることが魅力的です．(p.31). Kindle 版. ",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834b8",
      "text": " 　  [\" 探索順序を工夫することで劇的な性能差が出る]ここがまだわからない[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834b9",
      "text": " 　  大前提として「最初に見つかった一つを返せばいい」という問題設定なのだと思う、ならば早く見つかる方法で探すと良い[nishio.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834ba",
      "text": " 　 色々応用がある",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834bb",
      "text": " 　 　[トポロジカルソート]（13章）",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834bc",
      "text": " 　 　[動的計画法]（5章）",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834bd",
      "text": " 　 　ネットワークフローアルゴリズムのサブルーチン（16章）",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834be",
      "text": " 　 　　[オフチョベットしたテフをマブガッドしてリットにする様子][基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834bf",
      "text": " 　 　など",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834c0",
      "text": " 　 グラフ上の探索と捉えると見通しが良くなる（13章でやる）",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834c1",
      "text": " 　[幅優先探索] [breadthf-first search] [BFS]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834c2",
      "text": " 　 迷路のスタートからゴールまでの最短距離を計算する例",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834c3",
      "text": " 　 最小手順を知りたいときに便利",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834c4",
      "text": " 　 こっちもグラフ上の探索と捉えると見通しが良くなる（13章でやる）",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834c5",
      "text": " 　最終的にグラフ上の探索としてもう一回捉え直されるけどそっちの方がむずいからまずは簡単で愚直なやり方からやるのかな[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834c6",
      "text": " 　うーん、見通しが良くなるかどうかは主観だからな…[nishio.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834c7",
      "text": " 1.3 アルゴリズムの例(2)：[マッチング]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834c8",
      "text": " 　男女のマッチングの例",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834c9",
      "text": " 　　 [who.icon]男男、女女の例がないのでPolitically incorrectだ",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834ca",
      "text": " 　　ペアになってもいいという男女の間に線が引かれている",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834cb",
      "text": " 　　　婚活パーティー（？）とかでスコアづけをこの線と捉えても良さそう[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834cc",
      "text": " 　　　スコアを最大化する問題の「スコアに0と1しかない特殊ケース」と捉えることはできる[nishio.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834cd",
      "text": " 　　問. カップル数を最大化するにはどういうペアを作ればいいでしょうか",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834ce",
      "text": " 　応用例",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834cf",
      "text": " 　　ネット広告",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834d0",
      "text": " 　　レコメンド",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834d1",
      "text": " 　　スケジュール調整",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834d2",
      "text": " 　16章でやる",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834d3",
      "text": " 1.4 アルゴリズムの記述方法",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834d4",
      "text": " 　擬似コードではなくC++で書く",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834d5",
      "text": " 1.5 アルゴリズムを学ぶ意義",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834d6",
      "text": " 　問題に対する解を書き下せなくても手順を与えられ得れば良い",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834d7",
      "text": " 　　解析解がない問題多いからなあ[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834d8",
      "text": " 章末問題",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834d9",
      "text": " 　これはちゃんとやっていきたい[基素.icon*2]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834da",
      "text": "　　1.1",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834db",
      "text": "　　 20歳から36未満の年齢を2分探索で当てる流れ",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834dc",
      "text": "　　 候補である20-35の中間地点を聞きたいので「28歳未満ですか？」と聞く",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834dd",
      "text": "　　 回答された部分を同様に半分にしていく",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834de",
      "text": "　　 　YESなら20-27の中間24未満か聞く...",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834df",
      "text": "　　1.2 0以上100未満の年齢をY/N Questionを繰り返す",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834e0",
      "text": "　　 6回で確実に当てられるか",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834e1",
      "text": "　　  No。2^6=64以下でないと6回では確実には当てられない",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834e2",
      "text": "　　 7回で確実に当てられるか？",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834e3",
      "text": "　　 　Yes",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834e4",
      "text": "　　1.3 虫食い算をやれ",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677173639
    },
    {
      "id": "63f7a058774b1700009834e5",
      "text": "　　　めんどくさい[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677173641
    },
    {
      "id": "63f7a058774b1700009834e6",
      "text": "　　1.4 虫食い算をやれ 2",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677173631
    },
    {
      "id": "63f7a058774b1700009834e7",
      "text": "　　　すごくめんどくさい[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677173642
    },
    {
      "id": "63f7a058774b1700009834e8",
      "text": "　　1.5",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834e9",
      "text": "　　 最大の数値の隣接領域から1ずつ引いたマスに進行していきスタート地点にたどり着いた時の経路",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834ea",
      "text": "　　1.6",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834eb",
      "text": "　　 [asearch]はScrapboxの検索バーで使われている",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    },
    {
      "id": "63f7a058774b1700009834ec",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1677172824,
      "updated": 1677172824
    }
  ]
}