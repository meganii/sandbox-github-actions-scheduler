{
  "id": "624abfe0eaddab00231c7c8d",
  "title": "forのネストを解消することは早すぎる抽象化",
  "created": 1649065952,
  "updated": 1649126265,
  "lines": [
    {
      "id": "624abfe0eaddab00231c7c8d",
      "text": "forのネストを解消することは早すぎる抽象化",
      "userId": "582e63d27c56960011aff09e",
      "created": 1649065952,
      "updated": 1649065952
    },
    {
      "id": "624ac088aff09e0000601e92",
      "text": "forのネストを解消することは[早すぎる抽象化]のことがある",
      "userId": "59fb21121207900012774b17",
      "created": 1649066121,
      "updated": 1649073851
    },
    {
      "id": "624ac092aff09e0000601e93",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1649066131,
      "updated": 1649066131
    },
    {
      "id": "624abfe0aff09e0000601e7e",
      "text": "from [2022/04/04]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1649065952,
      "updated": 1649065952
    },
    {
      "id": "624abfe0aff09e0000601e7f",
      "text": "forのネストを解消することは早すぎる抽象化",
      "userId": "582e63d27c56960011aff09e",
      "created": 1649065952,
      "updated": 1649065952
    },
    {
      "id": "624abfe0aff09e0000601e80",
      "text": "　本質的に二次元の探索が必要なケースでそうなるのはプログラミング対象の構造がコードに写し取られてるのだから適切",
      "userId": "582e63d27c56960011aff09e",
      "created": 1649065952,
      "updated": 1649065956
    },
    {
      "id": "624abfe0aff09e0000601e81",
      "text": "　本質的に5次元の探索なら5重のネストになったとしてもそれが自然",
      "userId": "582e63d27c56960011aff09e",
      "created": 1649065952,
      "updated": 1649065956
    },
    {
      "id": "624abfe6aff09e0000601e84",
      "text": " 　code:python",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649065959,
      "updated": 1649066445
    },
    {
      "id": "624ac03daff09e0000601e85",
      "text": " 　 xs = ys = zs = [1, 2, 3, 4, 5]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066046,
      "updated": 1649066445
    },
    {
      "id": "624ac03eaff09e0000601e86",
      "text": "   ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066046,
      "updated": 1649066445
    },
    {
      "id": "624ac03eaff09e0000601e87",
      "text": "   for x in xs:",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066046,
      "updated": 1649066445
    },
    {
      "id": "624ac03eaff09e0000601e88",
      "text": "     for y in ys:",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066046,
      "updated": 1649066445
    },
    {
      "id": "624ac03eaff09e0000601e89",
      "text": "       for z in zs:",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066046,
      "updated": 1649066445
    },
    {
      "id": "624ac03eaff09e0000601e8a",
      "text": "         do_something(x, y, z)",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066046,
      "updated": 1649066445
    },
    {
      "id": "624ac1d21280f00000d168d1",
      "text": "  code:js",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066447,
      "updated": 1649066452
    },
    {
      "id": "624ac1d71280f00000d168d2",
      "text": "   const xs = [1, 2, 3, 4, 5];",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066452,
      "updated": 1649066461
    },
    {
      "id": "624ac1e31280f00000d168d4",
      "text": "   const ys = [1, 2, 3, 4, 5];",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066464,
      "updated": 1649066467
    },
    {
      "id": "624ac1e41280f00000d168d5",
      "text": "   const zs = [1, 2, 3, 4, 5];",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066465,
      "updated": 1649066469
    },
    {
      "id": "624ac1e11280f00000d168d3",
      "text": "   ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066462,
      "updated": 1649066462
    },
    {
      "id": "624ac1eb1280f00000d168d7",
      "text": "   for (const x of xs) {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066473,
      "updated": 1649066479
    },
    {
      "id": "624ac1f21280f00000d168d8",
      "text": "     for (const y of ys) {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066479,
      "updated": 1649066487
    },
    {
      "id": "624ac1f91280f00000d168da",
      "text": "       for (const z of zs) {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066487,
      "updated": 1649066495
    },
    {
      "id": "624ac2021280f00000d168dc",
      "text": "         doSomething(x, y, z);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066495,
      "updated": 1649066508
    },
    {
      "id": "624ac2031280f00000d168dd",
      "text": "       }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066496,
      "updated": 1649066496
    },
    {
      "id": "624ac1fa1280f00000d168db",
      "text": "     }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066487,
      "updated": 1649066487
    },
    {
      "id": "624ac1f31280f00000d168d9",
      "text": "   }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066480,
      "updated": 1649066480
    },
    {
      "id": "624ac1eb1280f00000d168d6",
      "text": "   ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066472,
      "updated": 1649066472
    },
    {
      "id": "624ac050aff09e0000601e8b",
      "text": "　なぜかそれを避けようとしてproductしたイテレータに対しての単一ループでやろうとする人もいる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1649066064,
      "updated": 1649066313
    },
    {
      "id": "624ac148aff09e0000601e94",
      "text": "　\tこれは単純なループであれば等価だから趣味嗜好の範囲",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066313,
      "updated": 1649066516
    },
    {
      "id": "624ac056aff09e0000601e8d",
      "text": " 　code:python",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066070,
      "updated": 1649066518
    },
    {
      "id": "624ac058aff09e0000601e8e",
      "text": " 　 from itertools import product",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066073,
      "updated": 1649066518
    },
    {
      "id": "624ac2291280f00000d168eb",
      "text": " 　 ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066534,
      "updated": 1649066534
    },
    {
      "id": "624ac2291280f00000d168ec",
      "text": " 　 xs = ys = zs = [1, 2, 3, 4, 5]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066534,
      "updated": 1649066538
    },
    {
      "id": "624ac062aff09e0000601e8f",
      "text": " 　 for x, y, z in product(xs, ys, zs):",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066083,
      "updated": 1649066518
    },
    {
      "id": "624ac069aff09e0000601e90",
      "text": "     do_something(x, y, z)",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066089,
      "updated": 1649066520
    },
    {
      "id": "624ac21c1280f00000d168de",
      "text": "  code:js",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066521,
      "updated": 1649066523
    },
    {
      "id": "624ac21e1280f00000d168df",
      "text": "   const xs = [1, 2, 3, 4, 5];",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066523,
      "updated": 1649066524
    },
    {
      "id": "624ac21f1280f00000d168e0",
      "text": "   const ys = [1, 2, 3, 4, 5];",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066524,
      "updated": 1649066524
    },
    {
      "id": "624ac21f1280f00000d168e1",
      "text": "   const zs = [1, 2, 3, 4, 5];",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066524,
      "updated": 1649066524
    },
    {
      "id": "624ac21f1280f00000d168e2",
      "text": "   ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066524,
      "updated": 1649066524
    },
    {
      "id": "624ac2711280f00000d168fa",
      "text": "   for (const [x, y, z] of product(xs, ys, zs)) {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066606,
      "updated": 1649066629
    },
    {
      "id": "624ac2901280f00000d16900",
      "text": "     doSomething(x, y, z);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066637,
      "updated": 1649066638
    },
    {
      "id": "624ac2881280f00000d168fc",
      "text": "   }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066629,
      "updated": 1649066629
    },
    {
      "id": "624ac23d1280f00000d168ed",
      "text": "   ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066554,
      "updated": 1649066554
    },
    {
      "id": "624ac23d1280f00000d168ee",
      "text": "   function* product(a, b, c) {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066554,
      "updated": 1649066568
    },
    {
      "id": "624ac2501280f00000d168f2",
      "text": "     for (const x of a) {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066573,
      "updated": 1649066584
    },
    {
      "id": "624ac2501280f00000d168f3",
      "text": "       for (const y of b) {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066573,
      "updated": 1649066587
    },
    {
      "id": "624ac2501280f00000d168f4",
      "text": "         for (const z of c) {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066573,
      "updated": 1649066589
    },
    {
      "id": "624ac2611280f00000d168f9",
      "text": "           yield [x, y, z];",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066590,
      "updated": 1649066603
    },
    {
      "id": "624ac2501280f00000d168f6",
      "text": "         }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066573,
      "updated": 1649066577
    },
    {
      "id": "624ac2501280f00000d168f7",
      "text": "       }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066573,
      "updated": 1649066577
    },
    {
      "id": "624ac2501280f00000d168f8",
      "text": "     }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066573,
      "updated": 1649066577
    },
    {
      "id": "624ac24b1280f00000d168f0",
      "text": "   }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066568,
      "updated": 1649066568
    },
    {
      "id": "624ac21f1280f00000d168ea",
      "text": "   ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1649066524,
      "updated": 1649066524
    },
    {
      "id": "624abfe0aff09e0000601e83",
      "text": "　「単純なループだと時間が掛かりすぎるから枝刈りが必要だ」となった時にfor文で書いてる人がbreakやcontinueでサクッと済ませられる修正を、イテレータで書いてる人が🤯とかなることがある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1649065952,
      "updated": 1649066116
    },
    {
      "id": "624ac083aff09e0000601e91",
      "text": "　\tこれは「このプログラミング対象を1重ループで書いて良い」という判断が早すぎる抽象化だったということ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1649066116,
      "updated": 1649066116
    },
    {
      "id": "624bab35e5172d00002c6b13",
      "text": "　\t多重ループを解消したほうがサクッと済ませられる修正というのは存在しない？[yosider.icon]",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1649126198,
      "updated": 1649126265
    },
    {
      "id": "624ac6a7385a92000025b0c1",
      "text": "",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1649067688,
      "updated": 1649067688
    },
    {
      "id": "624ac6a7385a92000025b0c2",
      "text": " 本質的にｎ次元であるときは、各々の軸が同じ単位であったりすることがある気がする[miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1649067688,
      "updated": 1649067713
    },
    {
      "id": "624ac6e4385a92000025b0c5",
      "text": "  x,y,zが同じ概念、単位を持ってる",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1649067749,
      "updated": 1649067759
    },
    {
      "id": "624ac6c0385a92000025b0c4",
      "text": " 　異なる概念の二重ループだと、一つのループや、その内側などを関数として切り出すと読みやすくなる傾向にある、と思う[miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1649067713,
      "updated": 1649067766
    },
    {
      "id": "624ac6f6385a92000025b0c6",
      "text": " 　　usersがいて、各々がpostsを持ってるみたいな",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1649067766,
      "updated": 1649067774
    },
    {
      "id": "624ac6a8385a92000025b0c3",
      "text": "　　　それは「異なる概念だから」切り出せるのではなく「ユーザによってポストに対して行う処理に差はない」という処理の独立性があるから切り出せる[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1649067688,
      "updated": 1649100760
    },
    {
      "id": "624b47d4aff09e00008e3e27",
      "text": "　　　 xyzの時に「枝刈りしようとすると…」と書いたが、それはつまり「変数間に独立性がなくなったら」と言うことでもある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1649100756,
      "updated": 1649101017
    },
    {
      "id": "624b4763aff09e00008e3e26",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1649100644,
      "updated": 1649100644
    },
    {
      "id": "624bab14e5172d00002c6b11",
      "text": " 多重ループを解消することは抽象化なのだろうか？[yosider.icon]",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1649126166,
      "updated": 1649126185
    },
    {
      "id": "624bab15e5172d00002c6b12",
      "text": "",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1649126166,
      "updated": 1649126166
    }
  ]
}