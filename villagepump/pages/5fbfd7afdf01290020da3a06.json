{
  "id": "5fbfd7afdf01290020da3a06",
  "title": "宣言的UI",
  "created": 1606408113,
  "updated": 1742473253,
  "lines": [
    {
      "id": "5fbfd7afdf01290020da3a06",
      "text": "宣言的UI",
      "userId": "5bc5772df30ff700134daa92",
      "created": 1606408113,
      "updated": 1606408113
    },
    {
      "id": "6227363b774b1700008ffa92",
      "text": "[React]とか[SwiftUI]みたいに、UIを定義するとその状態に[DOM]をいい感じにしてくれる仕組みのこと",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1646736955,
      "updated": 1733957193
    },
    {
      "id": "6227367c774b1700008ffa93",
      "text": " でいいのかな[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1646737020,
      "updated": 1646737024
    },
    {
      "id": "62273b611280f00000e4ecb6",
      "text": " 1(フレーム|状態)ごとのアプリの状態を設定するだけで済んだという点が重要という認識[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646738272,
      "updated": 1646738332
    },
    {
      "id": "62273b881280f00000e4ecb7",
      "text": "  before",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646738312,
      "updated": 1646738321
    },
    {
      "id": "62273b921280f00000e4ecb9",
      "text": "   前(フレーム|の状態)に変更を加えて新しい状態を表示していた",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646738322,
      "updated": 1646738361
    },
    {
      "id": "62273bb91280f00000e4ecba",
      "text": "   前の状態がどうなっているのかを知らないといけない",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646738361,
      "updated": 1646738372
    },
    {
      "id": "62273b8b1280f00000e4ecb8",
      "text": "  after",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646738314,
      "updated": 1646738375
    },
    {
      "id": "62273bc71280f00000e4ecbb",
      "text": "   今どう表示したいかだけ書けばよくなった",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646738375,
      "updated": 1646738384
    },
    {
      "id": "62273bd11280f00000e4ecbd",
      "text": "   以前どんな状態だったか、今後どんな状態になるかは一切考えなくていい",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646738384,
      "updated": 1646738400
    },
    {
      "id": "62273c1b1280f00000e4ecbf",
      "text": "  今まではafterを実現するのに、時間がかかりすぎるという技術的な問題があった",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646738459,
      "updated": 1646738489
    },
    {
      "id": "62273be11280f00000e4ecbe",
      "text": "   DOMを毎回毎回全部捨てて一から作り直すことで実装できるのだが、あんまりにもコストが大きすぎる",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646738400,
      "updated": 1646738508
    },
    {
      "id": "62273c4d1280f00000e4ecc1",
      "text": "   もちろん、小規模アプリならこれでもいい",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646738508,
      "updated": 1646738519
    },
    {
      "id": "62273c571280f00000e4ecc2",
      "text": "    e.g. [更新行をスクロールバーに表示するUserScript]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646738519,
      "updated": 1646738527
    },
    {
      "id": "62273c601280f00000e4ecc3",
      "text": "  Reactは以前のDOMとの差分だけを更新する手段を取ることで、現実的な処理速度と負荷でDOMを構築できるようになった",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646738527,
      "updated": 1646738574
    },
    {
      "id": "67923cd371b3c20000aa33dc",
      "text": "  \tそれでも要素数がえぐい(2万~)時は結構重かったりする[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1737637076,
      "updated": 1737637738
    },
    {
      "id": "67923f5f71b3c20000aa33dd",
      "text": "  \t\tCosenseがこれで困る",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1737637727,
      "updated": 1737637734
    },
    {
      "id": "62273c8f1280f00000e4ecc4",
      "text": "   差分更新は全部Reactがやってくれるので、アプリ開発者は今の状態だけをReactに伝えればいい",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646738575,
      "updated": 1646738608
    },
    {
      "id": "62273cb01280f00000e4ecc5",
      "text": "    `const Component = (...) => { ...; return <div>...</div>}`のreturn文がその今の状態に当たる",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646738608,
      "updated": 1646738651
    },
    {
      "id": "5fbfd7b04daa920000b5dbbc",
      "text": "[jQuery地獄]から脱することができる今世紀最大の発明",
      "userId": "5bc5772df30ff700134daa92",
      "created": 1606408113,
      "updated": 1606408127
    },
    {
      "id": "67429b7071b3c20000b533e4",
      "text": "\tjQueryと組み合わせても問題ないはず",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1732418417,
      "updated": 1732418427
    },
    {
      "id": "62273bfd6eb4060000106372",
      "text": "",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1646738429,
      "updated": 1646738429
    },
    {
      "id": "67dc07fc71b3c20000264c40",
      "text": "宣言的UIが苦手なところ",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1742473212,
      "updated": 1742473222
    },
    {
      "id": "67dc080571b3c20000264c42",
      "text": "\t要素の削除を考慮したアニメーション",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1742473222,
      "updated": 1742473232
    },
    {
      "id": "67dc080771b3c20000264c43",
      "text": "\t\tアニメーションだと差分を考慮する必要があるので、無理にReactで頑張るより普通にDOMいじったほうが良かったり",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1742473224,
      "updated": 1742473253
    },
    {
      "id": "67dc07fc71b3c20000264c41",
      "text": "",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1742473212,
      "updated": 1742473212
    },
    {
      "id": "62275a0d774b1700003f59d2",
      "text": "[宣言的○○]",
      "userId": "59fb21121207900012774b17",
      "created": 1646746125,
      "updated": 1646746149
    },
    {
      "id": "622758be1982700000be76a3",
      "text": "",
      "userId": "5b4ea932de544f0014198270",
      "created": 1646745790,
      "updated": 1646745790
    },
    {
      "id": "5fc07d761280f00000b19cab",
      "text": "References",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1606450550,
      "updated": 1606450553
    },
    {
      "id": "5fc07d781280f00000b19cad",
      "text": " [https://speakerdeck.com/sonatard/xuan-yan-de-ui 宣言的UI - Speaker Deck]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1606450553,
      "updated": 1606450575
    },
    {
      "id": "5fc07d901280f00000b19cae",
      "text": " [https://qiita.com/erukiti/items/fb7bcbd9d79696579d06 宣言的UIはReact Hooksで完成に至り、現代的設計論が必須の時代になる - Qiita]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1606450577,
      "updated": 1606450601
    },
    {
      "id": "5fc07d771280f00000b19cac",
      "text": "",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1606450552,
      "updated": 1606450552
    }
  ]
}