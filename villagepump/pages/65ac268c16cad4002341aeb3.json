{
  "id": "65ac268c16cad4002341aeb3",
  "title": "トラスティング・トラスト",
  "created": 1705780878,
  "updated": 1705784190,
  "lines": [
    {
      "id": "65ac268c16cad4002341aeb3",
      "text": "トラスティング・トラスト",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705780878,
      "updated": 1705780878
    },
    {
      "id": "65ac268eed60e60000e2bead",
      "text": "[Trusting Trust]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705780878,
      "updated": 1705780885
    },
    {
      "id": "65ac268eed60e60000e2beae",
      "text": "[Trusting Trust 攻撃]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705780879,
      "updated": 1705780897
    },
    {
      "id": "65ac26a1ed60e60000e2beb0",
      "text": "[トンプソンハック]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705780898,
      "updated": 1705780909
    },
    {
      "id": "65ac269ded60e60000e2beaf",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705780893,
      "updated": 1705780893
    },
    {
      "id": "65ac2761ed60e60000e2beb5",
      "text": "[K. Thompson, “Reflections on trusting trust”. Communications of the ACM 27, (1984) https://dl.acm.org/doi/10.1145/358198.358210]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781090,
      "updated": 1705781154
    },
    {
      "id": "65ac27aeed60e60000e2beb7",
      "text": " 信用を信頼することについての考察",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781167,
      "updated": 1705781181
    },
    {
      "id": "65ac2761ed60e60000e2beb6",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781090,
      "updated": 1705781090
    },
    {
      "id": "65ac26afed60e60000e2beb1",
      "text": "コンパイラに、ソースコードからは検知不可能な予期せぬ動作を仕込めるという問題",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705780912,
      "updated": 1705782432
    },
    {
      "id": "65ac2a88ed60e60000e2bed4",
      "text": " コンパイラプログラムのバイナリファイルを解析したら見つけられる",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781896,
      "updated": 1705781920
    },
    {
      "id": "65ac2aa8ed60e60000e2bed5",
      "text": "  が、それはそれで大変 (大変じゃなかったらウイルスと解析ソフトの戦いはない)",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781928,
      "updated": 1705781992
    },
    {
      "id": "65ac2b32ed60e60000e2bed8",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705782066,
      "updated": 1705782066
    },
    {
      "id": "65ac2b21ed60e60000e2bed6",
      "text": "言語[$ L]のコンパイラをセルフホスティングで作成する際に、",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705782050,
      "updated": 1705782160
    },
    {
      "id": "65ac2b90ed60e60000e2beda",
      "text": "   言語[$ L]で書かれたコンパイラのソースコード (e.g. `compiler.l`) が",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705782160,
      "updated": 1705782309
    },
    {
      "id": "65ac2b96ed60e60000e2bedb",
      "text": "    言語[$ L]のコンパイラ (e.g. `gcl`) によってコンパイルされる際に、",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705782166,
      "updated": 1705782310
    },
    {
      "id": "65ac2c08ed60e60000e2bedc",
      "text": "  `gcl` 内部に予期せぬ動作を受け継ぐ機構を仕込んでおくと",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705782280,
      "updated": 1705782422
    },
    {
      "id": "65ac2c0bed60e60000e2bedd",
      "text": "   ソースコード `compiler.l` 内部に何の痕跡も残さずに次のコンパイラプログラム `gcl-v2` に予期せぬ動作を受け継げる",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705782284,
      "updated": 1705782426
    },
    {
      "id": "65ac2b33ed60e60000e2bed9",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705782067,
      "updated": 1705782067
    },
    {
      "id": "65ac2cb1ed60e60000e2bedf",
      "text": "高級言語でコンパイラを作成する際に発生する",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705782450,
      "updated": 1705782492
    },
    {
      "id": "65ac2cd3ed60e60000e2bee0",
      "text": "  最初のコンパイラを別の言語[$ C]で書く時に、何気なく書いている定数 `true` や `false` 等が具体的にどの値を用いているのかが (ドキュメントには書いてあっても) [$ C]のソースコードのどこを読んでも見つからない",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705782484,
      "updated": 1705782784
    },
    {
      "id": "65ac2df7ed60e60000e2bee1",
      "text": " という問題も、これに当たる (はず)",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705782776,
      "updated": 1705783038
    },
    {
      "id": "65ac2e3bed60e60000e2bee2",
      "text": "  ちなみに上の言語[$ C]とは関係ない話だが、[Summer498.icon]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705782844,
      "updated": 1705782987
    },
    {
      "id": "65ac2eb8ed60e60000e2bee5",
      "text": "   C言語 では C23 で `#include<stdbool.h>` 無しで `true` / `false` をコンパイルできるようになるらしいわね",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705782968,
      "updated": 1705782980
    },
    {
      "id": "65ac2e6bed60e60000e2bee3",
      "text": "    [https://zenn.dev/mod_poppo/articles/boolean-in-c C言語のbool型とその名前について 〜もう_Boolは嫌だ〜]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705782892,
      "updated": 1705782970
    },
    {
      "id": "65ac26afed60e60000e2beb2",
      "text": " この問題をより問題 (problem) として洗練させたのが、バックドア仕込み問題",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705780912,
      "updated": 1705783089
    },
    {
      "id": "65ac2f01ed60e60000e2bee6",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705783041,
      "updated": 1705783041
    },
    {
      "id": "65ac3162ed60e60000a0b1a4",
      "text": "[https://note.com/ruiu/n/ncacaa6cf8d8f コンパイラに仕込まれた細工とシステムのセキュリティの話｜Rui Ueyama]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705783651,
      "updated": 1705783655
    },
    {
      "id": "65ac3167ed60e60000a0b1a6",
      "text": " ここの解説がわかりやすいと思う",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705783655,
      "updated": 1705783680
    },
    {
      "id": "65ac3168ed60e60000a0b1a7",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705783656,
      "updated": 1705783656
    },
    {
      "id": "65ac3168ed60e60000a0b1a8",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705783656,
      "updated": 1705783656
    },
    {
      "id": "65ac3163ed60e60000a0b1a5",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705783651,
      "updated": 1705783651
    },
    {
      "id": "65ac273ced60e60000e2beb3",
      "text": "Thompson が実際に UNIX の開発時に仕込んでいたっぽい",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781053,
      "updated": 1705782077
    },
    {
      "id": "65ac2807ed60e60000e2beb8",
      "text": " [https://ja.wikipedia.org/wiki/ケン・トンプソン ケン・トンプソン]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781256,
      "updated": 1705781278
    },
    {
      "id": "65ac281fed60e60000e2beb9",
      "text": "  > 1983年 - チューリング賞。リッチーと共同受賞。",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781280,
      "updated": 1705781308
    },
    {
      "id": "65ac283ced60e60000e2bebc",
      "text": "   > 「汎用オペレーティングシステム理論の発展への貢献と、特にUNIXオペレーティングシステムの実装に対して」。",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781308,
      "updated": 1705781318
    },
    {
      "id": "65ac2842ed60e60000e2bebd",
      "text": "  > この時の受賞記念講演で述べたのが \"Reflections on Trusting Trust\"、",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781315,
      "updated": 1705781890
    },
    {
      "id": "65ac2979ed60e60000e2becb",
      "text": "   > 後に Thompson hack と呼ばれるようになる、",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781626,
      "updated": 1705781655
    },
    {
      "id": "65ac2897ed60e60000e2bec0",
      "text": "    > loginプログラムにバックドアを仕組むようなコンパイラを作るようコンパイラのバイナリを仕組み、その痕跡をコンパイラのソースからは消す、",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781399,
      "updated": 1705781410
    },
    {
      "id": "65ac28a1ed60e60000e2bec1",
      "text": "   > という驚異的な技巧の解説で、",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781410,
      "updated": 1705781415
    },
    {
      "id": "65ac28a6ed60e60000e2bec2",
      "text": "   > [* しかも実際にいくつかのシステムに仕込まれていた]とする衝撃的なもの[$ ^{[注釈 1]} ]であった。",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781415,
      "updated": 1705781683
    },
    {
      "id": "65ac2857ed60e60000e2bebe",
      "text": "  > この講演だけで独立したコンピュータセキュリティに対する重要な指摘",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781335,
      "updated": 1705781709
    },
    {
      "id": "65ac29cced60e60000e2becc",
      "text": "    > （仮にコンパイラの全ソースをチェックしても、それだけでは安全ではないかもしれない）",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781709,
      "updated": 1705781714
    },
    {
      "id": "65ac29d2ed60e60000e2becd",
      "text": "   > とされている[$ ^{[注釈 2]} ]。",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781714,
      "updated": 1705781715
    },
    {
      "id": "65ac273ced60e60000e2beb4",
      "text": "\t[$ ^{[注釈1]} ]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781053,
      "updated": 1705781493
    },
    {
      "id": "65ac28f2ed60e60000e2bec4",
      "text": " \t> ジャーゴンファイル（ http://catb.org/jargon/html/B/back-door.html ）では、",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781490,
      "updated": 1705781739
    },
    {
      "id": "65ac29eaed60e60000e2bece",
      "text": "    > トンプソンはベル研の外部には、その仕掛けのあるコンパイラが配布されたことは一切無い（never distributed）と言っていると書いた後、",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781739,
      "updated": 1705781756
    },
    {
      "id": "65ac29f8ed60e60000e2becf",
      "text": "   > 編者（エリック・レイモンド）は独立した2人の情報提供者から不審なログインに関する示唆を得ているとも書いており、",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781753,
      "updated": 1705781783
    },
    {
      "id": "65ac2a09ed60e60000e2bed0",
      "text": "  > その他の状況も併せ実際には外部にも出ていたものとみる論もある（『Unix考古学』を参照）。",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781769,
      "updated": 1705781784
    },
    {
      "id": "65ac290bed60e60000e2bec5",
      "text": " [$ ^{[注釈2]} ]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781516,
      "updated": 1705781525
    },
    {
      "id": "65ac2917ed60e60000e2bec6",
      "text": "  > 直接の主題ではないが、",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781527,
      "updated": 1705781850
    },
    {
      "id": "65ac2a59ed60e60000e2bed3",
      "text": "    > 最後に警鐘として、講演した内容が示すように、原理的に、コンピュータのセキュリティには根源的な所に「信用を信用する」しかないという危うさがあるのだから、（こんにちで言うスクリプトキディに相当するような）セキュリティを脅かしている子供たちを、「天才ハッカー少年」などとマスコミがそやすことは、将来の禍いの元である、",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781850,
      "updated": 1705781851
    },
    {
      "id": "65ac2a4ced60e60000e2bed2",
      "text": "   > といったことも述べている。",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781836,
      "updated": 1705781838
    },
    {
      "id": "65ac2932ed60e60000e2bec7",
      "text": "  > これは技術的な本筋とはあまり関係ないのだが、映画『ウォー・ゲーム』の公開などでコンピュータの一般への爆発的普及とセキュリティについて関心が高まっていた時期であったため、学会誌上でリチャード・ストールマンらと議論になった。",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781554,
      "updated": 1705781554
    },
    {
      "id": "65ac28deed60e60000e2bec3",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705781471,
      "updated": 1705781471
    },
    {
      "id": "65ac3205ed60e60000a0b1a9",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705783814,
      "updated": 1705783814
    },
    {
      "id": "65ac3205ed60e60000a0b1aa",
      "text": "関連",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705783814,
      "updated": 1705783819
    },
    {
      "id": "65ac320aed60e60000a0b1ac",
      "text": " [記号接地問題]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705783819,
      "updated": 1705783823
    },
    {
      "id": "65ac3212ed60e60000a0b1ad",
      "text": "  言語(言語学) で使われる記号と実際のものをどのようにして対応付けるのか、という問題",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705783827,
      "updated": 1705783898
    },
    {
      "id": "65ac3270ed60e60000a0b1ae",
      "text": "   話し手の中で意味が接地していなくても、",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705783920,
      "updated": 1705784099
    },
    {
      "id": "65ac3322ed60e60000a0b1af",
      "text": "     話し手が他の単語との関係に十分注意して、既知の関係と矛盾しないように発話をし、",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705784099,
      "updated": 1705784190
    },
    {
      "id": "65ac3328ed60e60000a0b1b0",
      "text": "     言語の聞き手が意味を推測すると、",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705784105,
      "updated": 1705784110
    },
    {
      "id": "65ac332eed60e60000a0b1b1",
      "text": "    話し手が意味をわかっているかのようにコミュニケーションを取れる",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705784110,
      "updated": 1705784113
    },
    {
      "id": "65ac3335ed60e60000a0b1b2",
      "text": "    \t……ということを近年[GPT-4.icon]が実証している気がする[Summer498.icon]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705784117,
      "updated": 1705784143
    },
    {
      "id": "65ac320aed60e60000a0b1ab",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1705783819,
      "updated": 1705783819
    }
  ]
}