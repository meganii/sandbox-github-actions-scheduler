{
  "id": "63ede221e9950a001ba975e2",
  "title": "scrapbox-userscript-std/PR:108",
  "created": 1676534306,
  "updated": 1676805892,
  "lines": [
    {
      "id": "63ede221e9950a001ba975e2",
      "text": "scrapbox-userscript-std/PR:108",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534329
    },
    {
      "id": "63ede2227838e3000035c465",
      "text": "from [@Mijinko_SD]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63edeb547838e30000c2dad9",
      "text": "[https://github.com/takker99/scrapbox-userscript-std/pull/108 コードブロックの取得、および上書きを行う関数の追加 by MijinkoSD · Pull Request #108 · takker99/scrapbox-userscript-std]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676536660,
      "updated": 1676536660
    },
    {
      "id": "63ede2227838e3000035c466",
      "text": "[/takker/⬜️コードブロックの取得、および上書きを行う関数の追加]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c467",
      "text": " (nit) convert named functions to arrow functions",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c468",
      "text": " 折角なのでテストを加えたい",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c469",
      "text": "  `getCodeBlocks`",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c46a",
      "text": "  `updateCodeBlock`",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c46b",
      "text": "  ...",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c46c",
      "text": "  `makeTitleChangeCommit`",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c46d",
      "text": "  `isCodeFile`",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c46e",
      "text": "   これの用途がいまいちわからない[takker.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c46f",
      "text": "   `unknown`ではなく、いくらか型を絞ってしまってもいいのでは？",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2807838e3000035c481",
      "text": "   それは[updateCodeBlock()]のnewCodeの[- 無駄に種類の多い]引数の型を判別するために用意したものです[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534400,
      "updated": 1676534484
    },
    {
      "id": "63ede2b97838e3000035c482",
      "text": "   \tunknownにしたのは他でも使えるようにするためだけなので、ぶっちゃけ不要です",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534457,
      "updated": 1676534481
    },
    {
      "id": "63ede3bc7838e3000035c489",
      "text": "   \tこれによる型判別を使用せずに、updateCodeBlock()の引数を`newCode: {content: string | string[]} | CodeFile`にするという手もある",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534716,
      "updated": 1676534769
    },
    {
      "id": "63ede3f17838e3000035c48a",
      "text": "   \t\tこれだと関数内で`newCode`を使うのが楽になる反面、呼び出し方が若干複雑になるというデメリットもある",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534769,
      "updated": 1676534829
    },
    {
      "id": "63ede42e7838e3000035c48b",
      "text": "   \t\tどちらが良いかわからなかった",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534830,
      "updated": 1676534834
    },
    {
      "id": "63ede2227838e3000035c470",
      "text": "  `flatCodeBodies`",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c471",
      "text": "   まあこれはいいか[takker.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2e07838e3000035c483",
      "text": "   よく使う処理を複数箇所に書きたくないので関数化しました[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534495,
      "updated": 1676534534
    },
    {
      "id": "63eeed691280f0000046046e",
      "text": "    なるほど[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676602729,
      "updated": 1676602738
    },
    {
      "id": "63ede2227838e3000035c472",
      "text": "  `makeCommits`",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c473",
      "text": "  `makeIndent`",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c474",
      "text": "  `makeCodeBlockTitle`",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63eded437838e300005461f4",
      "text": "  [テストコードの書き方]（というかそもそもテストで何をするのか）がよくわからなかったので、多分人任せになるかもしれません…[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676537155,
      "updated": 1676541060
    },
    {
      "id": "63ee75da7838e300009430c8",
      "text": "  `getCodeBlocks()`と`isCodeFile()`と`extractFromCodeTitle()`の3つの関数のテストコードを書いてみました[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676572122,
      "updated": 1676572163
    },
    {
      "id": "63ee76017838e300009430c9",
      "text": "  \t初めて書いたので、良くない点や間違っている点があるかもしれません",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676572161,
      "updated": 1676572183
    },
    {
      "id": "63ee76167838e300009430ca",
      "text": "   \tあれば教えていただけると幸いです",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676572183,
      "updated": 1676572195
    },
    {
      "id": "63eeeddf1280f00000460473",
      "text": "   \t了解です[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676602848,
      "updated": 1676602851
    },
    {
      "id": "63ee761e7838e300009430cb",
      "text": "   WebSocketの通信を挟む関数や、exportしていない関数のテストコードの書き方はわからなかったので、まだ書いていません",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676572190,
      "updated": 1676572372
    },
    {
      "id": "63eeed771280f0000046046f",
      "text": "    exportしてないやつは無理です[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676602743,
      "updated": 1676602755
    },
    {
      "id": "63eeed831280f00000460470",
      "text": "    通信系はmock使わないと無理です[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676602755,
      "updated": 1676602774
    },
    {
      "id": "63eeeda41280f00000460472",
      "text": "     scrapbox.io serverの挙動を全部emulateしなきゃいけないのでやりたくない……",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676602788,
      "updated": 1676602820
    },
    {
      "id": "63eeed961280f00000460471",
      "text": "     fetchだけなら[scrapbox-userscript-icon-suggestion]でいくつか実装例がありますが……やりたくなさすぎて放置している……",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676602774,
      "updated": 1676602845
    },
    {
      "id": "63f0aa7f1280f00000dc20ff",
      "text": "   [https://code2svg.vercel.app/svg/https://raw.githubusercontent.com/MijinkoSD/scrapbox-userscript-std/7116444c93d9a2a4ec0b78e489182cb724f6101e/browser/websocket/updateCodeFile.test.ts#.svg]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676716671,
      "updated": 1676716694
    },
    {
      "id": "63f0aac41280f00000dc2100",
      "text": "   あり？[https://code2svg.vercel.app/svg/L1/https://raw.githubusercontent.com/MijinkoSD/scrapbox-userscript-std/7116444c93d9a2a4ec0b78e489182cb724f6101e/browser/websocket/updateCodeFile.test.ts#.svg]っているの？[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676716740,
      "updated": 1676805817
    },
    {
      "id": "63f0abb51280f00000dc2104",
      "text": "    あーなるほど。`isSimpleCodeFile`を[https://code2svg.vercel.app/svg/L2-8/https://raw.githubusercontent.com/MijinkoSD/scrapbox-userscript-std/7116444c93d9a2a4ec0b78e489182cb724f6101e/browser/websocket/updateCodeFile.ts#.svg]しているファイル中で定義しているから、`deno.ns`を入れる必要があるわけか",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676716981,
      "updated": 1676805823
    },
    {
      "id": "63f0ac3a1280f00000dc2105",
      "text": "    `isSimpleCodeFile.ts`に分離したほうがいいと思う",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676717114,
      "updated": 1676717142
    },
    {
      "id": "63f0c9157838e300001db91a",
      "text": "    了解しました[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676724501,
      "updated": 1676724504
    },
    {
      "id": "63ede2227838e3000035c475",
      "text": " `getCodeBlocks`は`/rest`でいいと思います[takker.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c476",
      "text": "  `pull()`は`getPage()`をちょこっとwrapしただけ。そもそも必要性があやしい",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c477",
      "text": "  [組み込み型定義の違いでdirectoryを分け]たいので、`/rest`に置くのが適切",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c478",
      "text": "   `/rest`はどの環境でも使えるファイルを置いている",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c479",
      "text": "   `/websocket`はbrowser環境でしか動かせないので、ここに`getCodeBlocks`を入れると、不要な制約がかかってしまう",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c47a",
      "text": "  　　ちなみに`/dom`と`/websocket`を分けているのは、importの副作用による不要なコードが混入するのを防ぐため",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c47b",
      "text": "  　　 `/websocket`をimportに含めるとscrapbox-parserのコードが含まれてしまう",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c47c",
      "text": "  　　 これは`/dom`だけ使うなら不要",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede3877838e3000035c488",
      "text": "  　了解です[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534663,
      "updated": 1676534687
    },
    {
      "id": "63ede2227838e3000035c47d",
      "text": " PRに[takker.icon]もcommitしたいけどできるのかな？[takker.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c47e",
      "text": "  PRにcommitできるのはauthorだけ？",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede2227838e3000035c47f",
      "text": "  うまいこと複数人が直接commitできるbranchを生やせばいいのかな？",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676534306
    },
    {
      "id": "63ede5b47838e3000035c4a8",
      "text": "  できるならできるようにしたい[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676535221,
      "updated": 1676535225
    },
    {
      "id": "63ede2227838e3000035c480",
      "text": "\t`updateCodeFile.ts`の`CodeFile`の適切な名前を考えたい[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534306,
      "updated": 1676536382
    },
    {
      "id": "63ede9167838e3000035c4a9",
      "text": "\t\t`browser/dom/extractCodeFiles.ts`の`CodeFile`と名前がぶつかってしまっている",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676536085,
      "updated": 1676536389
    },
    {
      "id": "63ef1a647838e30000efa646",
      "text": "\t\t思いつかない……………",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676614245,
      "updated": 1676614252
    },
    {
      "id": "63ef3a557838e30000e6b939",
      "text": "\t\t`SimpleCodeFile`へ変更した",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676622421,
      "updated": 1676622426
    },
    {
      "id": "63ef4c4f7838e3000088b83c",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676627023,
      "updated": 1676627023
    },
    {
      "id": "63ede4cb7838e3000035c48d",
      "text": "メモ[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534987,
      "updated": 1676534988
    },
    {
      "id": "63ede4cd7838e3000035c48f",
      "text": "\t`local_test/fmt-watch.ps1`",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534988,
      "updated": 1676535000
    },
    {
      "id": "63ede4d97838e3000035c490",
      "text": "\tcode:fmt-watch.ps1",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676535001,
      "updated": 1676535007
    },
    {
      "id": "63ede4e07838e3000035c491",
      "text": "\t $files = @(",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676535007,
      "updated": 1676727665
    },
    {
      "id": "63f0d5707838e30000af71f1",
      "text": "      \"./local_test/test.ts\"",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727665,
      "updated": 1676727665
    },
    {
      "id": "63f0d5707838e30000af71f2",
      "text": "      \"./local_test/getCodeBlocks.test.ts\"",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727665,
      "updated": 1676727665
    },
    {
      "id": "63f0d5707838e30000af71f3",
      "text": "      \"./browser/websocket/mod.ts\"",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727665,
      "updated": 1676727665
    },
    {
      "id": "63f0d5707838e30000af71f4",
      "text": "      \"./browser/websocket/updateCodeBlock.ts\"",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727665,
      "updated": 1676727665
    },
    {
      "id": "63f0d5707838e30000af71f5",
      "text": "      \"./browser/websocket/updateCodeFile.ts\"",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727665,
      "updated": 1676727665
    },
    {
      "id": "63f0d5707838e30000af71f6",
      "text": "      \"./browser/websocket/updateCodeFile.test.ts\"",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727665,
      "updated": 1676727665
    },
    {
      "id": "63f0d5707838e30000af71f7",
      "text": "      \"./browser/websocket/isSimpleCodeFile.ts\"",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727665,
      "updated": 1676727665
    },
    {
      "id": "63f0d5707838e30000af71f8",
      "text": "      \"./browser/websocket/isSimpleCodeFile.test.ts\"",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727665,
      "updated": 1676727665
    },
    {
      "id": "63f0d5707838e30000af71f9",
      "text": "      \"./browser/websocket/_codeBlock.ts\"",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727665,
      "updated": 1676727665
    },
    {
      "id": "63f0d5707838e30000af71fa",
      "text": "      \"./browser/websocket/_codeBlock.test.ts\"",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727665,
      "updated": 1676727665
    },
    {
      "id": "63f0d5707838e30000af71fb",
      "text": "      \"./rest/mod.ts\"",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727665,
      "updated": 1676727665
    },
    {
      "id": "63f0d5707838e30000af71fc",
      "text": "      \"./rest/getCodeBlocks.ts\"",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727665,
      "updated": 1676727665
    },
    {
      "id": "63f0d5707838e30000af71fd",
      "text": "      \"./rest/getCodeBlocks.test.ts\"",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727665,
      "updated": 1676727665
    },
    {
      "id": "63f0d5707838e30000af71fe",
      "text": "  ) | ForEach-Object {$PSScriptRoot + \"/../\" + $PSItem}",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727665,
      "updated": 1676727665
    },
    {
      "id": "63f0d5707838e30000af71ff",
      "text": "  ",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727665,
      "updated": 1676727665
    },
    {
      "id": "63f0d5707838e30000af7200",
      "text": "  deno fmt --watch $files",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727665,
      "updated": 1676727665
    },
    {
      "id": "63eeede91280f00000460474",
      "text": " [deno.json]にいくつかコマンドを定義しようかな[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676602857,
      "updated": 1676602879
    },
    {
      "id": "63eeedff1280f00000460475",
      "text": "  `deno task <なんとか>`で実行できるようになる",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676602879,
      "updated": 1676602891
    },
    {
      "id": "63ede4cc7838e3000035c48e",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676534988,
      "updated": 1676534988
    },
    {
      "id": "63ef0f631280f00000f677ca",
      "text": "2023-02-17 14:23:49 必要になったので先に[#109 https://github.com/takker99/scrapbox-userscript-std/pull/109]をmergeします。すみません[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676611427,
      "updated": 1676611454
    },
    {
      "id": "63ef0f651280f00000f677cb",
      "text": "　よき[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676611429,
      "updated": 1676614211
    },
    {
      "id": "63ef1a3e7838e30000efa645",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676614208,
      "updated": 1676614208
    },
    {
      "id": "63f0d5697838e30000af71ef",
      "text": "[deno fmt]を度々やり忘れてしまっていてすみません[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727658,
      "updated": 1676727678
    },
    {
      "id": "63f0d57d7838e30000af7201",
      "text": "\tプッシュ前に`deno fmt`を入力するように心がけます",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727678,
      "updated": 1676727694
    },
    {
      "id": "63f0d5697838e30000af71f0",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676727658,
      "updated": 1676727658
    },
    {
      "id": "63f0d8277838e30000af7202",
      "text": "プッシュ前にやること[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676728360,
      "updated": 1676728364
    },
    {
      "id": "63f0d82b7838e30000af7204",
      "text": "\t$ deno fmt",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676728364,
      "updated": 1676728378
    },
    {
      "id": "63f0d8a07838e30000af7208",
      "text": "\t\tフォーマットし忘れの阻止",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676728480,
      "updated": 1676728492
    },
    {
      "id": "63f0d83a7838e30000af7205",
      "text": "\t$ deno test --allow-read",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676728379,
      "updated": 1676728398
    },
    {
      "id": "63f0d8ad7838e30000af7209",
      "text": "\t\tテストファイルやテスト対象に異常があればここでエラーが出る",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676728493,
      "updated": 1676728519
    },
    {
      "id": "63f0d8427838e30000af7206",
      "text": "\t$ wsl deno check ./**/*.ts",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676728386,
      "updated": 1676728410
    },
    {
      "id": "63f0d8277838e30000af7203",
      "text": "\t\tWindows環境で[ワイルドカード]を使用する方法がわからなかったので、[WSL 2]を噛ませる",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1676728360,
      "updated": 1676728472
    },
    {
      "id": "63f0d8617838e30000af7207",
      "text": " [pre-commit]を使うと自動化できるかも？[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676728419,
      "updated": 1676805847
    },
    {
      "id": "63f206d61280f000006df6ad",
      "text": " 　提案しておいてなんですが、自分も一度も使ったことないです……",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676805847,
      "updated": 1676805877
    },
    {
      "id": "63f206f41280f000006df6af",
      "text": " 　　名前だけ知ってる",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676805877,
      "updated": 1676805880
    },
    {
      "id": "63f206f71280f000006df6b0",
      "text": " 　今度試しに使ってみようかな",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676805880,
      "updated": 1676805892
    },
    {
      "id": "63f206c71280f000006df6ac",
      "text": "",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1676805832,
      "updated": 1676805832
    }
  ]
}