{
  "id": "67051a09c3b8a1001c72c914",
  "title": "IDを渡すべきかドメインオブジェクトを渡すべきか",
  "created": 1728387595,
  "updated": 1728397186,
  "lines": [
    {
      "id": "67051a09c3b8a1001c72c914",
      "text": "IDを渡すべきかドメインオブジェクトを渡すべきか",
      "userId": "5b165e309654e40014156411",
      "created": 1728387595,
      "updated": 1728387595
    },
    {
      "id": "67051a0b1564110000183660",
      "text": "#プログラミング",
      "userId": "5b165e309654e40014156411",
      "created": 1728387595,
      "updated": 1728387597
    },
    {
      "id": "67051b49156411000018367d",
      "text": "",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728387913,
      "updated": 1728395124
    },
    {
      "id": "67051b49156411000018367e",
      "text": "[windymelt.icon] 誰か書き込んで(割り込み歓迎)",
      "userId": "5b165e309654e40014156411",
      "created": 1728387913,
      "updated": 1728389642
    },
    {
      "id": "67051a0d1564110000183662",
      "text": "",
      "userId": "5b165e309654e40014156411",
      "created": 1728387597,
      "updated": 1728387600
    },
    {
      "id": "67051a111564110000183663",
      "text": "[windymelt.icon]",
      "userId": "5b165e309654e40014156411",
      "created": 1728387601,
      "updated": 1728387603
    },
    {
      "id": "67051a131564110000183664",
      "text": " [ドメインオブジェクト]を渡したいとき、2つやりかたがある",
      "userId": "5b165e309654e40014156411",
      "created": 1728387603,
      "updated": 1728387906
    },
    {
      "id": "67051a251564110000183665",
      "text": "  IDを渡して、向こうでよしなにやってもらう",
      "userId": "5b165e309654e40014156411",
      "created": 1728387621,
      "updated": 1728387628
    },
    {
      "id": "67051b28156411000018367b",
      "text": "   `someAction(foo.id)`",
      "userId": "5b165e309654e40014156411",
      "created": 1728387880,
      "updated": 1728387898
    },
    {
      "id": "67051a2d1564110000183666",
      "text": "  そのオブジェクトをそのまま渡す",
      "userId": "5b165e309654e40014156411",
      "created": 1728387629,
      "updated": 1728387637
    },
    {
      "id": "67051b32156411000018367c",
      "text": "   `someAction(foo)`",
      "userId": "5b165e309654e40014156411",
      "created": 1728387890,
      "updated": 1728387895
    },
    {
      "id": "67052cdc156411000018a02f",
      "text": "  `Action`と書いてるけどドメインアクションとはそんなに関係なくて、ドメインオブジェクトもらって何かするくらいの意味しかない",
      "userId": "5b165e309654e40014156411",
      "created": 1728392412,
      "updated": 1728392431
    },
    {
      "id": "67051a371564110000183667",
      "text": " どっちがエエのか？",
      "userId": "5b165e309654e40014156411",
      "created": 1728387639,
      "updated": 1728387644
    },
    {
      "id": "67051a3f1564110000183668",
      "text": "  [windymelt.icon] はオブジェクトをそのまま渡すべきと考えている",
      "userId": "5b165e309654e40014156411",
      "created": 1728387648,
      "updated": 1728391732
    },
    {
      "id": "67052a361564110000fc20e9",
      "text": "  　主張の前提",
      "userId": "5b165e309654e40014156411",
      "created": 1728391736,
      "updated": 1728391742
    },
    {
      "id": "67052a3c1564110000fc20ea",
      "text": "   　強い型システムを使える",
      "userId": "5b165e309654e40014156411",
      "created": 1728391742,
      "updated": 1728391750
    },
    {
      "id": "67051a8a156411000018366f",
      "text": "   感じているメリット",
      "userId": "5b165e309654e40014156411",
      "created": 1728387723,
      "updated": 1728387730
    },
    {
      "id": "67051a931564110000183670",
      "text": "    直感的である",
      "userId": "5b165e309654e40014156411",
      "created": 1728387731,
      "updated": 1728387733
    },
    {
      "id": "67051a981564110000183671",
      "text": "    ID同士だと取り違えるリスクがある",
      "userId": "5b165e309654e40014156411",
      "created": 1728387737,
      "updated": 1728387747
    },
    {
      "id": "67051aa31564110000183672",
      "text": "     強い型システムを持つ言語ではそれも回避できる",
      "userId": "5b165e309654e40014156411",
      "created": 1728387747,
      "updated": 1728387755
    },
    {
      "id": "6705202515641100007a45f2",
      "text": "     そもそも型システムがよわいとオブジェクト渡しても大して嬉しくない",
      "userId": "5b165e309654e40014156411",
      "created": 1728389159,
      "updated": 1728389181
    },
    {
      "id": "67051a481564110000183669",
      "text": "   これで困る例",
      "userId": "5b165e309654e40014156411",
      "created": 1728387656,
      "updated": 1728387715
    },
    {
      "id": "67051a5b156411000018366a",
      "text": "    多対多の関係を扱う場合",
      "userId": "5b165e309654e40014156411",
      "created": 1728387676,
      "updated": 1728387678
    },
    {
      "id": "67051a5e156411000018366b",
      "text": "    外部システムとのやりとりである場合",
      "userId": "5b165e309654e40014156411",
      "created": 1728387679,
      "updated": 1728387689
    },
    {
      "id": "67051a68156411000018366c",
      "text": "     典型的にはDB",
      "userId": "5b165e309654e40014156411",
      "created": 1728387689,
      "updated": 1728387691
    },
    {
      "id": "67051a71156411000018366d",
      "text": "     典型的にはユーザがURLを入力するとき",
      "userId": "5b165e309654e40014156411",
      "created": 1728387697,
      "updated": 1728387707
    },
    {
      "id": "67051a0b1564110000183661",
      "text": "    少ないはず",
      "userId": "5b165e309654e40014156411",
      "created": 1728387595,
      "updated": 1728387776
    },
    {
      "id": "67051ac01564110000183673",
      "text": "   そもそもオブジェクトのIDという概念は通常は表に出てこない特殊な概念なはず",
      "userId": "5b165e309654e40014156411",
      "created": 1728387777,
      "updated": 1728387794
    },
    {
      "id": "67051ad21564110000183674",
      "text": "    自然界にIDはない",
      "userId": "5b165e309654e40014156411",
      "created": 1728387794,
      "updated": 1728387799
    },
    {
      "id": "67051ad71564110000183675",
      "text": "    しかし管理上の都合でidentifyする必要があるのでそうしているにすぎない",
      "userId": "5b165e309654e40014156411",
      "created": 1728387799,
      "updated": 1728387815
    },
    {
      "id": "67051aed1564110000183676",
      "text": "     RGBで表現される色にIDはない",
      "userId": "5b165e309654e40014156411",
      "created": 1728387822,
      "updated": 1728387830
    },
    {
      "id": "67051af71564110000183677",
      "text": "      値がそのままアイデンティティだから",
      "userId": "5b165e309654e40014156411",
      "created": 1728387832,
      "updated": 1728387839
    },
    {
      "id": "67051aff1564110000183678",
      "text": "     人間にはIDがある",
      "userId": "5b165e309654e40014156411",
      "created": 1728387839,
      "updated": 1728387844
    },
    {
      "id": "67051b041564110000183679",
      "text": "      なんらかの意味で同一性を追跡し続ける必要があるから",
      "userId": "5b165e309654e40014156411",
      "created": 1728387844,
      "updated": 1728387859
    },
    {
      "id": "67051b17156411000018367a",
      "text": "      卑近な例では、名字がかわっても同一人物とみなす必要がある",
      "userId": "5b165e309654e40014156411",
      "created": 1728387863,
      "updated": 1728387873
    },
    {
      "id": "6705205671b3c200005bba48",
      "text": "",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1728389204,
      "updated": 1728389206
    },
    {
      "id": "67051a83156411000018366e",
      "text": "概念的には[値渡しと参照渡し]になる[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1728387716,
      "updated": 1728389216
    },
    {
      "id": "6705204071b3c200005bba47",
      "text": "　[windymelt.icon]イミュータブルな言語だとあまり区別しなくてよくなる？",
      "userId": "5b165e309654e40014156411",
      "created": 1728389183,
      "updated": 1728389680
    },
    {
      "id": "67052b791564110000ea54f9",
      "text": "",
      "userId": "5b165e309654e40014156411",
      "created": 1728392057,
      "updated": 1728392057
    },
    {
      "id": "67052b5c1564110000ea54f4",
      "text": "Twitterにも同じことを書いてたのの転記です",
      "userId": "5b165e309654e40014156411",
      "created": 1728392028,
      "updated": 1728392045
    },
    {
      "id": "67052b6c1564110000ea54f7",
      "text": "[https://x.com/windymelt/status/1843568401987551443 XユーザーのWindymelt💀(めるくん)🚀❤️‍🔥さん: 「素朴な疑問なのだけれど、 someActionForSomeDomainObjectという処理があるとき、 (SomeDomainObjectId) =&gt; ResultType というシグネチャにするのと、 (SomeDomainObject) =&gt; ResultType というシグネチャにするのが考えられるけれど、 みんなどっちで書いてますか。基準とかある？」 / X]",
      "userId": "5b165e309654e40014156411",
      "created": 1728392045,
      "updated": 1728392045
    },
    {
      "id": "67052b5e1564110000ea54f5",
      "text": "",
      "userId": "5b165e309654e40014156411",
      "created": 1728392031,
      "updated": 1728392031
    },
    {
      "id": "670539ae53ab47000007b571",
      "text": " 基本的に関数がIDを引数に取るのは集約を解決する場合が殆ど[RayStarkMC.icon]",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728395695,
      "updated": 1728396361
    },
    {
      "id": "67053a1653ab47000007b577",
      "text": " \tDBからの読み込みはこのケースに該当するからIDを引数に取る",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728395800,
      "updated": 1728397099
    },
    {
      "id": "67053a2c53ab47000007b579",
      "text": " \tたまに集約がエンティティのコレクションを持っている場合にIDで存在チェックしたりする",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728395821,
      "updated": 1728396689
    },
    {
      "id": "670539f253ab47000007b574",
      "text": " かつ、そうでないロジックが集約の全てのプロパティを消費するロジックも稀",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728395764,
      "updated": 1728397016
    },
    {
      "id": "67053ee253ab470000d063c8",
      "text": " \tモデルの永続化はこれに該当するから素直にモデルを引数に取る",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728397027,
      "updated": 1728397083
    },
    {
      "id": "67053a1253ab47000007b576",
      "text": " 純粋なロジック毎に入力型と出力型を用意しておいて、集約から入力型を抽出する関数を定義する",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728395796,
      "updated": 1728396422
    },
    {
      "id": "67053a8653ab47000007b57b",
      "text": " \tこのロジックの引数をIDにすると、リポジトリへの問い合わせが発生して不純になる",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728395911,
      "updated": 1728395974
    },
    {
      "id": "67053aa753ab47000007b57c",
      "text": " \tこのロジックの引数を集約にすると、ロジックが集約のデータの持ち方に影響を受ける",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728395944,
      "updated": 1728395998
    },
    {
      "id": "67053ccc53ab4700003d1cef",
      "text": " \tデータ型用意するのが手間なら普通の関数として定義しても良い",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396493,
      "updated": 1728396560
    },
    {
      "id": "67053c0353ab47000007b594",
      "text": " だいたい以下のパターン",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396292,
      "updated": 1728396312
    },
    {
      "id": "67053dc853ab47000007b597",
      "text": " \t時々pureLogicによる判断の後に追加でDBにアクセスしないといけないケースがある",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396746,
      "updated": 1728396765
    },
    {
      "id": "67053ddc53ab47000007b599",
      "text": " \t\tDomain Modeling Made Functionalのsandwitchパターンに持っていく",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396766,
      "updated": 1728396789
    },
    {
      "id": "67053df853ab47000007b59a",
      "text": " \t\t\tDBアクセス -> 純粋ロジック -> DBアクセス -> 純粋ロジック -> DBアクセス -> ...",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396793,
      "updated": 1728396812
    },
    {
      "id": "67053ae053ab47000007b57d",
      "text": "code:scala",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396002,
      "updated": 1728396036
    },
    {
      "id": "670539ee53ab47000007b573",
      "text": "\tclass SomeCommand {",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728395760,
      "updated": 1728396104
    },
    {
      "id": "67053c2c53ab47000007b596",
      "text": "\t  // 依存関係を取るなりコマンド内でベタ書きするなり",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396333,
      "updated": 1728396350
    },
    {
      "id": "67053b5353ab47000007b589",
      "text": "   val readModel: ID => Model = ???",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396117,
      "updated": 1728396229
    },
    {
      "id": "67053b6a53ab47000007b58a",
      "text": "   val writeModel: Model => () = ???",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396140,
      "updated": 1728396227
    },
    {
      "id": "67053b7453ab47000007b58b",
      "text": "   val pureLogic: LogicInput => LogicOutput = ???",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396152,
      "updated": 1728396231
    },
    {
      "id": "67053baf53ab47000007b58e",
      "text": "   val deriveLogicInput: Model => LogicInput = ???",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396208,
      "updated": 1728396260
    },
    {
      "id": "67053bdc53ab47000007b591",
      "text": "   val deriveOutput LogicOutput => Output = ???",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396254,
      "updated": 1728396272
    },
    {
      "id": "67053bf053ab47000007b592",
      "text": "   ",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396273,
      "updated": 1728396868
    },
    {
      "id": "67053e4353ab47000053fb7a",
      "text": "   //FutureとかEitherとか略",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396868,
      "updated": 1728396881
    },
    {
      "id": "67053b1553ab47000007b580",
      "text": "\t  def execute(input: Input): Output {",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396055,
      "updated": 1728396176
    },
    {
      "id": "67053b4d53ab47000007b588",
      "text": "\t    val model = readModel(input.id) //副作用",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396110,
      "updated": 1728396610
    },
    {
      "id": "67053d4353ab4700003d1cf1",
      "text": "\t    /*ここから純粋*/",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396612,
      "updated": 1728396618
    },
    {
      "id": "67053b9a53ab47000007b58c",
      "text": "     val logicInput = deriveInput(model)",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396188,
      "updated": 1728396203
    },
    {
      "id": "67053baa53ab47000007b58d",
      "text": "     val logicOutput = pureLogic(logicInput)",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396204,
      "updated": 1728396244
    },
    {
      "id": "67053bd453ab47000007b590",
      "text": "     val output = deriveOutput(logicOutput)",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396245,
      "updated": 1728396283
    },
    {
      "id": "67053c9753ab4700003d1ced",
      "text": "     val modifiedModel = ??? //outputを使ってmodel更新",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396441,
      "updated": 1728397186
    },
    {
      "id": "67053d4b53ab4700003d1cf3",
      "text": "     /*ここまで純粋*/",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396620,
      "updated": 1728396625
    },
    {
      "id": "67053cb253ab4700003d1cee",
      "text": "     writeModel(modifiedModel) //副作用",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396467,
      "updated": 1728396597
    },
    {
      "id": "67053bfb53ab47000007b593",
      "text": "     output",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396285,
      "updated": 1728396287
    },
    {
      "id": "67053b4953ab47000007b587",
      "text": "   }",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396106,
      "updated": 1728396109
    },
    {
      "id": "67053b1453ab47000007b57f",
      "text": "\t}",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396053,
      "updated": 1728396053
    },
    {
      "id": "67053b2253ab47000007b581",
      "text": " object SomeCommand {",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396067,
      "updated": 1728396072
    },
    {
      "id": "67053b2953ab47000007b583",
      "text": "   case class Input(/*略*/)",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396075,
      "updated": 1728396085
    },
    {
      "id": "67053b3653ab47000007b584",
      "text": "   case class Output(/*略*/)",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396087,
      "updated": 1728396092
    },
    {
      "id": "67053b2753ab47000007b582",
      "text": " }",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728396072,
      "updated": 1728396073
    },
    {
      "id": "670539ad53ab47000007b570",
      "text": "",
      "userId": "670533d6eefa81001d53ab47",
      "created": 1728395694,
      "updated": 1728395694
    },
    {
      "id": "67052b821564110000ea54fa",
      "text": "Twitterで得た意見",
      "userId": "5b165e309654e40014156411",
      "created": 1728392067,
      "updated": 1728392087
    },
    {
      "id": "67052b871564110000ea54fc",
      "text": " IDを授受しているとテストしやすい",
      "userId": "5b165e309654e40014156411",
      "created": 1728392072,
      "updated": 1728392082
    },
    {
      "id": "67052c8e156411000018a02b",
      "text": "  [windymelt.icon] どうだろう？",
      "userId": "5b165e309654e40014156411",
      "created": 1728392335,
      "updated": 1728392342
    },
    {
      "id": "67052c99156411000018a02c",
      "text": "   ドメインロジックを試したいのであれば、ドメインオブジェクトをそのまま渡すのがスジなはず",
      "userId": "5b165e309654e40014156411",
      "created": 1728392345,
      "updated": 1728392363
    },
    {
      "id": "67052cab156411000018a02d",
      "text": "   他方で、テストデータ([fixture])作成の都合を考えるとIDで管理したい",
      "userId": "5b165e309654e40014156411",
      "created": 1728392363,
      "updated": 1728392379
    },
    {
      "id": "67052cbc156411000018a02e",
      "text": "    テストの都合でドメインを歪めていいのか？",
      "userId": "5b165e309654e40014156411",
      "created": 1728392381,
      "updated": 1728392388
    },
    {
      "id": "67052b921564110000ea54fd",
      "text": " IDだと重くなったり壊れたりしない",
      "userId": "5b165e309654e40014156411",
      "created": 1728392083,
      "updated": 1728392108
    },
    {
      "id": "67052d41156411000018a030",
      "text": "  [windymelt.icon] 疑問",
      "userId": "5b165e309654e40014156411",
      "created": 1728392513,
      "updated": 1728392518
    },
    {
      "id": "67052d5c156411000018a032",
      "text": "   引数に何かを渡すとき、メモリがそのままコピーされてどこかへ行くわけではない",
      "userId": "5b165e309654e40014156411",
      "created": 1728392541,
      "updated": 1728392555
    },
    {
      "id": "67052d7e156411000018a034",
      "text": "    値そのものか、それを指すポインタ(に類するもの)が入っている",
      "userId": "5b165e309654e40014156411",
      "created": 1728392575,
      "updated": 1728392589
    },
    {
      "id": "67052d6c156411000018a033",
      "text": "    まともな言語ならそうなっている",
      "userId": "5b165e309654e40014156411",
      "created": 1728392556,
      "updated": 1728392561
    },
    {
      "id": "67052d45156411000018a031",
      "text": "   IDと何かへの参照との間にデータ上の大きさの差異はない",
      "userId": "5b165e309654e40014156411",
      "created": 1728392518,
      "updated": 1728392538
    },
    {
      "id": "67052d97156411000018a035",
      "text": "   もし参照を渡して、内部でIDを結局利用するとき、参照が一回挟まるという意味ではオーバーヘッドがある",
      "userId": "5b165e309654e40014156411",
      "created": 1728392599,
      "updated": 1728392625
    },
    {
      "id": "67052db5156411000018a036",
      "text": "    100万回ループを回すのでなければほぼ誤差の範囲では？",
      "userId": "5b165e309654e40014156411",
      "created": 1728392629,
      "updated": 1728392647
    },
    {
      "id": "67052dc7156411000018a037",
      "text": "    DBやネットワークレベルのI/Oのほうがオーダー数ケタレベルで遅い",
      "userId": "5b165e309654e40014156411",
      "created": 1728392647,
      "updated": 1728392680
    },
    {
      "id": "67052bac1564110000ea54fe",
      "text": " 2つid渡して2回SQL発行とか絶対嫌",
      "userId": "5b165e309654e40014156411",
      "created": 1728392108,
      "updated": 1728392118
    },
    {
      "id": "67052df6156411000018a038",
      "text": "  [windymelt.icon] 結局向こうで引いてたら意味ないじゃん、という意味でならそう思う",
      "userId": "5b165e309654e40014156411",
      "created": 1728392695,
      "updated": 1728392714
    },
    {
      "id": "67052bb61564110000ea54ff",
      "text": " オニオンアーキテクチャで言うところのドメイン層に処理があるなら後者(オブジェクトを授受する)、アプリケーション層にあるなら加えて前者(ID)もアリにしてます。ドメイン層にIdから実体をフェッチする概念は置きたくないので。",
      "userId": "5b165e309654e40014156411",
      "created": 1728392119,
      "updated": 1728392733
    },
    {
      "id": "67052e21156411000018a039",
      "text": "  [windymelt.icon] わかる。ドメイン層にはIDの概念はほぼ出現しないはず",
      "userId": "5b165e309654e40014156411",
      "created": 1728392738,
      "updated": 1728392760
    },
    {
      "id": "67052bc51564110000ea5500",
      "text": " [集約]を引いてくるときはIDを利用するがそれ以外のパターンでは利用しない",
      "userId": "5b165e309654e40014156411",
      "created": 1728392133,
      "updated": 1728392285
    },
    {
      "id": "67052b831564110000ea54fb",
      "text": "  [windymelt.icon] わかる。それは本質的にIDがないと困る",
      "userId": "5b165e309654e40014156411",
      "created": 1728392068,
      "updated": 1728392281
    },
    {
      "id": "67052c431564110000ea5501",
      "text": "",
      "userId": "5b165e309654e40014156411",
      "created": 1728392260,
      "updated": 1728392260
    },
    {
      "id": "67052e3f156411000018a03a",
      "text": "Twitterで得た意見を総合した感想",
      "userId": "5b165e309654e40014156411",
      "created": 1728392767,
      "updated": 1728392776
    },
    {
      "id": "67052e48156411000018a03c",
      "text": " [windymelt.icon]",
      "userId": "5b165e309654e40014156411",
      "created": 1728392776,
      "updated": 1728392778
    },
    {
      "id": "67052e49156411000018a03d",
      "text": "  ドメインの内側にはIDの概念はない",
      "userId": "5b165e309654e40014156411",
      "created": 1728392778,
      "updated": 1728392791
    },
    {
      "id": "67052e57156411000018a03e",
      "text": "  ドメインの外側でリポジトリからドメインオブジェクトを取り出してくるときにはIDが必要になる",
      "userId": "5b165e309654e40014156411",
      "created": 1728392791,
      "updated": 1728392810
    },
    {
      "id": "67052e6b156411000018a03f",
      "text": "   それはそう",
      "userId": "5b165e309654e40014156411",
      "created": 1728392812,
      "updated": 1728392812
    },
    {
      "id": "67052e6c156411000018a040",
      "text": "  集約を引いてくるときはIDが必要になる",
      "userId": "5b165e309654e40014156411",
      "created": 1728392812,
      "updated": 1728392833
    },
    {
      "id": "67052e80156411000018a042",
      "text": "   が、それはドメインの仕事ではなくリポジトリやサービスの仕事",
      "userId": "5b165e309654e40014156411",
      "created": 1728392833,
      "updated": 1728392846
    },
    {
      "id": "67052e8d156411000018a043",
      "text": "  ",
      "userId": "5b165e309654e40014156411",
      "created": 1728392846,
      "updated": 1728392847
    },
    {
      "id": "67052e40156411000018a03b",
      "text": "",
      "userId": "5b165e309654e40014156411",
      "created": 1728392769,
      "updated": 1728392769
    }
  ]
}