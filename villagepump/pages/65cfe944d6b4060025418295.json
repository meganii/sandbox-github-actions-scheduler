{
  "id": "65cfe944d6b4060025418295",
  "title": "Gyazzみたいなエディタ作りでReact.jsを学ぶ: TypeScript/Deno化",
  "created": 1708124486,
  "updated": 1709560934,
  "lines": [
    {
      "id": "65cfe944d6b4060025418295",
      "text": "Gyazzみたいなエディタ作りでReact.jsを学ぶ: TypeScript/Deno化",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c78e",
      "text": "from [Gyazzみたいなエディタ作りでReact.jsを学ぶ]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe94e6eb406000022c7d5",
      "text": "",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124495,
      "updated": 1708124495
    },
    {
      "id": "65e5d2866eb406000028510a",
      "text": "[** vite化]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1709560457,
      "updated": 1709560469
    },
    {
      "id": "65e5d28a6eb406000028510c",
      "text": "https://github.com/inajob/simple-inline-editor/compare/deno-inajob...vite?expand=1",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1709560461,
      "updated": 1709560462
    },
    {
      "id": "65e5d2866eb406000028510b",
      "text": "\tちょっと機能を足してしまったけどDeno向けに書かれたものをviteで動くようにしてみた[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1709560457,
      "updated": 1709560522
    },
    {
      "id": "65e5d2ac6eb406000028510e",
      "text": "\t\tReactの既存の資産を使うにはTypeScript/Nodeがいいかなと",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1709560495,
      "updated": 1709560528
    },
    {
      "id": "65e5d2f06eb406000028510f",
      "text": "\tViteのはBunもサポートしているのかー[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1709560562,
      "updated": 1709560934
    },
    {
      "id": "65e5d3206eb4060000285110",
      "text": "\t\tDenoとBunの位置づけが気になる",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1709560610,
      "updated": 1709560618
    },
    {
      "id": "65e5d2946eb406000028510d",
      "text": "",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1709560470,
      "updated": 1709560470
    },
    {
      "id": "65cfe9586eb406000022c7d6",
      "text": "[** 強引なDeno推し(感謝]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124505,
      "updated": 1708133760
    },
    {
      "id": "65cfe9446eb406000022c790",
      "text": "[takker.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c791",
      "text": " 今Denoで書き換えてます",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c792",
      "text": " \t強引なDeno推しを受けているw[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c793",
      "text": " \t\t気にはなるけど、採用するかは考えさせてください",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c794",
      "text": " 大量の型エラーが発生している。おそらくバグってる",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c795",
      "text": " どうしてこんなに[React.forwardRef]が使われているんだ",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c796",
      "text": " `Ref.current`に`Ref[]`をつっこむという見たことない手段使っている",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c797",
      "text": " 　しかもrendering毎に[createRef()]で初期化しまくっているので意味がなくなっている用に思う",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c798",
      "text": " 　あ、過去にも似たような質問してた",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c799",
      "text": "　なるべくロジックには手を加えず、型エラー中心に直します",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c79a",
      "text": "　できた！",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c79b",
      "text": "　 draft PRしておきます",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c79c",
      "text": "　 https://github.com/inajob/simple-inline-editor/pull/1",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c79d",
      "text": "　 JSからTSに変えただけなので、Nodeに戻すこともできます",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c79e",
      "text": "　 　その場合は`import ... from \"....ts(x)\"`の`.ts(x)`を全て消し、`deps.ts`,`deno.jsonc`,`deno.lock`,`.vscode/settings.json`を消し、`package.json`,`tsconfig.json`,`.eslintrc.json`,`prettier.json`を入れる",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c79f",
      "text": "　 　 あー,Nodeに切り替えると、TSとlinterとformatterの設定が必要になるのか……めんどくさい～[takker.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65db10cb6eb406000070814a",
      "text": "　 　  react-scriptsでこの辺まるっとやってもらえてた印象[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708855500,
      "updated": 1708855525
    },
    {
      "id": "65db11706eb406000070814b",
      "text": "　 　   https://zenn.dev/nekoya/articles/dd0f0e8a2fa35f",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708855664,
      "updated": 1708855668
    },
    {
      "id": "65db11756eb406000070814c",
      "text": "　 　    もう古いのか、、",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708855670,
      "updated": 1708855673
    },
    {
      "id": "65db284b6eb40600000dab66",
      "text": "　 　   次はvite試してみるかな、、",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708861516,
      "updated": 1708861524
    },
    {
      "id": "65db0c661280f000005676d4",
      "text": "　 　 [\" `import ... from \"....ts(x)\"`の`.ts(x)`を全て消し]はどうやらいらなそう",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854375,
      "updated": 1708854391
    },
    {
      "id": "65db0c791280f000005676d6",
      "text": "　 　 　[\"moduleResolution\": \"Bundler\"]でなんとかなるらしい？",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854394,
      "updated": 1708854540
    },
    {
      "id": "65db0d0c1280f000005676d7",
      "text": "　 　 またDeno側でNodeのように拡張子なしで書けるようになoptionが入ったらしい",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854541,
      "updated": 1708854596
    },
    {
      "id": "65db0d431280f000005676d8",
      "text": "　 　  https://deno.com/blog/v1.39#sloppy-imports",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854596,
      "updated": 1708854596
    },
    {
      "id": "65db0d441280f000005676d9",
      "text": "　 　  `--unstable-sloppy-imports`を渡して実行",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854596,
      "updated": 1708854609
    },
    {
      "id": "65cfe9446eb406000022c7a0",
      "text": "　 わーい、勉強します[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7a1",
      "text": "",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7a2",
      "text": "聞きたいこと",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7a3",
      "text": " `popupHandlers[popup.index].handler()`が動作しない可能性がある",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7a4",
      "text": "  `TextareaWithMenu`にて`popupHandlers[].handler()`はある条件のとき引数なし函数に変換される[. https://github.com/inajob/simple-inline-editor/blob/244f388d7c738130ad61b6748036cbbd3537e7ed/src/components/TextareaWithMenu.js#L115-L136]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7a5",
      "text": "  しかし条件に当てはまらないときは、`select`を渡さないと実行時エラーを引き起こす",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7a6",
      "text": "  \t手元だと動くけど、型に厳密にやろうとするとエラーになる感じですかね？[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7a7",
      "text": "  \tなります。ただ実行エラーはおきないようです[takker.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7a8",
      "text": "   \t`select.selection === \"\" && candidate !== \"\"`のときは`popupHandlers`が`{ name: string; hadler: () => void }[]`に、[- そうでないときは]`{ name: string; handler: (select: TextFragment) => void }[]`[- になる]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7a9",
      "text": "   \t 勘違いしてた。そうでないときは`{ name: string; handler: (select: TextFragment) => { target: { value: string; } } }[]`になる[takker.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7aa",
      "text": "   \t返り値が`void`なので型エラーになる",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7ab",
      "text": "   \tただし、コード上は返り値があるかどうかのチェックを入れているので、実行時エラーは起きない",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7ac",
      "text": "   \t[https://code2svg.vercel.app/svg/L225-229/https://raw.githubusercontent.com/takker99/simple-inline-editor/38a019a5024744c36b7aea771c3dc86608077263/components/TextareaWithMenu.tsx#.svg https://github.com/takker99/simple-inline-editor/blob/38a019a5024744c36b7aea771c3dc86608077263/components/TextareaWithMenu.tsx#L225-L229]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7ad",
      "text": "  `handler()`は返り値がないはずだが、[L178 https://github.com/inajob/simple-inline-editor/blob/244f388d7c738130ad61b6748036cbbd3537e7ed/src/components/TextareaWithMenu.js#L178]で返り値を使っている",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7ae",
      "text": "  \thttps://github.com/inajob/simple-inline-editor/blob/244f388d7c738130ad61b6748036cbbd3537e7ed/src/components/App.js#L18 みたいなのを想定してます[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7af",
      "text": "  \t\tが、引数なし関数の方と一貫してないな・・",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7b0",
      "text": "  \t\t 引数なしのほうは返してませんね[takker.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7b1",
      "text": "  \t\t上の話もあるしselectを渡して返り値で行の書き換えを指示する方法に統一するほうが良さそうな気がしてます",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7b2",
      "text": " \t勘違いしてました。`{ name: string; handler: (select: TextFragment) => Event | void }[]`という想定だったんですね[takker.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7b3",
      "text": " \t これなら問題ない",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7b4",
      "text": " \t `target`を指定して`Event`を作るのは無理があるので、ここの型定義を工夫する必要あり",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7b5",
      "text": " \t  `React.ChangeEvent`も`{ target: { value: string; } }`も受け取れるように設計し直す",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7b6",
      "text": " \t  あっだめだ。[Editor.jsのonChangeの定義 https://github.com/inajob/simple-inline-editor/blob/244f388d7c738130ad61b6748036cbbd3537e7ed/src/components/Editor.js#L194-L199]で`target.selectionStart`などを使っているから、戻り値を`{ target: { value: string; } }`にするとエラーになる",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7b7",
      "text": " \t  これ以上は、このあたりのロジックが何をしようとしているのか理解しないと修正できなさそう",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65dae1cc6eb4060000bbac34",
      "text": " \tロジック見て修正してみました[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708843469,
      "updated": 1708843477
    },
    {
      "id": "65dae1d26eb4060000bbac35",
      "text": " \t\thttps://github.com/inajob/simple-inline-editor/pull/2/commits/a83a7f8d1f858cc7231e57722195b1ad46441075",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708843475,
      "updated": 1708843476
    },
    {
      "id": "65cfe9446eb406000022c7b8",
      "text": " `props.setLine()`の引数は`{ prefix: string; selection: string; suffix: string; }`のはずだが、`string`を渡している[箇所 https://github.com/inajob/simple-inline-editor/blob/244f388d7c738130ad61b6748036cbbd3537e7ed/src/components/TextareaWithMenu.js#L132]がある",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7b9",
      "text": " \tsetSelectのことかな？setLineだとしたら例をどこか示してもらえると理解できるかも[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7ba",
      "text": "  URL貼りました[takker.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7bb",
      "text": "  https://github.com/inajob/simple-inline-editor/blob/244f388d7c738130ad61b6748036cbbd3537e7ed/src/components/Editor.js#L171 で作った関数なので、`string`1つの引数が正解という認識です[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7bc",
      "text": "  ごめんなさい、ここは自分のreadingミスです[takker.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7bd",
      "text": "  　`LineProps.setLine`と`TextareaWithMenu.setLine`の型定義を勘違いしていた",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7be",
      "text": "  　[直しました https://github.com/takker99/simple-inline-editor/commit/9b339534ea97f3ed702173e94e0c8662825dacca]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7bf",
      "text": "",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65db0df51280f000005676e0",
      "text": "そういえば環境のこと書いてなかった気がする[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854775,
      "updated": 1708854783
    },
    {
      "id": "65db0dfe1280f000005676e2",
      "text": " 今回は[packup]でbuild & serveしています",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854783,
      "updated": 1708854792
    },
    {
      "id": "65db0e071280f000005676e3",
      "text": " 　これが主流かどうかは不明です",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854792,
      "updated": 1708855076
    },
    {
      "id": "65db0f231280f000005676f4",
      "text": " 　要はJSさえなんとか作れればいいので、手法が無数にあります",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708855076,
      "updated": 1708855093
    },
    {
      "id": "65db0e201280f000005676e5",
      "text": " 分類すると",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854817,
      "updated": 1708854831
    },
    {
      "id": "65db0ef11280f000005676f0",
      "text": " 　自力でJSビルド",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708855026,
      "updated": 1708855052
    },
    {
      "id": "65db0e2e1280f000005676e6",
      "text": " 　HTML/JS/CSSを生成する&hot reloadサポート",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854831,
      "updated": 1708854857
    },
    {
      "id": "65db0e4d1280f000005676e8",
      "text": "   [packup]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854862,
      "updated": 1708854862
    },
    {
      "id": "65db0e0f1280f000005676e4",
      "text": "   https://deno.land/x/ts_serve@v1.4.4",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854800,
      "updated": 1708854858
    },
    {
      "id": "65db0e591280f000005676eb",
      "text": "   DenoがJSXをサポートしているのでReactと親和性が高いですが、基本はどんなフレームワークとも組み合わせられます",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854874,
      "updated": 1708854911
    },
    {
      "id": "65db0e531280f000005676ea",
      "text": "  React+SSR特化",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854868,
      "updated": 1708854918
    },
    {
      "id": "65db0e841280f000005676ed",
      "text": "   [Deno Flesh]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854918,
      "updated": 1708854930
    },
    {
      "id": "65db0e911280f000005676ee",
      "text": "   [Aleph.js]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854930,
      "updated": 1708854969
    },
    {
      "id": "65db0df61280f000005676e1",
      "text": "",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854775,
      "updated": 1708854775
    },
    {
      "id": "65cfe96b6eb406000022c7d7",
      "text": "[** 勉強してみる]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124524,
      "updated": 1708124882
    },
    {
      "id": "65cfe9446eb406000022c7c0",
      "text": "[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7c1",
      "text": "\t[takker.icon]さんからのPRについて、今後の作業",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7c2",
      "text": "\t\t動作の確認",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9c76eb406000022c7dd",
      "text": "\t\t\tなんか動いてそう",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124616,
      "updated": 1708124619
    },
    {
      "id": "65cfe9ca6eb406000022c7de",
      "text": "\t\t\t❓SourceMapが生成されてないのでconsole.logの出力がどこの物かわからない",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124619,
      "updated": 1708125522
    },
    {
      "id": "65cfe9e36eb406000022c7df",
      "text": "\t\t\t\tdeno.jsoncにsourceMapの設定ができるようだが、設定しても有効になっている様子が無い",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124644,
      "updated": 1708124665
    },
    {
      "id": "65cfed9c1280f0000037a68e",
      "text": "\t\t\t\tbundled codeを見ればだいたいわかります[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708125597,
      "updated": 1708125633
    },
    {
      "id": "65cff8d51280f0000003de9b",
      "text": "\t\t\t\t (packupの場合)型を搾り取ったコードを順番に羅列しているだけなので、[minify]したコードより素直です",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708128470,
      "updated": 1708128525
    },
    {
      "id": "65cff90d1280f0000003de9c",
      "text": "\t\t\t\t minified codeでもformatすれば元のコードの構造とほぼ同じなので見当づきます",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708128526,
      "updated": 1708128560
    },
    {
      "id": "65cfedf46eb4060000c76da7",
      "text": "\t\t\t\t\tまぁ確かに・・[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708125685,
      "updated": 1708125691
    },
    {
      "id": "65cfe9446eb406000022c7c3",
      "text": "\t\tじっくり差分を見て感想を書く",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708179118
    },
    {
      "id": "65cfe9446eb406000022c7c4",
      "text": "\t\t\tTypeScriptをちゃんと読むのは初めてだと思う",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7c5",
      "text": "\t\t\tそうなんだ[takker.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7c6",
      "text": "\t\t\t [inajob.icon]さんがよく書くのはGoとかC++だっけ",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7c7",
      "text": "\t\t\t \t最近はGoが多いけど、、人のコードを直したり、機能を足したりが多いのでなかなか体系的には学べていません[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7c8",
      "text": "\t\t\t \t\tよくない",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7c9",
      "text": "\t\t\t \t\t仕事だと[そーっと周りに影響を与えないようにメスを入れるみたいな謎の能力]を求められる・・",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1708124486,
      "updated": 1708128714
    },
    {
      "id": "65cfe9446eb406000022c7ca",
      "text": "\t\t\t \t\t\tこんな仕事ばかりやっていると1からコーディンする能力がどんどん下がっていく",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7cb",
      "text": "\t\t\t \t\t\t\t下がるとそういう仕事が来なくなる・・",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7cc",
      "text": "\t\t\t \t\t\t\t\t悪循環",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7cd",
      "text": "\t\t\t フロントエンドをやっていた頃はJavaScriptをよく書いていました（結構昔なのでもう色々違っていますが・・）[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfeba06eb406000022c7eb",
      "text": "\t\t\tDeno",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708125089,
      "updated": 1708125102
    },
    {
      "id": "65cfea226eb406000022c7e0",
      "text": " \t\t\tdeps.ts",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124707,
      "updated": 1708125093
    },
    {
      "id": "65cfea2d6eb406000022c7e1",
      "text": " \t\t\t\tここに依存を寄せるのがDenoの1つのやり方らしい",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124718,
      "updated": 1708125093
    },
    {
      "id": "65d08a8c1280f00000bd51ef",
      "text": " \t\t\t\tfreshとかのフレームワーク系は[import map]を使っている印象[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708165771,
      "updated": 1708165794
    },
    {
      "id": "65cfeba66eb406000022c7ec",
      "text": " \t\tTypeScript",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708125095,
      "updated": 1708125100
    },
    {
      "id": "65cfea396eb406000022c7e2",
      "text": " \t\t\t拡張子はtsx, tsを使い分ける必要あり",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708125096,
      "updated": 1708125106
    },
    {
      "id": "65cfea4a6eb406000022c7e3",
      "text": " \t\t\t\ttsのファイルの中にJSXを書くとビルドが失敗する",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124747,
      "updated": 1708125106
    },
    {
      "id": "65cfea586eb406000022c7e4",
      "text": " \t\t\tReact.FC？",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124761,
      "updated": 1708125106
    },
    {
      "id": "65cfea616eb406000022c7e5",
      "text": " \t\t\t\tReactの型定義をいい感じにするものらしい",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124770,
      "updated": 1708125106
    },
    {
      "id": "65cfea6d6eb406000022c7e7",
      "text": " \t\t\t\t仕組みはよくわからんが、使い方は見たらだいたいわかる",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124782,
      "updated": 1708125106
    },
    {
      "id": "65cfea786eb406000022c7e8",
      "text": " \t\t\tuseForwardRefがなにか込み入っている",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124793,
      "updated": 1708125106
    },
    {
      "id": "65cfea856eb406000022c7e9",
      "text": " \t\t\t\thttps://stackoverflow.com/a/73748435 からとってきたものらしい",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124806,
      "updated": 1708125106
    },
    {
      "id": "65cfed531280f0000037a68d",
      "text": " \t\t\t\t被せないと型エラーを解決できませんでした[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708125523,
      "updated": 1708125548
    },
    {
      "id": "65cfebe66eb406000022c7ed",
      "text": " \t\t\t型をチェックしているIF文、nullを想定したプロパティアクセス",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708125159,
      "updated": 1708125184
    },
    {
      "id": "65cfeb7c6eb406000022c7ea",
      "text": "\t \t\t\tifの条件でinstanceOfとかをAnd条件でつなげると、型推論してくれる",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708125053,
      "updated": 1708125185
    },
    {
      "id": "65cfec026eb406000022c7ee",
      "text": "\t \t\t\tnullの可能性があるときにそのままプロパティにアクセスするのはNG",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708125187,
      "updated": 1708125217
    },
    {
      "id": "65cfecd16eb406000022c7ef",
      "text": "\t \t\t\t\t`?.` でアクセスする(オプションチェーン演算子)",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708125394,
      "updated": 1708125483
    },
    {
      "id": "65cfecee6eb406000022c7f0",
      "text": "\t \t\t\t非nullアサーション`!`",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708125423,
      "updated": 1708125439
    },
    {
      "id": "65cfed251280f0000037a68b",
      "text": "\t \t\t\t あんまりやりたくない[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708125478,
      "updated": 1708125488
    },
    {
      "id": "65cfed361280f0000037a68c",
      "text": "\t \t\t\t  バグの元",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708125495,
      "updated": 1708125507
    },
    {
      "id": "65cfeedb6eb4060000c76da8",
      "text": "\t \t\t`React.ClipboardEventHandler<HTMLTextAreaElement>`",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708125916,
      "updated": 1708125920
    },
    {
      "id": "65cfeee36eb4060000c76da9",
      "text": "\t \t\t\tイベントハンドラはこういう型になる",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708125924,
      "updated": 1708125936
    },
    {
      "id": "65cfeef26eb4060000c76daa",
      "text": "\t \t\t\t要素の種類も関係してくる",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708125939,
      "updated": 1708125956
    },
    {
      "id": "65cfef9f6eb4060000c76dae",
      "text": "\t \t\tJavaScriptでのサンプルを見つけてきたときに、そのまま真似して書くだけでは済まないのがやや面倒",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708126112,
      "updated": 1708126150
    },
    {
      "id": "65cfefc56eb4060000c76daf",
      "text": "\t \t\t\t[型の恩恵]をどの程度感じるかだな、これは慣れかも",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1708126150,
      "updated": 1708128261
    },
    {
      "id": "65cff79f1280f0000003de95",
      "text": "\t \t\t\tTypeScriptに書き換える代わりに、JavaScriptに`//@ts-check`と[JSDoc]を付けるだけでも同じ恩恵を得られます[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708128159,
      "updated": 1708128225
    },
    {
      "id": "65cff7bd1280f0000003de96",
      "text": "\t \t\t\t そのままweb browserでもうごかせますし、まずはこっちのほうが楽かも",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708128190,
      "updated": 1708128255
    },
    {
      "id": "65d0b4846eb4060000e59721",
      "text": "\t \t\thttps://github.com/inajob/simple-inline-editor/blob/9b339534ea97f3ed702173e94e0c8662825dacca/components/TextareaWithMenu.tsx#L170 ここのifでのチェックはあったほうが良いのはわかるけど、特にこれを書かなくても警告になったりしないように見える",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708176518,
      "updated": 1708176550
    },
    {
      "id": "65d0b5926eb4060000e59722",
      "text": "\t \t\t\t❓こういうのは人間が気を遣って書くもの？ or 何か検出する手段がある？",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708176788,
      "updated": 1708207724
    },
    {
      "id": "65d13b721280f000002b3b13",
      "text": "\t \t\t\t自動で警告が出るはずですが[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708211058,
      "updated": 1708211064
    },
    {
      "id": "65d13b781280f000002b3b14",
      "text": "\t \t\t\t [settings.json]の設定が足りないのかも",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708211065,
      "updated": 1708211078
    },
    {
      "id": "65d7f5076eb4060000925efc",
      "text": "\t \t\t\t [Denoを使う時のsetting.json]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708651783,
      "updated": 1708651813
    },
    {
      "id": "65d13cb01280f000002b3b2c",
      "text": "      うーん、でも警告に関わる設定は上のどこにもないか",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708211377,
      "updated": 1708211409
    },
    {
      "id": "65d7a80a6eb40600005dd868",
      "text": "      上を設定しても変化なさそうです[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708632075,
      "updated": 1708632318
    },
    {
      "id": "65d7a9086eb40600005dd86a",
      "text": "    https://github.com/inajob/simple-inline-editor/blob/9b339534ea97f3ed702173e94e0c8662825dacca/components/Editor.tsx#L76 同じく？ここのdatasetが未定義の可能性も特にエディタでの警告が出ない",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708632329,
      "updated": 1708632388
    },
    {
      "id": "65d7aace6eb40600005dd86b",
      "text": "    \t他でもifで事前にundefinedをチェックしている箇所の多くは手元で警告が出ない",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708632783,
      "updated": 1708632853
    },
    {
      "id": "65d0bbf76eb4060000e59737",
      "text": "\t \t\thttps://github.com/takker99/simple-inline-editor/blob/9b339534ea97f3ed702173e94e0c8662825dacca/components/Line.tsx#L106 ここは自分の環境だと赤線が入っている",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708178425,
      "updated": 1708211440
    },
    {
      "id": "65d0bc026eb4060000e59738",
      "text": "\t \t\t\t`const result: React.ReactNode = [];` で良さそう",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708178436,
      "updated": 1708178454
    },
    {
      "id": "65d13d8f1280f000002b3b2d",
      "text": "\t \t\t\t本当だ。なんでエラーでなかったんだろう[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708211599,
      "updated": 1708211610
    },
    {
      "id": "65d13d9a1280f000002b3b2e",
      "text": "\t \t\t\t [https://gyazo.com/ad246a247f56891452eff5e95b1c46e3]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708211610,
      "updated": 1708211626
    },
    {
      "id": "65d13da91280f000002b3b2f",
      "text": "      あからさまな`any`なのに警告が現れない",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708211626,
      "updated": 1708211640
    },
    {
      "id": "65d13dc61280f000002b3b30",
      "text": "      `makeLine`の戻り値は推論されているので、それでエラーがでてない？",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708211654,
      "updated": 1708211667
    },
    {
      "id": "65d13e0f1280f000002b3cee",
      "text": "      なら[inajob.icon]さんの環境で検出されている理由がわからない……",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708211728,
      "updated": 1708211747
    },
    {
      "id": "65d13e221280f000002b3cef",
      "text": "      　もしかしてtypescriptの拡張機能が有効になっていたりしませんか？",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708211747,
      "updated": 1708211758
    },
    {
      "id": "65d14d6e6eb406000093eaf1",
      "text": "      　あとでみます[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708215662,
      "updated": 1708215666
    },
    {
      "id": "65d7a8ac6eb40600005dd869",
      "text": "      　\t右下のバーにTypeScriptと出ているのでそうっぽい",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708632238,
      "updated": 1708632268
    },
    {
      "id": "65d7f3da1280f00000379f0b",
      "text": "      　\tファイルタイプ識別表示の可能性もあります[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708651485,
      "updated": 1708651526
    },
    {
      "id": "65d7f4071280f00000379f0c",
      "text": "      　\t バーにDenoと出ていればDenoの拡張機能のほうが有効になっている",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708651531,
      "updated": 1708651601
    },
    {
      "id": "65d7f4ba6eb4060000925ef7",
      "text": "      　\t 人の記事だけどこれか [https://mk.hatenablog.com/entry/2019/07/27/132227 VSCodeでdeno - まさたか日記][inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708651707,
      "updated": 1708651719
    },
    {
      "id": "65dac14c6eb4060000bbac32",
      "text": "      　\t \tDenoを有効にできてませんでした。上のsetting.jsonでいい感じになった予感",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708835149,
      "updated": 1708835176
    },
    {
      "id": "65d12d0b6eb4060000b9dff5",
      "text": "\t \t\thttps://github.com/takker99/simple-inline-editor/blob/deno/components/Line.tsx#L37 このuseEffectの発火タイミングがTypeScript化前と異なっている",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708207372,
      "updated": 1708207395
    },
    {
      "id": "65d12e886eb4060000b9dff7",
      "text": "\t \t\t\tprops.isFocusを監視対象に入れてお茶を濁す",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708207753,
      "updated": 1708207765
    },
    {
      "id": "65d13e821280f000002b3cf0",
      "text": "\t \t\t\t`useForwardRef()`を噛ませただけですが、発火タイミングかわっちゃったか[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708211843,
      "updated": 1708211865
    },
    {
      "id": "65cfef3f6eb4060000c76dab",
      "text": "\t \tその他",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708126016,
      "updated": 1708126019
    },
    {
      "id": "65cfef426eb4060000c76dac",
      "text": "\t \t\t`// eslint-disable-next-line react-hooks/exhaustive-deps`",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708126019,
      "updated": 1708126021
    },
    {
      "id": "65cfef456eb4060000c76dad",
      "text": "\t \t\t\tuseEffectで依存オブジェクトが無い事を強行する",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708126022,
      "updated": 1708126038
    },
    {
      "id": "65cff8031280f0000003de97",
      "text": "\t \t\t\tそれ無視しちゃだめな警告のような……[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708128260,
      "updated": 1708128270
    },
    {
      "id": "65cff8296eb4060000010048",
      "text": "\t \t\t\tあとで精査しよう、起動時に一回走れば良さそうな処理に見える[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708128297,
      "updated": 1708128315
    },
    {
      "id": "65cff8521280f0000003de9a",
      "text": "\t \t\t\t その場合は`useEffect(() => {/* ... */}, [])`を使ってください[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708128339,
      "updated": 1708128364
    },
    {
      "id": "65d0af6c6eb4060000e5971f",
      "text": "\t \t\t\t https://github.com/inajob/simple-inline-editor/blob/9b339534ea97f3ed702173e94e0c8662825dacca/components/Editor.tsx#L170 の話ですね。このままで良いという理解[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708175214,
      "updated": 1708175225
    },
    {
      "id": "65d0afcb6eb4060000e59720",
      "text": "\t \t\t\t \tと思ったけどこのコメントを消しても`deno task fmt`はエラーや警告が出たりしないな",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708175309,
      "updated": 1708175341
    },
    {
      "id": "65d12d526eb4060000b9dff6",
      "text": "\t \t\t\tあ、自分のコードですでにこれを書いていたのか、勘違い・・[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708207442,
      "updated": 1708207472
    },
    {
      "id": "65cfe9446eb406000022c7ce",
      "text": "\t\t他のプロジェクトからの取り込みがいい感じにできるか確認（もともとの目的）",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9886eb406000022c7d9",
      "text": "\t\t\t雑に `import { App } from \"../simple-inline-editor/components/App.tsx\"` とかしたら読み込めた！",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124553,
      "updated": 1708124576
    },
    {
      "id": "65cfe99f6eb406000022c7da",
      "text": "\t\t\t\tこれでいいかな・・",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124576,
      "updated": 1708124579
    },
    {
      "id": "65cfe9a26eb406000022c7db",
      "text": "\t\t\tCSSは何かモジュール化？した方が良さそう",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124579,
      "updated": 1708124592
    },
    {
      "id": "65cfe9af6eb406000022c7dc",
      "text": "\t\t\t\tこれはDenoとかTypeScriptの範疇ではないので後で考えよう",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124592,
      "updated": 1708124605
    },
    {
      "id": "65cff81b1280f0000003de98",
      "text": "\t\t\t\t[@import]のことかな[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708128284,
      "updated": 1708128294
    },
    {
      "id": "65cfe9446eb406000022c7cf",
      "text": "\t\t自分が良いものと感じたらマージする",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7d0",
      "text": "\t\t\t取り込みがいい感じ、とかも観点だが、普通にTypeScriptにしたほうがメンテしやすいだろうという気がする",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cfe9446eb406000022c7d1",
      "text": "\t\t\t型がないと、引数に一体何が入ってきているのかわからなくなりますからね[takker.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65d0bc456eb4060000e59739",
      "text": "\t\t\t手元でpullして少し編集したが、勉強になりそうだし、型があったほうがべんりそうだ[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708178503,
      "updated": 1708178528
    },
    {
      "id": "65d0bc5f6eb4060000e5973a",
      "text": "\t\t\t\t一方でReact周りの型については（DOM周りの型と比べて）詳しくないので、始めはいろいろ躓きそう",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708178529,
      "updated": 1708178574
    },
    {
      "id": "65d0bc966eb4060000e5973b",
      "text": "\t\t\t\t\t型を気にしなければ動くのに、型パズルが謎でうまくビルドできないのはややストレス",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708178584,
      "updated": 1708178605
    },
    {
      "id": "65d13ebb1280f000002b3cf2",
      "text": "\t\t\t\tReact周りの型は自分もほとんど知りません[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708211899,
      "updated": 1708211910
    },
    {
      "id": "65d13ec51280f000002b3cf3",
      "text": "\t\t\t\t hoverすると型がでてくるので、それを真似て書いています",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708211910,
      "updated": 1708211919
    },
    {
      "id": "65d13eed1280f000002b3cf4",
      "text": "\t\t\t\t [https://gyazo.com/7a4bd9d3877c1829bf51122e5346c137]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708211949,
      "updated": 1708211951
    },
    {
      "id": "65d14da96eb406000093eaf2",
      "text": "\t\t\t\t なるほど！[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708215721,
      "updated": 1708215725
    },
    {
      "id": "65dae1f26eb4060000bbac36",
      "text": "\t\t\tだいたいわかってきたので自分のブランチを作って作業していく",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708843508,
      "updated": 1708843522
    },
    {
      "id": "65dae2016eb4060000bbac37",
      "text": "\t\t\t\thttps://github.com/inajob/simple-inline-editor/pull/2",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708843522,
      "updated": 1708843532
    },
    {
      "id": "65dae7f71280f000005a5167",
      "text": "\t\t\t\tおお～いいかんじ[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708845048,
      "updated": 1708845054
    },
    {
      "id": "65daf1a16eb4060000a4b1d0",
      "text": "\t\t\teslintが動いていないな[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708847522,
      "updated": 1708847529
    },
    {
      "id": "65daf1a86eb4060000a4b1d1",
      "text": "\t\t\t\tsetting.jsをちゃんと読んだ方が良い？",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708847529,
      "updated": 1708847543
    },
    {
      "id": "65daf1b56eb4060000a4b1d2",
      "text": "\t\t\t\t\t今はdenoをenableしているだけ",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708847543,
      "updated": 1708847548
    },
    {
      "id": "65daf2cd6eb4060000a4b1d3",
      "text": "\t\t\t\t別にeslintにこだわりはないのだが・・denoにもlintがある？",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708847823,
      "updated": 1708847835
    },
    {
      "id": "65daf8011280f000005aaa40",
      "text": "\t\t\t\tあります[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708849153,
      "updated": 1708849155
    },
    {
      "id": "65daf8031280f000005aaa41",
      "text": "\t\t\t\t [deno lint]と[deno fmt]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708849155,
      "updated": 1708849166
    },
    {
      "id": "65daf80e1280f000005aaa42",
      "text": "\t\t\t\t lintは通常は何も設定しなくていいはずですが……",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708849167,
      "updated": 1708849182
    },
    {
      "id": "65daf8281280f000005aaa44",
      "text": "\t\t\t\t eslintの拡張機能が動いている場合は、ワークスペースの[settings.json]で無効にしてください",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708849193,
      "updated": 1708849218
    },
    {
      "id": "65daf8181280f000005aaa43",
      "text": "\t\t\t\t fmtはdefault formatterをdenoに変えてください",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708849177,
      "updated": 1708849192
    },
    {
      "id": "65db0ac66eb4060000708140",
      "text": "\t\t\t\tなるほど、いままでReact.js独自のlintのルールみたいなのがあったのだけど、相当するものはあるかな、、[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708853959,
      "updated": 1708853993
    },
    {
      "id": "65db0b716eb4060000708143",
      "text": "\t\t\t\t 名前からこの辺かな？",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708854130,
      "updated": 1708854134
    },
    {
      "id": "65db0ae86eb4060000708141",
      "text": "\t\t\t\t  eslint-plugin-react",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708853993,
      "updated": 1708854138
    },
    {
      "id": "65db0b5d6eb4060000708142",
      "text": "\t\t\t\t  eslint-plugin-react-hooks",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708854110,
      "updated": 1708854139
    },
    {
      "id": "65db0b891280f000005676ca",
      "text": "\t\t\t\t eslintはそのへんですね[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854154,
      "updated": 1708854212
    },
    {
      "id": "65db0b8f6eb4060000708144",
      "text": "\t\t\t\t useCallbackとかで依存を書き忘れてる時とかに教えてくれたりしてた",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708854166,
      "updated": 1708854189
    },
    {
      "id": "65db0b971280f000005676cc",
      "text": "\t\t\t\t 残念ながらDenoにはありません[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854168,
      "updated": 1708854172
    },
    {
      "id": "65db0b9b1280f000005676cd",
      "text": "\t\t\t\t  lintにpluginシステムが存在しない",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854172,
      "updated": 1708854182
    },
    {
      "id": "65db0ba61280f000005676ce",
      "text": "\t\t\t\t  Denoのreact frameworkを使っている人はどうlintしているんだろう",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854182,
      "updated": 1708854204
    },
    {
      "id": "65db0c061280f000005676d0",
      "text": "\t\t\t\t  https://github.com/denoland/deno_lint/issues/148",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854279,
      "updated": 1708854280
    },
    {
      "id": "65db0c171280f000005676d1",
      "text": "\t\t\t\t   react対応要望",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854296,
      "updated": 1708854300
    },
    {
      "id": "65db0c1b1280f000005676d2",
      "text": "\t\t\t\t  https://github.com/denoland/deno_lint/issues/175",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854300,
      "updated": 1708854300
    },
    {
      "id": "65db0c1c1280f000005676d3",
      "text": "\t\t\t\t   pluginシステムを検討しているみたい",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854301,
      "updated": 1708854307
    },
    {
      "id": "65db0ce76eb4060000708145",
      "text": "\t\t\t\t  ぐぬぬ[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708854509,
      "updated": 1708854513
    },
    {
      "id": "65db0d586eb4060000708146",
      "text": "\t\t\t\t   ここにこだわりがある場合はNodeとTypeScriptを使う感じになりそう",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708854617,
      "updated": 1708854637
    },
    {
      "id": "65db0d5a1280f000005676db",
      "text": "\t\t\t\t  　[\"moduleResolution\": \"Bundler\"]を使えば、`.ts`を消さずにNodeでも使えるらしいです？[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854619,
      "updated": 1708854675
    },
    {
      "id": "65db0d921280f000005676de",
      "text": "\t\t\t\t  　　ちょっと表面を調べただけなので、地雷があるかは不明",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854675,
      "updated": 1708854692
    },
    {
      "id": "65db0d731280f000005676dd",
      "text": "\t\t\t\t  自分は依存配列を手作業で入れてます[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854644,
      "updated": 1708854644
    },
    {
      "id": "65db0d651280f000005676dc",
      "text": "\t\t\t\t   見逃しは……まああるかも",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854630,
      "updated": 1708854636
    },
    {
      "id": "65db0d736eb4060000708147",
      "text": "\t\t\t\t   普通に知らないミスを教えてくれてたなぁという思い出がある[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708854643,
      "updated": 1708854662
    },
    {
      "id": "65db0d866eb4060000708148",
      "text": "\t\t\t\t    ループで作るHTML要素ににkeyをつけ忘れたり",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708854663,
      "updated": 1708854689
    },
    {
      "id": "65db0dac1280f000005676df",
      "text": "\t\t\t\t   やっぱりlintほしいですよね[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708854702,
      "updated": 1708854712
    },
    {
      "id": "65cfe9446eb406000022c7d2",
      "text": "\t文脈を理解してプログラムを修正して、その後質疑にも応じてくれるって[すごいプログラミング学習支援サービス]だよなと思う",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65cff83d1280f0000003de99",
      "text": "\t [人力LLM][takker.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1708128318,
      "updated": 1708128735
    },
    {
      "id": "65d0bebf6eb4060000e5973c",
      "text": "\t めちゃいいです[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708179138,
      "updated": 1708179142
    },
    {
      "id": "65cfe9446eb406000022c7d3",
      "text": "",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708124486
    },
    {
      "id": "65d08ad41280f00000bd51f1",
      "text": "設計面でいうと、[useRef()]を大量に使っている点が気になります[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708165843,
      "updated": 1708165864
    },
    {
      "id": "65d08ae91280f00000bd51f2",
      "text": " Reactは大抵の場合[useState()],[useMemo()],[useCallback()],[useEffect()]で事足りる",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708165864,
      "updated": 1708165894
    },
    {
      "id": "65d08b071280f00000bd51f3",
      "text": " 　ちょっと複雑な状態遷移をさせたいとき[useReducer]使うくらい",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708165894,
      "updated": 1708165905
    },
    {
      "id": "65d08b131280f00000bd51f4",
      "text": " [useRef()]の出番はDOM操作する場合など特殊な場合に限定される",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708165905,
      "updated": 1708165928
    },
    {
      "id": "65d0b3abed60e60000ccf018",
      "text": "  ほう[メモる.icon][Summer498.icon]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1708176299,
      "updated": 1708176347
    },
    {
      "id": "65d08b2a1280f00000bd51f5",
      "text": " ロジック追わないと必要な処理なのかは明言できませんが、そのあたりで直感センサーが警戒反応を示しています",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708165929,
      "updated": 1708166036
    },
    {
      "id": "65cfe9446eb406000022c7d4",
      "text": "\t使用箇所をメモしてみる[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708124486,
      "updated": 1708177839
    },
    {
      "id": "65d0b6fb6eb4060000e59724",
      "text": "\t\t日本語入力中かを保持するフラグ(Boolean)",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177149,
      "updated": 1708177720
    },
    {
      "id": "65d0b7406eb4060000e59726",
      "text": "\t\t\thttps://github.com/inajob/simple-inline-editor/blob/9b339534ea97f3ed702173e94e0c8662825dacca/components/Editor.tsx#L39",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177218,
      "updated": 1708177219
    },
    {
      "id": "65d0b70a6eb4060000e59725",
      "text": "\t\t\tこれをuseStateにすると、再レンダリングされてしまって都合が悪かった",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177165,
      "updated": 1708177188
    },
    {
      "id": "65d0b9766eb4060000e59736",
      "text": "\t\t\tこれはDOM操作ではない",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177784,
      "updated": 1708177827
    },
    {
      "id": "65d13f131280f000002b3cf6",
      "text": "\t\t\t改善できそう[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708211988,
      "updated": 1708211991
    },
    {
      "id": "65d0b6f56eb4060000e59723",
      "text": "\t\tポップアップ要素",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177143,
      "updated": 1708177335
    },
    {
      "id": "65d0b7b76eb4060000e59728",
      "text": "\t\t\thttps://github.com/inajob/simple-inline-editor/blob/9b339534ea97f3ed702173e94e0c8662825dacca/components/Editor.tsx#L93",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177337,
      "updated": 1708177338
    },
    {
      "id": "65d0b7ba6eb4060000e59729",
      "text": "\t\t\t行選択の状況が変わった時に、[ポップアップ]の位置を調節する（DOM操作）",
      "userId": "5f0e769da385ed001ecc1fc1",
      "created": 1708177340,
      "updated": 1709032135
    },
    {
      "id": "65d0b7b06eb4060000e59727",
      "text": "\t\t各行のTextarea",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177330,
      "updated": 1708177474
    },
    {
      "id": "65d0b8306eb4060000e5972b",
      "text": "\t\t\thttps://github.com/inajob/simple-inline-editor/blob/9b339534ea97f3ed702173e94e0c8662825dacca/components/Editor.tsx#L173",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177458,
      "updated": 1708177459
    },
    {
      "id": "65d0b8356eb4060000e5972c",
      "text": "\t\t\tフォーカスが移動したときに、今フォーカスのあるTextareaにfocusを与える（DOM操作）",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177463,
      "updated": 1708177801
    },
    {
      "id": "65d0b93d6eb4060000e59735",
      "text": "\t\t\t\tもともとuseStateを使っていたが、何か微妙だったので今の形にした",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177728,
      "updated": 1708177756
    },
    {
      "id": "65d14dc46eb406000093eaf3",
      "text": "\t\t\t\t a. useStateを使う場合、自分の行にフォーカスが当たってるかを示すpropをLine以下に持たせることになる",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708215749,
      "updated": 1708215992
    },
    {
      "id": "65d14de76eb406000093eaf4",
      "text": "\t\t\t\t  1つの行だけがtrueになるようにロジックで保証する",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708215783,
      "updated": 1708215931
    },
    {
      "id": "65d14e326eb406000093eaf5",
      "text": "\t\t\t\t b. 今のやり方だとEditorが選択されてる行にfocusを実行する",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708215859,
      "updated": 1708215949
    },
    {
      "id": "65d14e546eb406000093eaf6",
      "text": "\t\t\t\tどっちが自然かなと思って悩んでいる",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708215892,
      "updated": 1708215934
    },
    {
      "id": "65d14e5f6eb406000093eaf7",
      "text": "\t\t\t\t aならforwardRefの配列もなくなるように思う",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708215903,
      "updated": 1708215972
    },
    {
      "id": "65d0b8526eb4060000e5972e",
      "text": "\t\t\t配列になっていて一見不気味だと思う",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177492,
      "updated": 1708177498
    },
    {
      "id": "65d13fe21280f000002b3cfa",
      "text": "\t\t\t 不気味だった[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708212195,
      "updated": 1708212198
    },
    {
      "id": "65d0b8376eb4060000e5972d",
      "text": "\t\t各行のDIV",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177465,
      "updated": 1708177612
    },
    {
      "id": "65d0b8a56eb4060000e59730",
      "text": "\t\t\thttps://github.com/inajob/simple-inline-editor/blob/9b339534ea97f3ed702173e94e0c8662825dacca/components/Line.tsx#L227",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177575,
      "updated": 1708177576
    },
    {
      "id": "65d0b8a46eb4060000e5972f",
      "text": "\t\t\tマウスドラッグを検知したときに、DIV全体を選択する（DOM操作）",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177575,
      "updated": 1708177808
    },
    {
      "id": "65d13f871280f000002b3cf9",
      "text": "\t\t\tここうまいことDIVのreact要素に通知出して選択させられそう[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708212103,
      "updated": 1708212188
    },
    {
      "id": "65d0b9186eb4060000e59732",
      "text": "\t\tポップアップ要素",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177690,
      "updated": 1708177693
    },
    {
      "id": "65d0b91b6eb4060000e59733",
      "text": "\t\t\thttps://github.com/inajob/simple-inline-editor/blob/9b339534ea97f3ed702173e94e0c8662825dacca/components/TextareaWithMenu.tsx#L182",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177693,
      "updated": 1708177694
    },
    {
      "id": "65d0b91d6eb4060000e59734",
      "text": "\t\t\t文字選択の状況が変わったときに、ポップアップの位置を調整する（DOM操作）",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708177696,
      "updated": 1708177816
    },
    {
      "id": "65d0b8ce6eb4060000e59731",
      "text": "  [document.Selection]を使っている都合でDOM操作が多くなっているみたいですね[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708177616,
      "updated": 1708212057
    },
    {
      "id": "65d13f391280f000002b3cf7",
      "text": "",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1708212025,
      "updated": 1708212025
    },
    {
      "id": "65dacdf96eb4060000bbac33",
      "text": "[UserCSSにより井戸端ページの編集が遅くなった]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1708838394,
      "updated": 1708838446
    },
    {
      "id": "65d80e445f1e0d0000dcd0b9",
      "text": "",
      "userId": "616ca537c25a92001e5f1e0d",
      "created": 1708658245,
      "updated": 1708658245
    }
  ]
}