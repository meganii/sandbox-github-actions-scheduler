{
  "id": "66e2bad7640032001ce48315",
  "title": "JS Is Weird",
  "created": 1726135001,
  "updated": 1736520428,
  "lines": [
    {
      "id": "66e2bad7640032001ce48315",
      "text": "JS Is Weird",
      "userId": "62919f6444e78d001d73e522",
      "created": 1726135001,
      "updated": 1726135001
    },
    {
      "id": "66e2dfaf71b3c200002cc517",
      "text": "https://jsisweird.com/",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726144433,
      "updated": 1726144433
    },
    {
      "id": "66e2bad973e5220000c6c780",
      "text": "[JavaScript]は謎の仕様がいっぱいある",
      "userId": "62919f6444e78d001d73e522",
      "created": 1726135001,
      "updated": 1726135017
    },
    {
      "id": "66e2baf873e5220000c6c782",
      "text": "だいたい最初のバージョンが10日くらいで作られたのに[下位互換]性を保ってるのが原因",
      "userId": "62919f6444e78d001d73e522",
      "created": 1726135032,
      "updated": 1726135068
    },
    {
      "id": "66e2be0873e5220000c6c788",
      "text": "",
      "userId": "62919f6444e78d001d73e522",
      "created": 1726135817,
      "updated": 1726135817
    },
    {
      "id": "66e2bada73e5220000c6c781",
      "text": "[【JS Is Weird】JavaScript構文クイズ 25題 #JavaScript - Qiita https://qiita.com/hikagami/items/c267994c4af02be4b9a2]",
      "userId": "616ca537c25a92001e5f1e0d",
      "created": 1726135003,
      "updated": 1726135720
    },
    {
      "id": "66e2bda45f1e0d000037785b",
      "text": "",
      "userId": "616ca537c25a92001e5f1e0d",
      "created": 1726135719,
      "updated": 1726135719
    },
    {
      "id": "66e2be1173e5220000c6c789",
      "text": " `typeof null = \"object\"` [綾坂こと.icon]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1726135826,
      "updated": 1726135826
    },
    {
      "id": "66e2be1273e5220000c6c78b",
      "text": "  初期のバグがそのまま仕様になっちゃってる",
      "userId": "62919f6444e78d001d73e522",
      "created": 1726135826,
      "updated": 1726135826
    },
    {
      "id": "66e2be1273e5220000c6c78c",
      "text": "  `Object.prototype.toString.call()`あたりを使ったほうが直感に合ってるかもしれない",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726135826,
      "updated": 1731198099
    },
    {
      "id": "6777e66571b3c2000050565c",
      "text": "  Lua:`type(nil) == \"nil\"`",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1735911014,
      "updated": 1735911017
    },
    {
      "id": "67783ec97838e30000d82118",
      "text": "  [typeof]が万能じゃないせいで、型判別のやり方がややこしくなってる[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735933638,
      "updated": 1735933701
    },
    {
      "id": "67783f8e7838e30000661ce4",
      "text": "   参考：[/Mijinko/JavaScriptの型判別]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735933836,
      "updated": 1735933849
    },
    {
      "id": "677840f27838e30000661ced",
      "text": "  [typeof]で判別するやつと、[===]で判別するやつと、それら以外で判別するやつの３種類ある",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735934192,
      "updated": 1735934332
    },
    {
      "id": "67783f097838e30000d8211a",
      "text": " 　　型判別だけでこんだけ種類あるのはわりと[初見殺し]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735933703,
      "updated": 1735934332
    },
    {
      "id": "677841447838e30000661cf0",
      "text": " 　　どれかにまとめてほしい感じある",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735934274,
      "updated": 1735934332
    },
    {
      "id": "66e2be1173e5220000c6c78a",
      "text": "",
      "userId": "62919f6444e78d001d73e522",
      "created": 1726135826,
      "updated": 1726135826
    },
    {
      "id": "66e2e08f71b3c200002cc518",
      "text": "`[1, 2, 3]+[4, 5, 6]`",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726144657,
      "updated": 1726144669
    },
    {
      "id": "66e2e09671b3c200002cc51b",
      "text": "`[1,2,3,4,5,6]`(Python,ruby)模範解答",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726144664,
      "updated": 1731198116
    },
    {
      "id": "66e2e13a71b3c200002cc51d",
      "text": "\t普通に考えたらこうですよね",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726144828,
      "updated": 1726144876
    },
    {
      "id": "66e2e0a971b3c200002cc51c",
      "text": "\thttps://gyazo.com/df35bae912b2b9ae366d2010454d3c76 Javascript",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726144683,
      "updated": 1726144716
    },
    {
      "id": "66ecf75273e5220000a269d1",
      "text": "\t[~ 「Number, Boolean, null, undefined(, BigInt)は加算、それ以外は文字列結合」。うん、簡単だね！！()] [綾坂こと.icon]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1726805843,
      "updated": 1726811163
    },
    {
      "id": "66ecdc4b71b3c200008dd8e4",
      "text": "",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726798924,
      "updated": 1726798924
    },
    {
      "id": "66ecdc4b71b3c200008dd8e5",
      "text": "`btoa(\"たっかー\")`",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726798924,
      "updated": 1731198137
    },
    {
      "id": "66ecdc5e71b3c200008dd8e9",
      "text": "\tbtoaは、文字列([~ Latin1 only])をBase64に変換する関数です",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726798942,
      "updated": 1726798968
    },
    {
      "id": "66ecdd1b71b3c200008dd8ea",
      "text": "\t\t[~ Latin1 onlyになった理由:レガシー実装]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726799131,
      "updated": 1726799144
    },
    {
      "id": "66ecdc4f71b3c200008dd8e8",
      "text": "\t実行結果:[~ エラーになります]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726798928,
      "updated": 1726798979
    },
    {
      "id": "66ecf82673e5220000a269d2",
      "text": "\t[~ 回避手段は自力実装しよう → [/AyaExpTech/任意のデータとBase64の相互変換.js]] [綾坂こと.icon]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1726806057,
      "updated": 1726811202
    },
    {
      "id": "66ed153271b3c20000f8d550",
      "text": "\t\tMDNのほうが短い[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726813490,
      "updated": 1726813545
    },
    {
      "id": "66ed156971b3c20000f8d551",
      "text": "\t\t\thttps://developer.mozilla.org/ja/docs/Glossary/Base64#%E3%80%8Cunicode_問題%E3%80%8D",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726813545,
      "updated": 1726813546
    },
    {
      "id": "66ed157071b3c20000f8d552",
      "text": "\t\t\tcode:mdn.js",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726813552,
      "updated": 1726813555
    },
    {
      "id": "66ed157471b3c20000f8d553",
      "text": "\t\t\t function base64ToBytes(b64){const bS = atob(b64);return Uint8Array.from(bS, (m) => m.codePointAt(0));}    ",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726813556,
      "updated": 1726813756
    },
    {
      "id": "66ed157471b3c20000f8d558",
      "text": "    function bytesToBase64(bs){const bS = Array.from(bs, (bt) => String.fromCodePoint(bt),).join(\"\"); return btoa(bS);}",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726813556,
      "updated": 1726813755
    },
    {
      "id": "66ed157471b3c20000f8d55f",
      "text": "    // 使用方法",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726813556,
      "updated": 1726813556
    },
    {
      "id": "66ed157471b3c20000f8d560",
      "text": "    bytesToBase64(new TextEncoder().encode(\"a Ā 𐀀 文 🦄\")); // \"YSDEgCDwkICAIOaWhyDwn6aE\"",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726813556,
      "updated": 1726813556
    },
    {
      "id": "66ed157471b3c20000f8d561",
      "text": "    new TextDecoder().decode(base64ToBytes(\"YSDEgCDwkICAIOaWhyDwn6aE\")); // \"a Ā 𐀀 文 🦄\"",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726813556,
      "updated": 1726813556
    },
    {
      "id": "672ac61573e5220000165547",
      "text": "   私のは任意データを変換可能にするためにごちゃごちゃやってるので、テキストしか使わないなら↑のほうがいい[綾坂こと.icon]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1730856469,
      "updated": 1730856511
    },
    {
      "id": "673947e21280f00000d568fe",
      "text": "  [FileReader.readAsDataURL()]経由でbase64にencodingできないかな？[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1731807204,
      "updated": 1731807224
    },
    {
      "id": "673947c11280f00000d568fd",
      "text": " [jsr:@std/encodings]にも実装があるから、そういうのを使うのも手[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1731807171,
      "updated": 1731807201
    },
    {
      "id": "67812d8c71b3c20000046c23",
      "text": " undefの扱いに困る",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1736519052,
      "updated": 1736519058
    },
    {
      "id": "67812dbd71b3c20000046c24",
      "text": " \t[言語女子会: undefとnullは両方必要？の再現]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1736519102,
      "updated": 1736519106
    },
    {
      "id": "67812ec371b3c20000046c27",
      "text": " \t「あれ、いい忘れたけどundefinedはリストに入れられるよ」",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1736519364,
      "updated": 1736519365
    },
    {
      "id": "67812eea71b3c20000046c28",
      "text": " \t静的言語なら「えっ、未定義の変数にアクセスした時undefined返したいじゃない？」はない",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1736519403,
      "updated": 1736519423
    },
    {
      "id": "67812f0071b3c20000046c29",
      "text": " \t\tコンパイル時にエラーにすればいい",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1736519425,
      "updated": 1736519434
    },
    {
      "id": "678130c57838e30000ad8d04",
      "text": " \t[undefinedとnullを使い分けるのは不毛]なので、undefinedしか使わないようにしている[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519876,
      "updated": 1736519915
    },
    {
      "id": "678130ed7838e30000ad8d05",
      "text": " \t　[サバイバルTypeScript]等でも使い分けは推奨されていない",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519916,
      "updated": 1736520428
    },
    {
      "id": "678131037838e30000ad8d06",
      "text": " \t　　https://typescriptbook.jp/reference/values-types-variables/undefined-vs-null#undefined%E3%81%A8null%E3%81%AE%E4%BD%BF%E3%81%84%E5%88%86%E3%81%91",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519939,
      "updated": 1736519940
    },
    {
      "id": "66e2e09071b3c200002cc519",
      "text": "",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726144658,
      "updated": 1726144658
    },
    {
      "id": "66e2e18f71b3c200002cc51e",
      "text": "Javascriptも「完全な下位互換性」を捨てた新バージョンが必要な気がする[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726144913,
      "updated": 1726144930
    },
    {
      "id": "66e2e1d771b3c200002cc521",
      "text": "\tpython2がpython3で大きく進化したように",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726144985,
      "updated": 1726144993
    },
    {
      "id": "66e2e1fe71b3c200002cc523",
      "text": "\t\tそれほどの互換性の捨て方ではないが",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726145024,
      "updated": 1726145037
    },
    {
      "id": "66e2e20c71b3c200002cc524",
      "text": "\t新バージョンを使う場合は[厳格モード]みたいに宣言する？",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726145038,
      "updated": 1726145072
    },
    {
      "id": "66e2e2fc71b3c200002cc529",
      "text": "\t\t`#include <stdio.h>`並みのおまじないになりそう",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726145278,
      "updated": 1726145293
    },
    {
      "id": "66e2e39471b3c200002cc52c",
      "text": "\t\t`\"ES2020\";`みたいなイメージ？",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726145429,
      "updated": 1726145471
    },
    {
      "id": "677840a17838e30000661ce9",
      "text": "\t　互換性が無いと過去のライブラリや古いWebサイト使えなくなるので、それはそれであんまり良くない[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735934111,
      "updated": 1735934114
    },
    {
      "id": "677840a77838e30000661cea",
      "text": "\t\t　現状でもIE向けのWebサイトや古いNode.js向けのコードが最新環境で動かないとかあるので、互換性と一言で言っても古すぎる環境まで網羅しているわけではないけれど",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735934117,
      "updated": 1735934117
    },
    {
      "id": "67783fc97838e30000661ce6",
      "text": "\t\tTypeScriptを用いる場合は[tsconfig.json]のフラグ設定でやばい機能を無効化することでどうにかなってる気がする[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735933894,
      "updated": 1735933941
    },
    {
      "id": "677840b47838e30000661ceb",
      "text": "\t\t　もしくはESLintを使うという手もある",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735934130,
      "updated": 1735934142
    },
    {
      "id": "677840c17838e30000661cec",
      "text": "\t\t　　設定だるいけど",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735934143,
      "updated": 1735934147
    },
    {
      "id": "66ecf8b773e5220000a269d3",
      "text": "\t一応、やばい機能には代替が開発されている印象[綾坂こと.icon]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1726806200,
      "updated": 1726806256
    },
    {
      "id": "66ecf8f073e5220000a269d5",
      "text": "\t　今やってるやつだとTemporal(Dateの代替)とか",
      "userId": "62919f6444e78d001d73e522",
      "created": 1726806257,
      "updated": 1726806278
    },
    {
      "id": "6739443371b3c2000055c3a2",
      "text": "\t　日付の内部表現はUTCのUnixtimeだけでいいのでは?[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731806260,
      "updated": 1731806277
    },
    {
      "id": "6739444d71b3c2000055c3a3",
      "text": "\t　\tシリアライズしやすいし",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731806286,
      "updated": 1731806290
    },
    {
      "id": "66e2e486b8bbfc00005a9d7b",
      "text": "",
      "userId": "60c9f2f6c225a50020b8bbfc",
      "created": 1726145670,
      "updated": 1726145670
    },
    {
      "id": "66e2e486b8bbfc00005a9d7c",
      "text": " [Juice WRLD]に似ている[はるひ.icon]",
      "userId": "60c9f2f6c225a50020b8bbfc",
      "created": 1726145670,
      "updated": 1726145688
    },
    {
      "id": "66e2e19271b3c200002cc51f",
      "text": "",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1726144916,
      "updated": 1726144916
    }
  ]
}