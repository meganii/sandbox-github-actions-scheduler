{
  "id": "605452c681adbb001c82e283",
  "title": "@miyamonz",
  "created": 1616138950,
  "updated": 1647866537,
  "lines": [
    {
      "id": "605452c681adbb001c82e283",
      "text": "@miyamonz",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1616138950,
      "updated": 1616139043
    },
    {
      "id": "62386d751280f00000c69388",
      "text": "[/miyamonz/写像の像と逆像に関する基本的な定理]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1647865206,
      "updated": 1647865231
    },
    {
      "id": "62386d901280f00000c6938a",
      "text": " s/待遇/対偶/g",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1647865232,
      "updated": 1647865239
    },
    {
      "id": "623872a7385a920000f87ef8",
      "text": " thanks![miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1647866536,
      "updated": 1647866537
    },
    {
      "id": "62386d761280f00000c69389",
      "text": "",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1647865206,
      "updated": 1647865206
    },
    {
      "id": "61623d4f1280f00000b0f08b",
      "text": "[/miyamonz/async awaitで何かを待つような処理を同期的に書く#60bfb254385a92000059f70e]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828176,
      "updated": 1633828177
    },
    {
      "id": "61623d511280f00000b0f08d",
      "text": " s/mouseup字の処理/mouseup時の処理",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828177,
      "updated": 1633828189
    },
    {
      "id": "6163d6b3385a9200003dea3d",
      "text": " 　修正[miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1633932979,
      "updated": 1633932982
    },
    {
      "id": "61623d721280f00000b0f08e",
      "text": " それと、[Async generator]で全てのevent listenerを同期的に書けるようにしたもの[. [/takker/Async Generatorを外部から中断する#6162375c1280f0000048c7e0] ]も作ってみました",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828210,
      "updated": 1633828530
    },
    {
      "id": "61623d9f1280f00000b0f08f",
      "text": " 　ご参考までにどうぞ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828255,
      "updated": 1633828262
    },
    {
      "id": "61623df01280f00000b0f0b3",
      "text": " 　code:sample.js",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828337,
      "updated": 1633920857
    },
    {
      "id": "61623df21280f00000b0f0b4",
      "text": " 　 import {listen} from './listen.js';",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828339,
      "updated": 1633828705
    },
    {
      "id": "61623e071280f00000b0f0be",
      "text": " 　 ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828360,
      "updated": 1633828360
    },
    {
      "id": "61623e661280f00000b0f0c2",
      "text": " 　 for await (const event of listen(window, 'mousedown')) {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828454,
      "updated": 1633828555
    },
    {
      "id": "61623e061280f00000b0f0b7",
      "text": "     const downPos = {x: event.clinetX, y: event.clientY }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828358,
      "updated": 1633828701
    },
    {
      "id": "61623e061280f00000b0f0b8",
      "text": "     ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828358,
      "updated": 1633828358
    },
    {
      "id": "61623e141280f00000b0f0bf",
      "text": "     for await (const mouseEvent of listen(window, 'mousemove')) {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828372,
      "updated": 1633828429
    },
    {
      "id": "61623e391280f00000b0f0c1",
      "text": "       /* drag中の処理 downPosも参照できる */",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828410,
      "updated": 1633828413
    },
    {
      "id": "61623e2b1280f00000b0f0c0",
      "text": "     }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828395,
      "updated": 1633828395
    },
    {
      "id": "6163a75c1280f000003b035f",
      "text": "  あ、これだと`mousemove`で無限ループが発生してしまうのか。まずいな",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633920860,
      "updated": 1633920887
    },
    {
      "id": "6163a7931280f000003b0360",
      "text": "   `mouseup`が発火したことを示すflagを導入し、flagが経ったらループを抜ける処理を追加しないと行けない",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633920916,
      "updated": 1633920970
    },
    {
      "id": "6167c9e3385a92000010545a",
      "text": "   そうそう[miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1634191843,
      "updated": 1634191845
    },
    {
      "id": "6167c9e5385a92000010545b",
      "text": "   　ここらへんのこと一回考えた気がするのだが、忘れてしまったな",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1634191845,
      "updated": 1634192265
    },
    {
      "id": "6167cb8e385a92000010545c",
      "text": "   　mosemoveのfor awaitのループ内のどこかの一行でupがresolveされたかチェックするのはだめ",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1634192270,
      "updated": 1634192299
    },
    {
      "id": "6167cbab385a92000010545e",
      "text": "   　　それ以外のところでawaitして、upのチェックができないタイミングがあるから",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1634192300,
      "updated": 1634192342
    },
    {
      "id": "6167cbb9385a92000010545f",
      "text": "   　　for awaitを外側からrejectできないとだめになり、無理になる",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1634192314,
      "updated": 1634192357
    },
    {
      "id": "6167d9321280f00000da4d67",
      "text": "   　同期的にチェックする[. [/takker/Callbackが呼び出されたことを判定] ]のはどうでしょうか？(未検証)[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1634195762,
      "updated": 1634195788
    },
    {
      "id": "6163a74a1280f000003b035e",
      "text": "  code:sample.js",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633920842,
      "updated": 1633920852
    },
    {
      "id": "61623e061280f00000b0f0bb",
      "text": "     const upEvent = await mouseUpPromise()",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828358,
      "updated": 1633828701
    },
    {
      "id": "61623e061280f00000b0f0bc",
      "text": "     // mouseup時の処理",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828358,
      "updated": 1633828400
    },
    {
      "id": "61623e061280f00000b0f0bd",
      "text": "   }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828358,
      "updated": 1633828358
    },
    {
      "id": "61623da51280f00000b0f090",
      "text": " 　code:listen.js",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828262,
      "updated": 1633828335
    },
    {
      "id": "61623db21280f00000b0f094",
      "text": "   function getPromise() {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f095",
      "text": "     let _resolve;",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f096",
      "text": "     const update = () => new Promise((res) => _resolve = res);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f097",
      "text": "     const resolve = (value) => _resolve(value);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f098",
      "text": "     return [update, resolve];",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f099",
      "text": "   }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623ee71280f00000b0f0c4",
      "text": "   ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828583,
      "updated": 1633828583
    },
    {
      "id": "61623f3b1280f00000b0f0c7",
      "text": "  ↑cf. [/miyamonz/usePromiseResolve]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828667,
      "updated": 1633828671
    },
    {
      "id": "61623f341280f00000b0f0c6",
      "text": "  code:listen.js",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828661,
      "updated": 1633828665
    },
    {
      "id": "61623db21280f00000b0f09a",
      "text": "   export async function* listen(element, type) {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828325
    },
    {
      "id": "61623db21280f00000b0f09b",
      "text": "     const [update, resolve] = getPromise();",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f09c",
      "text": "     let done;",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f09d",
      "text": "     const callback = e => resolve(e);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f09e",
      "text": "     element.addEventListener(type, callback);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828315
    },
    {
      "id": "61623db21280f00000b0f09f",
      "text": "     try {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f0a1",
      "text": "       while (true) {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f0a2",
      "text": "         const event = await done;",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f0a3",
      "text": "         done = update();",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f0a4",
      "text": "         yield event;",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f0a5",
      "text": "       }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f0a6",
      "text": "     } finally {",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f0a7",
      "text": "       // 後始末",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f0a9",
      "text": "       element.removeEventListener(type, callback);",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828317
    },
    {
      "id": "61623db21280f00000b0f0aa",
      "text": "     }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "61623db21280f00000b0f0ab",
      "text": "   }",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828274,
      "updated": 1633828274
    },
    {
      "id": "6163d808385a9200003dea3e",
      "text": "  [miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1633933321,
      "updated": 1633933324
    },
    {
      "id": "6163d80b385a9200003dea3f",
      "text": "   memo",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1633933324,
      "updated": 1633933325
    },
    {
      "id": "6163d84b385a9200003dea45",
      "text": "    後でもうちょっと見ます",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1633933387,
      "updated": 1633933394
    },
    {
      "id": "6163d829385a9200003dea43",
      "text": "   update->getPromise",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1633933354,
      "updated": 1633933358
    },
    {
      "id": "6163d889385a9200003dea46",
      "text": "   最初のwhile ループでdoneに代入がされてないかeventがundefinedにならないか？",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1633933449,
      "updated": 1633933479
    },
    {
      "id": "61663b1c1280f00000bbed64",
      "text": "    本当だ。確かにundefinedですね[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1634089756,
      "updated": 1634089771
    },
    {
      "id": "61663b2b1280f00000bbed65",
      "text": "     [- じゃあなんでこれで動いたんだろう……？]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1634089771,
      "updated": 1634089849
    },
    {
      "id": "61663b791280f00000bbed66",
      "text": "     単に最初に`undefined`が返ってくるだけで、エラーにはならないからか",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1634089849,
      "updated": 1634089875
    },
    {
      "id": "61663b941280f00000bbed67",
      "text": "     　でもこの挙動は確かにおかしいですね",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1634089875,
      "updated": 1634089882
    },
    {
      "id": "6163d80c385a9200003dea40",
      "text": "   code:js",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1633933325,
      "updated": 1633933330
    },
    {
      "id": "6163d812385a9200003dea41",
      "text": "    while(true) {\t",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1633933330,
      "updated": 1633933336
    },
    {
      "id": "6163d817385a9200003dea42",
      "text": "      yeild await update()",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1633933336,
      "updated": 1633933352
    },
    {
      "id": "6163d830385a9200003dea44",
      "text": "    }",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1633933360,
      "updated": 1633933362
    },
    {
      "id": "6167c97e385a920000105458",
      "text": "   whileの部分、これでよいのでは？[miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1634191742,
      "updated": 1634191750
    },
    {
      "id": "6167c987385a920000105459",
      "text": "   　動かしてないので想像だけど",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1634191751,
      "updated": 1634191772
    },
    {
      "id": "6167d8cd1280f00000da4d63",
      "text": "   　これでよかったです[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1634195660,
      "updated": 1634195666
    },
    {
      "id": "6167d8fa1280f00000da4d65",
      "text": "   　　動作確認しました[. [/takker/Async Generatorを外部から中断する#61663d781280f000008a815f] ]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1634195705,
      "updated": 1634195705
    },
    {
      "id": "6167d8fc1280f00000da4d66",
      "text": "   mousemoveをmouseupされるまでemitするとかの処理を良い抽象作ろうとすると[RxJS]使えよって話になる",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1634195708,
      "updated": 1634195708
    },
    {
      "id": "61663bb11280f00000bbed68",
      "text": "    この素振りをした後にrxjsについて詳しくなったので、この時点でrxjs使うのは考えてなかった[miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1634089905,
      "updated": 1634102946
    },
    {
      "id": "616741566668720000101b37",
      "text": " めちゃくちゃ面白い[yuki_minoh.icon]",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634156886,
      "updated": 1634156896
    },
    {
      "id": "616741b06668720000101b39",
      "text": " 　僕もアイデアがあるので書き直してみます",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634156976,
      "updated": 1634157118
    },
    {
      "id": "6167423e6668720000101b3a",
      "text": " 　code:baseline.js",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634157119,
      "updated": 1634166986
    },
    {
      "id": "616742ab6668720000101b3c",
      "text": " 　 // ベースライン実装",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634157227,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b40",
      "text": "   function mouseDown(event) {",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b41",
      "text": "     console.group(\"mouseEvent\");",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b42",
      "text": "     console.log({ mouseDown: event, time: event.timeStamp });",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b43",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b44",
      "text": "     window.removeEventListener(\"mousemove\", mouseMove);",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b45",
      "text": "     window.addEventListener(\"mousemove\", mouseMove);",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b46",
      "text": "     window.removeEventListener(\"mouseup\", mouseUp);",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b47",
      "text": "     window.addEventListener(\"mouseup\", mouseUp);",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b48",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b49",
      "text": "     const downPos = { x: event.clinetX, y: event.clientY };",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b4a",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b4b",
      "text": "     function mouseMove(event) {",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b4c",
      "text": "       console.log({ mouseMove: event, time: event.timeStamp });",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b4d",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b4e",
      "text": "       // downPos",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b4f",
      "text": "     }",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b50",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b51",
      "text": "     function mouseUp(event) {",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b52",
      "text": "       console.log({ mouseUp: event, time: event.timeStamp });",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b53",
      "text": "       window.removeEventListener(\"mouseup\", mouseUp);",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b54",
      "text": "       window.removeEventListener(\"mousemove\", mouseMove);",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b55",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b56",
      "text": "       console.groupEnd(\"mouseEvent\");",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b57",
      "text": "     }",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b58",
      "text": "   }",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b59",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "616768e56668720000101b5a",
      "text": "   window.addEventListener(\"mousedown\", mouseDown);",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167014,
      "updated": 1634167014
    },
    {
      "id": "6167694a6668720000101b9c",
      "text": "  console.groupを使って、mouseDown ~ mouseUpをグループ化して表示する",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167114,
      "updated": 1634167167
    },
    {
      "id": "6167695a6668720000101b9d",
      "text": "   多重呼び出しがあればみてすぐにわかるようになる",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167130,
      "updated": 1634167134
    },
    {
      "id": "6168303f1280f0000031a56e",
      "text": "   [console.group()][/icons/知らんかった.icon][takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1634218047,
      "updated": 1634218079
    },
    {
      "id": "61676ef36668720000101c28",
      "text": "  この実装が一番いいような気もしないでもない",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168563,
      "updated": 1634168583
    },
    {
      "id": "6167705e6668720000101c2b",
      "text": "  thenチェーンで柔軟性を高めた実装",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168927,
      "updated": 1634168943
    },
    {
      "id": "6167692f6668720000101b5c",
      "text": "  code:promise.js",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167088,
      "updated": 1634167102
    },
    {
      "id": "616769416668720000101b5d",
      "text": "   const controller = new AbortController();",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167105,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101be6",
      "text": "   const signal = controller.signal;",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101be7",
      "text": "   function onAbort() {",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101be8",
      "text": "     console.log(\"aborted\");",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101be9",
      "text": "   }",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676e386668720000101c27",
      "text": "   // controller.abort();",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168377,
      "updated": 1634168387
    },
    {
      "id": "61676ce66668720000101bea",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101beb",
      "text": "   let promise = Promise.resolve();",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bec",
      "text": "   const update = () => {",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bed",
      "text": "     promise = promise.then(mouseDownChain).then(onMouseDown, onAbort);",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bee",
      "text": "     // .catch(onHandleError);",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bef",
      "text": "   };",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bf0",
      "text": "   update();",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bf1",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bf2",
      "text": "   function mouseDownChain() {",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bf3",
      "text": "     return new Promise((resolve, reject) => {",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bf4",
      "text": "       window.addEventListener(\"mousedown\", resolve);",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bf5",
      "text": "       signal.addEventListener(\"abort\", reject);",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bf6",
      "text": "     });",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bf7",
      "text": "   }",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bf8",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bf9",
      "text": "   function mouseMoveChain() {",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bfa",
      "text": "     return new Promise((resolve, reject) => {",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bfb",
      "text": "       window.addEventListener(\"mousemove\", resolve);",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bfc",
      "text": "       window.addEventListener(\"mouseup\", reject);",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bfd",
      "text": "     });",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bfe",
      "text": "   }",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101bff",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c00",
      "text": "   function onMouseDown(event) {",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c01",
      "text": "     console.group(\"mouseEvent\");",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c02",
      "text": "     console.log({ mouseDown: event, time: event.timeStamp });",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c03",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c04",
      "text": "     update();",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c05",
      "text": "     let movingPromise = Promise.resolve();",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c06",
      "text": "     const innerUpdate = () => {",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c07",
      "text": "       movingPromise = movingPromise",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c08",
      "text": "         .then(mouseMoveChain)",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c09",
      "text": "         .then(onMouseMove, onMouseUp);",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c0a",
      "text": "       // .catch(onHandleError);",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c0b",
      "text": "     };",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c0c",
      "text": "     innerUpdate();",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c0d",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c0e",
      "text": "     const downPos = { x: event.clinetX, y: event.clientY };",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c0f",
      "text": "     /* mousedown */",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168310
    },
    {
      "id": "61676ce66668720000101c12",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c13",
      "text": "     function onMouseMove(event) {",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c14",
      "text": "       console.log({ mouseMove: event, time: event.timeStamp });",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c15",
      "text": "       innerUpdate();",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c16",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c17",
      "text": "       /*　　mousemove　　*/",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168286
    },
    {
      "id": "61676ce66668720000101c1a",
      "text": "     }",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c1b",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c1c",
      "text": "     function onMouseUp(event) {",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c1d",
      "text": "       console.log({ mouseUp: event, time: event.timeStamp });",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c1e",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c1f",
      "text": "       /*　 mouseup　　*/",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168273
    },
    {
      "id": "61676ce66668720000101c22",
      "text": "   ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c23",
      "text": "       console.groupEnd(\"mouseEvent\");",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c24",
      "text": "     }",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "61676ce66668720000101c25",
      "text": "   }",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168039,
      "updated": 1634168039
    },
    {
      "id": "616769c96668720000101b9e",
      "text": "  こうしてみるとお二人のよりかなり長い？",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167241,
      "updated": 1634168142
    },
    {
      "id": "616769d26668720000101b9f",
      "text": "  　割と「ちゃんと」書いてしまった",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167251,
      "updated": 1634167262
    },
    {
      "id": "61676d9a6668720000101c26",
      "text": "  　コメントとかconsole APIを削ればそうでもないかもしれない",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168219,
      "updated": 1634168236
    },
    {
      "id": "616769e06668720000101ba0",
      "text": "  利点",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167264,
      "updated": 1634168188
    },
    {
      "id": "616769f36668720000101ba1",
      "text": "  　abort対応済み",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1634167284,
      "updated": 1634234947
    },
    {
      "id": "616872421280f0000026e2d4",
      "text": "  　　これって[AbortController]じゃないと実現できないのだろうか？[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1634234947,
      "updated": 1634234956
    },
    {
      "id": "6168724c1280f0000026e2d5",
      "text": "  　　 Promiseの外側で`reject`をできるようにすれば同様のことができそうだが",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1634234956,
      "updated": 1634235003
    },
    {
      "id": "616b69bf6668720000678460",
      "text": "  　　 普通にできます！[yuki_minoh.icon]",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634429376,
      "updated": 1634429381
    },
    {
      "id": "616b69c56668720000678461",
      "text": "  　　 　お好きなテイストでどうぞ",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634429381,
      "updated": 1634429389
    },
    {
      "id": "616b69cd6668720000678462",
      "text": "  　　 　僕はresolve/reject持ち出しパターンがあまり好きでない（）",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634429389,
      "updated": 1634429408
    },
    {
      "id": "616b6ffc6668720000678471",
      "text": "  　　 　　[yuki_minoh.icon]的にはBad Practiceのような気がしている。。。",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634430973,
      "updated": 1634430999
    },
    {
      "id": "61676a4c6668720000101ba2",
      "text": "  　エラー処理も簡単",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167373,
      "updated": 1634168351
    },
    {
      "id": "61676adb6668720000101ba5",
      "text": "  　 拡張性が高い",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634167516,
      "updated": 1634168699
    },
    {
      "id": "61676f7b6668720000101c29",
      "text": "  　 　thenチェーンの組み替えによる処理の変更、catch functionの追加によるエラー処理、resolve, reject条件の変更など",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168700,
      "updated": 1634169122
    },
    {
      "id": "61676f8b6668720000101c2a",
      "text": "  　 chain functionを切り出せているのが特に強みかもしれない",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634168716,
      "updated": 1634169151
    },
    {
      "id": "616772376668720000101c2c",
      "text": "  　 　resolve, reject条件の変更ができると、待機条件やthrow errorとかに柔軟性が出る（多分）",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634169400,
      "updated": 1634169435
    },
    {
      "id": "616780476668720000101c2d",
      "text": "  書いたあとに[三者三様のイベントハンドリングを掛け合わせて究極のハンドリングパターンを実現する]アイデアが浮かんだので後で書きます[yuki_minoh.icon]",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634173000,
      "updated": 1634323600
    },
    {
      "id": "6167cc27385a920000105461",
      "text": "  せっかく書いてもらったのにコードが何やっているか分からない…[miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1634192424,
      "updated": 1634192436
    },
    {
      "id": "6167cc35385a920000105462",
      "text": "  　[@miyamonz#616768e56668720000101b44]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1634192437,
      "updated": 1634192454
    },
    {
      "id": "6167cc47385a920000105463",
      "text": "  　ここらへん、removeしたあとにすぐaddしてるのはなぜ？",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1634192455,
      "updated": 1634192469
    },
    {
      "id": "6167f3cc66687200002b2d9e",
      "text": "  　 ナイーブに実装したらイベントハンドラが重複して困ったので、一つのイベントに対して一つのハンドラだけが応答するように調整したらこうなりました[yuki_minoh.icon]",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634202577,
      "updated": 1634202671
    },
    {
      "id": "6167f42166687200002b2d9f",
      "text": "  　 　唯一性を担保するのが面倒だからremoveとaddを同時にやってます。。。",
      "userId": "5ee7f26f1c0c850025666872",
      "created": 1634202662,
      "updated": 1634202728
    },
    {
      "id": "616842d7385a920000d6d57e",
      "text": "  　 ここがなんども呼び出される前提で、初回のremoveは無視させるということか、理解しました[miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1634222808,
      "updated": 1634222836
    },
    {
      "id": "61623d4f1280f00000b0f08c",
      "text": "",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1633828176,
      "updated": 1633828176
    },
    {
      "id": "612cb3391280f00000372604",
      "text": "[miyamonz.icon]さんが考えた`ScrapJupyter`という名前をそのまま使ってGitHubに載せてしまいました[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1630319417,
      "updated": 1630319541
    },
    {
      "id": "612cb3ae1280f0000037260b",
      "text": " [/icons/github.icon][https://github.com/takker99/ScrapJupyter takker99/ScrapJupyter]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1630319534,
      "updated": 1630319534
    },
    {
      "id": "612cb3b01280f0000037260e",
      "text": "事前に了承をとらずに使ってしまい申し訳ありません。問題があれば名前を変えようと思います",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1630319537,
      "updated": 1630319556
    },
    {
      "id": "612cb3c41280f00000372610",
      "text": "[miyamonz.icon]さんのUserScriptを参考に作ったという旨は[credit https://github.com/takker99/ScrapJupyter#credit]に書きましたが、もし何か不足があればご指摘をお願いします。",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1630319557,
      "updated": 1630319877
    },
    {
      "id": "612cb3b91280f0000037260f",
      "text": "　おけまる[miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1630319545,
      "updated": 1630331497
    },
    {
      "id": "612cb3ac1280f00000372609",
      "text": "",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1630319533,
      "updated": 1630319533
    },
    {
      "id": "60dfb9071280f000002ba460",
      "text": "[/miyamonz/連続写像#5b58ac3f385a920000da18aa]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1625274632,
      "updated": 1625274633
    },
    {
      "id": "60dfb9091280f000002ba462",
      "text": " たぶん`s/\\sim/\\infinity`",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1625274634,
      "updated": 1625274648
    },
    {
      "id": "60dfb92a1280f000002ba463",
      "text": " [$ \\lim_{n\\rightarrow\\infty} \\bold{x}_n = \\bold{a} ]ならば [$ \\lim_{n\\rightarrow\\infty} f(\\bold{x}_n) = f(\\bold{a})]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1625274667,
      "updated": 1625274686
    },
    {
      "id": "60dff900385a9200008c2595",
      "text": " 多分[Mathpix Snipping Tool]でtexを取得したからですね、あざす！[miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1625291008,
      "updated": 1625291052
    },
    {
      "id": "60dfb9081280f000002ba461",
      "text": "",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1625274632,
      "updated": 1625274632
    },
    {
      "id": "60dc4bfc1280f00000ee568d",
      "text": "[/miyamonz/react hooksだけどasync awaitを使ってイベントの流れを直感的に記述する#60b90689385a9200002e1265]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1625050108,
      "updated": 1625050112
    },
    {
      "id": "60dc4c011280f00000ee568f",
      "text": " `={resolve}`かな？",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1625050113,
      "updated": 1625054238
    },
    {
      "id": "60dc5c1f385a920000794e5c",
      "text": "  thanks![miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1625054238,
      "updated": 1625054250
    },
    {
      "id": "60dc4bfd1280f00000ee568e",
      "text": "",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1625050109,
      "updated": 1625050109
    },
    {
      "id": "608f6f511280f000004d9485",
      "text": "[/miyamonz-playground/Gyazo Viewer Page Menu]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620012881,
      "updated": 1620012882
    },
    {
      "id": "608f6f611280f000004d9489",
      "text": " >firefoxでも無理だったぞ",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620012896,
      "updated": 1620012897
    },
    {
      "id": "608f6f531280f000004d9487",
      "text": " うそん[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620012882,
      "updated": 1620012887
    },
    {
      "id": "608f6f581280f000004d9488",
      "text": "  [takker.icon]はFirefoxで使っていますが、一度もエラーは出ていません",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620012887,
      "updated": 1620012931
    },
    {
      "id": "608f6f841280f000004d948a",
      "text": "  昨日も今日も使えてます",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620012931,
      "updated": 1620012938
    },
    {
      "id": "608f6f8b1280f000004d948b",
      "text": " まさかFirefoxに個体差があるとか？",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620012938,
      "updated": 1620012947
    },
    {
      "id": "608f6f941280f000004d948c",
      "text": " [FirefoxのCSPガバガバ説]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620012947,
      "updated": 1620012951
    },
    {
      "id": "60dc5cad385a920000794e5d",
      "text": " なんか使ってる拡張機能とか関係あるのかも？[miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1625054380,
      "updated": 1625054398
    },
    {
      "id": "60dc5cbf385a920000794e5e",
      "text": " 　firefox普段使ってないんで追い調査めんどいけど、気が向いたらやってみます",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1625054398,
      "updated": 1625054420
    },
    {
      "id": "608f6f511280f000004d9486",
      "text": "",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1620012881,
      "updated": 1620012881
    },
    {
      "id": "606b21940684840000e6e966",
      "text": "[miyamonz.icon]さん現在3Dプリントや[Fusion360]のお勉強されているようなので関係ありそうなこと書いておきます、おせっかいでしたらすみません～[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1617633685,
      "updated": 1617633767
    },
    {
      "id": "606b21c80684840000e6e968",
      "text": "\t数学が好きということなので、[幾何学]アートなどにも興味がおありでしたら、[パラメトリックデザイン]とか[プロシージャルモデリング]なんかのキーワードで検索すると関係する情報が出てくるかと思います",
      "userId": "5ad57975d54cd50014068484",
      "created": 1617633738,
      "updated": 1617633849
    },
    {
      "id": "606b22380684840000e6e969",
      "text": "\t前者は[Grasshopper]([Rhinoceros]という[CAD]ソフトのプラグイン)、後者は[Houdini]という[3DCG]ソフトを使って作られることが多い印象です、いずれも有料で値段もちょい高いですが…",
      "userId": "5ad57975d54cd50014068484",
      "created": 1617633849,
      "updated": 1617634021
    },
    {
      "id": "606b22720684840000e6e96b",
      "text": "\t\t直接線を引いたり形状を組み合わせたりするのではなく、モディファイアを足したりビジュアルプログラミングみたくノードを繋げたりして立体を作る手法なのですが、[miyamonz.icon]さんの文脈だとすんなり受け入れられるかも？",
      "userId": "5ad57975d54cd50014068484",
      "created": 1617633907,
      "updated": 1617635871
    },
    {
      "id": "606b21940684840000e6e967",
      "text": "　お、ありがたい[miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1617633685,
      "updated": 1625054471
    },
    {
      "id": "60dc5d08385a920000794e61",
      "text": "　　実はそういう他のソフトもちょっとは調べてるのですが、これだ！というのを見つけられて無くて",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1625054471,
      "updated": 1625054493
    },
    {
      "id": "60dc5d1e385a920000794e62",
      "text": "　　ユーザが多いからFuson360には慣れておくと良いかも、とは思うものの、本当はコードとかパラメトリックにやりたいですね",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1625054493,
      "updated": 1625054527
    },
    {
      "id": "60dc5d40385a920000794e63",
      "text": " 　　OpenSCADとか",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1625054527,
      "updated": 1625054569
    },
    {
      "id": "60dc92430684840000dab912",
      "text": " 　　お、なるほどです～[imo.icon]",
      "userId": "5ad57975d54cd50014068484",
      "created": 1625068099,
      "updated": 1625068103
    },
    {
      "id": "60dc5cf7385a920000794e60",
      "text": "",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1625054455,
      "updated": 1625054455
    },
    {
      "id": "60627bb31280f0000075241e",
      "text": "[/miyamonz/miyamonz#5ecbaa7c385a92000005e076]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1617066934,
      "updated": 1617066935
    },
    {
      "id": "60627bb51280f00000752420",
      "text": " `s/動的なimport/import`",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1617066935,
      "updated": 1617066951
    },
    {
      "id": "60627bc61280f00000752421",
      "text": " 動的なimportだと、[dynamic import]に意味が限定されてしまいます",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1617066952,
      "updated": 1617067026
    },
    {
      "id": "60627bb31280f0000075241f",
      "text": "　これどういう意味です？[miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1617066934,
      "updated": 1625054435
    },
    {
      "id": "60dcc4181280f000005b7de1",
      "text": "　 どういう意味なんだろう……？(おい)[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1625080856,
      "updated": 1625080888
    },
    {
      "id": "60dcc4371280f000005b7de2",
      "text": "　  おそらく当時の記述にdynamic importがどうのこうのみたいな記述があって、それはstatic importでも普通にできるみたいなことを言いたかったのかもしれません",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1625080888,
      "updated": 1625080975
    },
    {
      "id": "60dd5178385a920000794e64",
      "text": "　\t履歴見ると[miyamonz.icon]が自分で気づいて消したのかも？[miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1625117048,
      "updated": 1625117100
    },
    {
      "id": "60dc5ce4385a920000794e5f",
      "text": "",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1625054435,
      "updated": 1625054436
    },
    {
      "id": "605453271280f00000e2bc48",
      "text": "[/miyamonz/ScrapJupyter#5eca6c14385a92000050d87f]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1616139046,
      "updated": 1616139049
    },
    {
      "id": "605452cc1280f00000e2bc41",
      "text": " [/takker/scrapbox-wandbox-proxy]と[/miyamonz/コードブロックを実行して画面下にログを出す]scriptとを組み合わせれば実現できそうです[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1616138955,
      "updated": 1616139280
    },
    {
      "id": "60548859385a920000897bcc",
      "text": "  あざす[miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1616152664,
      "updated": 1616152667
    },
    {
      "id": "6054885d385a920000897bce",
      "text": "  　[TamperMonkey]知らなかった",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1616152667,
      "updated": 1616152685
    },
    {
      "id": "60548861385a920000897bcf",
      "text": "  　wandboxに投げるの、なるほど",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1616152672,
      "updated": 1616152729
    },
    {
      "id": "60548859385a920000897bcd",
      "text": "",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1616152664,
      "updated": 1616152664
    }
  ]
}