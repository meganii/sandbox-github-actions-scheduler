{
  "id": "67812d686628c8a17544eb9c",
  "title": "例外",
  "created": 1736519024,
  "updated": 1736519695,
  "lines": [
    {
      "id": "67812d686628c8a17544eb9c",
      "text": "例外",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519024,
      "updated": 1736519024
    },
    {
      "id": "67812d717838e30000ad8ced",
      "text": "プログラムにおける[エラー]を日本語で言ったもの",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519024,
      "updated": 1736519042
    },
    {
      "id": "67812d9c7838e30000ad8cf1",
      "text": "「エラー」よりは[専門用語]のにおいがする",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519067,
      "updated": 1736519070
    },
    {
      "id": "67812d977838e30000ad8cf0",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519062,
      "updated": 1736519062
    },
    {
      "id": "67812d7a7838e30000ad8cee",
      "text": "プログラマーが効率よく[デバッグ]をする為に様々な言語で例外機能が実装されている",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519033,
      "updated": 1736519127
    },
    {
      "id": "67812dd97838e30000ad8cf4",
      "text": "JavaScriptにおける例外の利点を挙げると",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519128,
      "updated": 1736519428
    },
    {
      "id": "67812de87838e30000ad8cf5",
      "text": "　未処理の例外が存在した場合、プログラムの実行を中断してくれる",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519143,
      "updated": 1736519173
    },
    {
      "id": "67812e067838e30000ad8cf6",
      "text": "　　想定外の事態におけるデータの破損や更なる不具合を防止してくれる",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519173,
      "updated": 1736519244
    },
    {
      "id": "67812e4e7838e30000ad8cf8",
      "text": "　　逆に想定外の状態で全く止まらないと、ぼくなつの[8月32日]みたいなことになる",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519245,
      "updated": 1736519302
    },
    {
      "id": "67812e1e7838e30000ad8cf7",
      "text": "　[スタックトレース]でエラーの具体的な発生箇所を知ることができる",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519197,
      "updated": 1736519348
    },
    {
      "id": "67812eb47838e30000ad8cf9",
      "text": "　　これにより、プログラマーが不具合のあったコードを特定する手間が大幅に削減される",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519348,
      "updated": 1736519375
    },
    {
      "id": "67812ed27838e30000ad8cfa",
      "text": "　",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519377,
      "updated": 1736519408
    },
    {
      "id": "67812db87838e30000ad8cf3",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519095,
      "updated": 1736519095
    },
    {
      "id": "67812f357838e30000ad8cfb",
      "text": "とはいえ、例外発生時の動作を指定する[例外処理]にもコストがかかるため、例外の発生させ過ぎも良くない",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519476,
      "updated": 1736519558
    },
    {
      "id": "67812fcf7838e30000ad8d00",
      "text": "　コストとは",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519630,
      "updated": 1736519636
    },
    {
      "id": "67812fcf7838e30000ad8d01",
      "text": "　　プログラマーが[例外処理]を書く手間",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519636,
      "updated": 1736519646
    },
    {
      "id": "67812fdf7838e30000ad8d02",
      "text": "　　例外処理が発生した際の処理時間",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519646,
      "updated": 1736519660
    },
    {
      "id": "67812ff07838e30000ad8d03",
      "text": "　　　エラーオブジェクトを生成している等の理由で通常のif文より動作コストが高い",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519663,
      "updated": 1736519695
    },
    {
      "id": "67812f877838e30000ad8cfd",
      "text": "　[本当にその例外が必要か]どうかを判断するのはプログラマーのセンスにかかっている",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519558,
      "updated": 1736519596
    },
    {
      "id": "67812f397838e30000ad8cfc",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1736519480,
      "updated": 1736519480
    }
  ]
}