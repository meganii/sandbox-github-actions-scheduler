{
  "id": "637d6ce0eacbdc0020a9ea7d",
  "title": "循環的複雑度",
  "created": 1669164257,
  "updated": 1669164375,
  "lines": [
    {
      "id": "637d6ce0eacbdc0020a9ea7d",
      "text": "循環的複雑度",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1669164257,
      "updated": 1669164257
    },
    {
      "id": "637d6ce2e8ae9f00008ff89f",
      "text": "> 循環的複雑度（英: [Cyclomatic complexity]）とは、[ソフトウェア測定法]の一種である。[Thomas McCabe] が開発したもので、[プログラムの複雑度]を測るのに使われる。プログラムのソースコードから、線形的に独立した経路の数を直接数える。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669164258,
      "updated": 1669164364
    },
    {
      "id": "637d6ceae8ae9f00008ff8a1",
      "text": "> 手法としてではなく、そのコンセプトは[文章の可読性]（[複雑度]）を測定する [Flesch-Kincaid Readability Test] に似ている。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669164267,
      "updated": 1669164375
    },
    {
      "id": "637d6ceae8ae9f00008ff8a2",
      "text": "> 循環的複雑度は、プログラムの制御フローをグラフとして描くことで計算される。グラフのノードはプログラムのコマンドに相当する。2つのノードを結ぶ有向エッジは、第一のコマンドを実行後、次に第二のコマンドが実行される可能性があることを示している。",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1669164267,
      "updated": 1669164267
    },
    {
      "id": "637d6ceae8ae9f00008ff8a3",
      "text": "via https://ja.wikipedia.org/wiki/循環的複雑度",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1669164267,
      "updated": 1669164274
    },
    {
      "id": "637d6ceae8ae9f00008ff8a0",
      "text": "",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1669164267,
      "updated": 1669164267
    }
  ]
}