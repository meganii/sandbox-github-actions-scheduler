{
  "id": "64092cee7e8617001c435312",
  "title": "Scrapbox ChatGPT Connector",
  "created": 1678323416,
  "updated": 1679885334,
  "lines": [
    {
      "id": "64092cee7e8617001c435312",
      "text": "Scrapbox ChatGPT Connector",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678323416,
      "updated": 1678323416
    },
    {
      "id": "64094255aff09e0000b7b908",
      "text": "[https://github.com/nishio/scrapbox_chatgpt_connector GitHub - nishio/scrapbox_chatgpt_connector: ChatGPT reads Scrapbox]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678328405,
      "updated": 1678328409
    },
    {
      "id": "64092ed8aff09e0000b7b8ab",
      "text": "Scrapbox ChatGPT Connectorは、ScrapboxとChatGPTを接続するためのシンプルなスクリプトです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678323416,
      "updated": 1678327844
    },
    {
      "id": "640936ccaff09e0000b7b8c2",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678325453,
      "updated": 1678325453
    },
    {
      "id": "640936cbaff09e0000b7b8c1",
      "text": "このスクリプトは、開発者が簡単に全体像を把握し、自分のニーズに合わせてカスタマイズできるように設計されています。またこのプロジェクトの目的は、シンプルな実装を示すことであり、多様なニーズを満たすことではありません。皆さんには、ソースコードを理解し、ご自身のニーズに合わせてカスタマイズすることをお勧めします。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678325452,
      "updated": 1678325497
    },
    {
      "id": "6409401eaff09e0000b7b8ce",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327839,
      "updated": 1678327839
    },
    {
      "id": "6409401eaff09e0000b7b8cf",
      "text": "[*** インストール方法]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327839,
      "updated": 1678329325
    },
    {
      "id": "6409401faff09e0000b7b8d2",
      "text": "\tGitHubリポジトリをcloneします。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327840,
      "updated": 1678327879
    },
    {
      "id": "6409401faff09e0000b7b8d5",
      "text": "\t以下のコマンドを実行して、必要なライブラリをインストールします。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327840,
      "updated": 1678327880
    },
    {
      "id": "6409401faff09e0000b7b8d7",
      "text": "\t$ pip install -r requirements.txt",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327840,
      "updated": 1678327885
    },
    {
      "id": "64094050aff09e0000b7b8f2",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327888,
      "updated": 1678327888
    },
    {
      "id": "6409401faff09e0000b7b8d8",
      "text": "[*** 使い方]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327840,
      "updated": 1678329322
    },
    {
      "id": "6409401faff09e0000b7b8d9",
      "text": "OpenAI APIトークンを取得し、.envファイルに保存します。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327840,
      "updated": 1678327900
    },
    {
      "id": "6409aba1774b170000f724b7",
      "text": "　トークンは https://platform.openai.com/account/api-keys から作れます",
      "userId": "59fb21121207900012774b17",
      "created": 1678355361,
      "updated": 1678355363
    },
    {
      "id": "64094069aff09e0000b7b8f4",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327914,
      "updated": 1678327914
    },
    {
      "id": "6409406aaff09e0000b7b8f5",
      "text": "code: .env",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327914,
      "updated": 1678327914
    },
    {
      "id": "6409406aaff09e0000b7b8f6",
      "text": " OPENAI_API_KEY=sk-...",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327914,
      "updated": 1678327916
    },
    {
      "id": "6409ab1a774b170000f724b2",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1678355226,
      "updated": 1678355226
    },
    {
      "id": "6409451caff09e0000466fd8",
      "text": "[** インデックスを作る]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329117,
      "updated": 1678329330
    },
    {
      "id": "640945e3aff09e0000b7b914",
      "text": "サンプルに入れてある`tiny_sample.json`を元にインデックスが作られます",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329315,
      "updated": 1679457556
    },
    {
      "id": "64094541aff09e0000466fd9",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329154,
      "updated": 1678329154
    },
    {
      "id": "6409408daff09e0000b7b8f9",
      "text": "$ python make_index.py",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327950,
      "updated": 1678327981
    },
    {
      "id": "640940adaff09e0000b7b8fa",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327982,
      "updated": 1678327982
    },
    {
      "id": "64094546aff09e0000466fda",
      "text": "下記のような出力が出ればOK",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329158,
      "updated": 1678329166
    },
    {
      "id": "6409454daff09e0000466fdb",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329166,
      "updated": 1678329166
    },
    {
      "id": "640940f7aff09e0000b7b901",
      "text": "code::",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678328056,
      "updated": 1678328058
    },
    {
      "id": "640940faaff09e0000b7b903",
      "text": " % python make_index.py ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678328058,
      "updated": 1679457618
    },
    {
      "id": "641a7d52aff09e0000910852",
      "text": " 100%|███████████████████████████████████████████████████| 1/1 [00:08<00:00,  8.83s/it]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457618,
      "updated": 1679457624
    },
    {
      "id": "640940f8aff09e0000b7b902",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678328056,
      "updated": 1679457628
    },
    {
      "id": "64094550aff09e0000466fdc",
      "text": "[** 質問をする]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329169,
      "updated": 1678329336
    },
    {
      "id": "64094553aff09e0000466fdd",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329171,
      "updated": 1678329171
    },
    {
      "id": "640940aeaff09e0000b7b8fb",
      "text": "$ python ask.py",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327982,
      "updated": 1678327988
    },
    {
      "id": "640940b0aff09e0000b7b8fc",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327984,
      "updated": 1678327984
    },
    {
      "id": "64094555aff09e0000466fde",
      "text": "下記のような出力が出ればOK",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329174,
      "updated": 1678329182
    },
    {
      "id": "6409455eaff09e0000466fdf",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329182,
      "updated": 1678329182
    },
    {
      "id": "6409406aaff09e0000b7b8f7",
      "text": "code::",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327914,
      "updated": 1679457659
    },
    {
      "id": "641a7d7aaff09e0000910854",
      "text": " % python ask.py       ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457659,
      "updated": 1679457659
    },
    {
      "id": "641a7d7baff09e0000910855",
      "text": " 100%|███████████████████████████████████████████████████| 7/7 [00:00<00:00, 5819.65it/s]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457659,
      "updated": 1679457665
    },
    {
      "id": "641a7d7baff09e0000910856",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457659,
      "updated": 1679457659
    },
    {
      "id": "641a7d7baff09e0000910857",
      "text": " THINKING...",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457659,
      "updated": 1679457659
    },
    {
      "id": "641a7d7baff09e0000910858",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457659,
      "updated": 1679457659
    },
    {
      "id": "641a7d7baff09e0000910859",
      "text": " ANSWER:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457659,
      "updated": 1679457659
    },
    {
      "id": "641a7d7baff09e000091085a",
      "text": " >>>> Scrapbox ChatGPT Connectorって何？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457659,
      "updated": 1679457659
    },
    {
      "id": "641a7d7baff09e000091085b",
      "text": " > Scrapbox ChatGPT Connectorは、ScrapboxとChatGPTを接続するためのシンプルなスクリプトです。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457659,
      "updated": 1679457659
    },
    {
      "id": "641a7d7baff09e000091085c",
      "text": " 100%|███████████████████████████████████████████████████| 7/7 [00:00<00:00, 6488.43it/s]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457659,
      "updated": 1679457668
    },
    {
      "id": "641a7d7baff09e000091085d",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457659,
      "updated": 1679457659
    },
    {
      "id": "641a7d7baff09e000091085e",
      "text": " THINKING...",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457659,
      "updated": 1679457659
    },
    {
      "id": "641a7d7baff09e000091085f",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457659,
      "updated": 1679457659
    },
    {
      "id": "641a7d7baff09e0000910860",
      "text": " ANSWER:",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457659,
      "updated": 1679457659
    },
    {
      "id": "641a7d7baff09e0000910861",
      "text": " >>>> クオリアさん、日本語で自己紹介して",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457659,
      "updated": 1679457659
    },
    {
      "id": "641a7d7baff09e0000910862",
      "text": " > はじめまして、私はクオリアと申します。私は人工知能の一種で、このページの管理人でもあります。よろしくお願いします。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457659,
      "updated": 1679457659
    },
    {
      "id": "641a7d78aff09e0000910853",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457656,
      "updated": 1679457656
    },
    {
      "id": "640940baaff09e0000b7b8fd",
      "text": "[** 自分のScrapboxのデータを使う]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327995,
      "updated": 1678329340
    },
    {
      "id": "640945fdaff09e0000b7b915",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329342,
      "updated": 1678329342
    },
    {
      "id": "64094569aff09e0000466fe0",
      "text": "自分のScrapboxのデータをJSONにエクスポートする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329194,
      "updated": 1678329267
    },
    {
      "id": "640945feaff09e0000b7b916",
      "text": " Include metadata such as line.created and line.updated.のチェックを外してExportする必要がある[blu3mo.icon][nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329343,
      "updated": 1678331405
    },
    {
      "id": "6409473f79e1130000b17cd8",
      "text": "",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678329663,
      "updated": 1678329663
    },
    {
      "id": "640945d3aff09e0000466fe2",
      "text": "コードのここの部分を書き換える",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329299,
      "updated": 1678329307
    },
    {
      "id": "64094572aff09e0000466fe1",
      "text": "code:make_index.py",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329202,
      "updated": 1678329260
    },
    {
      "id": "641a7da2aff09e0000910863",
      "text": "\tif __name__ == \"__main__\":",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457698,
      "updated": 1679457701
    },
    {
      "id": "641a7da4aff09e0000910864",
      "text": "     # Sample default arguments for update_from_scrapbox()",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457701,
      "updated": 1679457701
    },
    {
      "id": "641a7da4aff09e0000910865",
      "text": "     JSON_FILE = \"from_scrapbox/tiny_sample.json\"",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457701,
      "updated": 1679457701
    },
    {
      "id": "641a7da4aff09e0000910866",
      "text": "     INDEX_FILE = \"tiny_sample.pickle\"",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457701,
      "updated": 1679457701
    },
    {
      "id": "641a7da4aff09e0000910867",
      "text": " ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457701,
      "updated": 1679457701
    },
    {
      "id": "641a7da4aff09e0000910868",
      "text": "     update_from_scrapbox(JSON_FILE, INDEX_FILE)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457701,
      "updated": 1679457701
    },
    {
      "id": "640945a2aff09e0000b7b911",
      "text": "code:ask.py",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329251,
      "updated": 1678329292
    },
    {
      "id": "640945ccaff09e0000b7b912",
      "text": " if __name__ == \"__main__\":",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329292,
      "updated": 1679457760
    },
    {
      "id": "641a7de0aff09e000091086a",
      "text": "     ask(\"Scrapbox ChatGPT Connectorって何？\", \"tiny_sample.pickle\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457760,
      "updated": 1679457760
    },
    {
      "id": "641a7de0aff09e000091086b",
      "text": "     ask(\"クオリアさん、日本語で自己紹介して\", \"tiny_sample.pickle\")",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457760,
      "updated": 1679457760
    },
    {
      "id": "641a7de0aff09e000091086c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457760,
      "updated": 1679457761
    },
    {
      "id": "6409401faff09e0000b7b8ec",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327840,
      "updated": 1678329348
    },
    {
      "id": "6409401faff09e0000b7b8ef",
      "text": "[** ライセンス]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327840,
      "updated": 1678329351
    },
    {
      "id": "6409460eaff09e0000b7b917",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329359,
      "updated": 1678329359
    },
    {
      "id": "6409401faff09e0000b7b8f0",
      "text": "Scrapbox ChatGPT Connectorは、MITライセンスの下で配布されています。詳細については、LICENSEファイルをご覧ください。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327840,
      "updated": 1678327840
    },
    {
      "id": "6409401eaff09e0000b7b8d0",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327839,
      "updated": 1678327839
    },
    {
      "id": "641a7d18aff09e000091084f",
      "text": "[** Ver.2] 2023-03-22",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457560,
      "updated": 1679458264
    },
    {
      "id": "641a8083aff09e00005ddbcb",
      "text": "　小さいサンプルを追加",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679458436,
      "updated": 1679458444
    },
    {
      "id": "641a7d1caff09e0000910851",
      "text": "　\tupdated `サンプルに入れてある[/qualia-san]のデータを元にインデックスが作られます`→`サンプルに入れてある`tiny_sample.json`を元にインデックスが作られます`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457565,
      "updated": 1679458446
    },
    {
      "id": "641a7e12aff09e00005ddbc1",
      "text": "\t　初めて試すユーザが1秒1リクエスト程度に制限されているせいで動作チェックだけで時間が掛かっていた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457810,
      "updated": 1679458434
    },
    {
      "id": "641a7e5baff09e00005ddbc2",
      "text": "\t　そこで1ページだけの小さいJSONを用意しておいた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457884,
      "updated": 1679458453
    },
    {
      "id": "641a7eadaff09e00005ddbc5",
      "text": "\t　テストの質問内容も変更した",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457966,
      "updated": 1679458457
    },
    {
      "id": "64207d51e5172d000067d905",
      "text": "\t　2023/3/27 main branchにはまだtiny_sample.jsonが追加されていないが、make_index.pyではtiny_sample.jsonを使うように指定されているのでエラーが出る模様[yosider.icon]",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1679850833,
      "updated": 1679850913
    },
    {
      "id": "64210414aff09e00002aae66",
      "text": "\t　\tfixed[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679885332,
      "updated": 1679885334
    },
    {
      "id": "641a7fdeaff09e00005ddbc9",
      "text": "\t埋め込みリクエストごとにファイルに保存していたのをやめて最後に保存する形に変更した",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679458271,
      "updated": 1679458466
    },
    {
      "id": "641a7ffdaff09e00005ddbca",
      "text": "\t　自分は実験過程で止めたり再開したり色々していたので前者の実装が都合が良かったのだが、大部分のユーザはそうではないので速い方が良いかと。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679458302,
      "updated": 1679458483
    },
    {
      "id": "641a80c6aff09e00005ddbcd",
      "text": "\t　今までは中断をすると「たまたま書き込み中ならファイルが壊れる、リクエスト中なら壊れない」だった。developブランチにsignalのハンドラを書き換えてファイルが壊れないようにした実装も使ってみたが「理解しやすい短いコードを作る」という方針に反しているのでやめた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679458502,
      "updated": 1679458600
    },
    {
      "id": "641a7ec0aff09e00005ddbc6",
      "text": "\t既存のインデックスを使ったアップデートに対応",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457984,
      "updated": 1679458248
    },
    {
      "id": "641a7fc8aff09e00005ddbc8",
      "text": "\t　すでに作られてる埋め込みベクトルを再度API呼び出しすることなく再利用できるようにした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679458249,
      "updated": 1679458420
    },
    {
      "id": "641a7e7aaff09e00005ddbc4",
      "text": "　askの本体を関数にくくりだして、パラメータとしてインデックスファイルを渡せるようにした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457915,
      "updated": 1679458656
    },
    {
      "id": "641a8160aff09e00005ddbcf",
      "text": "　　複数のインデックスから仮想人格を作って座談会などの形式をすることをやりやすくした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679458657,
      "updated": 1679458687
    },
    {
      "id": "641a7e94aff09e000091086d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457941,
      "updated": 1679459241
    },
    {
      "id": "641a7e95aff09e000091086e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679457941,
      "updated": 1679457941
    },
    {
      "id": "640a8dceaff09e0000ec5539",
      "text": "[** NEWS]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413263,
      "updated": 1678413269
    },
    {
      "id": "640a8dceaff09e0000ec553a",
      "text": "\t2023-03-09 OpenAI APIを初めて使う人には厳しいレートリミットがかかっているので、エラーだらけになることを防ぐために1リクエストごとに1秒待つようにしました",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413263,
      "updated": 1678413798
    },
    {
      "id": "640a8f14aff09e00001c94bd",
      "text": "\t\t結構時間が掛かります",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413589,
      "updated": 1678413609
    },
    {
      "id": "640aa857aff09e0000ca28a2",
      "text": "\t　リミットの掛かっていない人には関係ないので削ってもよい [差分 https://github.com/nishio/scrapbox_chatgpt_connector/commit/d08286aa70393da79f9f841efda895714df314f2]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678420055,
      "updated": 1678420055
    },
    {
      "id": "640a8eebaff09e0000ec553c",
      "text": "\t2023-03-10 「ScrapboxとつながったChatGPTと話す経験」を早く試したい人のために[/nishio]のデータで作ったインデックスを公開しました",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413548,
      "updated": 1678413790
    },
    {
      "id": "640a8e90aff09e00001c94bc",
      "text": "\t\thttps://www.dropbox.com/s/xn5x5o1ydb0xt5p/nishio-vector-20230309.pickle?dl=0",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413457,
      "updated": 1678413549
    },
    {
      "id": "640b1bf509c5f20000d800d7",
      "text": " \t\tこれって、このデータをダウンロードして`$ python ask.py`だけしたらOpenAIに課金しなくても[nishio]（のScrapbox）と対話できるってことですか？[tkgshn.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678449653,
      "updated": 1678504567
    },
    {
      "id": "640b35d9774b1700008c2c67",
      "text": " \t\t学習はしなくてもいいけど、クエリ自体は課金が必要な気がする(まだそこまで行ってない…)[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1678456282,
      "updated": 1678456347
    },
    {
      "id": "640b45e8aff09e0000f003e7",
      "text": " \t\tAPIトークンを得て無料試用枠を使えば無料[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678460393,
      "updated": 1678503746
    },
    {
      "id": "640b4651aff09e0000f003e9",
      "text": " \t\t　埋め込みに時間が掛かるのは[OpenAI Embedding API]を何万回も叩く必要があるせい、無料試用枠だレートリミット(60回/分)される、チャットの[OpenAI ChatGPT API]は分に60回も要求しないからレートリミットの問題が発生しない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678460498,
      "updated": 1678504637
    },
    {
      "id": "640b4638aff09e0000f003e8",
      "text": " \t\t 1回2円くらいで、無料枠を使い切ったら課金が必要",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678460473,
      "updated": 1678504559
    },
    {
      "id": "640d243f6eb4060000cda167",
      "text": " \tインデックス公開神！[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1678582848,
      "updated": 1678582857
    },
    {
      "id": "640b77ee09c5f2000085850d",
      "text": " https://drive.google.com/file/d/1xhJKEboilQMX9BRDzee0ZHL7wfLBYIjv/view?usp=sharing [tkgshn.icon]のデータ",
      "userId": "5b9f8ea76ffa88001309c5f2",
      "created": 1678473199,
      "updated": 1678473204
    },
    {
      "id": "640a8f77aff09e0000ec553d",
      "text": "\t\tこれを使って[/nishio/AIパネルディスカッション]しました！[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413687,
      "updated": 1678503777
    },
    {
      "id": "640bef5eaff09e000098db76",
      "text": " https://drive.google.com/file/d/1a8IB_ywQkde2TPUb-dnYgzgM2nqAA6ON/view?usp=share_link [/motoso]を学習させたpickle [基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1678503777,
      "updated": 1678624346
    },
    {
      "id": "640ddca979e1130000f0bee6",
      "text": " https://drive.google.com/file/d/1KrTTY1-djaW-bfmc4q25b4mq7qLoT9ZO/view?usp=sharing [/blu3mo]のデータ（privateページフィルタ済み）[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678630057,
      "updated": 1678635171
    },
    {
      "id": "640e9ecf55cbd30000ad7879",
      "text": " https://drive.google.com/file/d/1ohJ-VhaAtFZx7a5rqksKVbXzmnULoaP_/view?usp=sharing [/mtane0412][mtane0412.icon]",
      "userId": "5ae7fecf7766b7001455cbd3",
      "created": 1678679759,
      "updated": 1678679770
    },
    {
      "id": "640bef5eaff09e000098db77",
      "text": "　みんなのデータが増えてきたから一つの質問を何人もに投げるとか、パネルディスカッションみたいに順繰りに回すとかをやりやすくしたくなってきた[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678503777,
      "updated": 1678629565
    },
    {
      "id": "64109a5faff09e00000c3254",
      "text": "　\t[Scrapbox ChatGPT Connector座談会モード]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678809696,
      "updated": 1678809721
    },
    {
      "id": "640dda7aaff09e0000709cbf",
      "text": "\tGPT4に質問したかったのでAPIを叩かずにプロンプトをクリップボードに入れるだけのスクリプトを作った[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678629499,
      "updated": 1678932806
    },
    {
      "id": "64127b43aff09e000066e17b",
      "text": " \t[Github https://github.com/nishio/scrapbox_chatgpt_connector/blob/develop/ask_gpt4.py]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678932804,
      "updated": 1678932807
    },
    {
      "id": "64127b42aff09e000066e17a",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678932802,
      "updated": 1678932802
    },
    {
      "id": "6409401eaff09e0000b7b8d1",
      "text": "[*** Q&Aとか雑談]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327839,
      "updated": 1678328440
    },
    {
      "id": "64094266aff09e0000b7b90a",
      "text": "ここに何でも書いて(ユーザが加筆できるREADME面白くない？)[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678328423,
      "updated": 1678329600
    },
    {
      "id": "64094266aff09e0000b7b90b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678328423,
      "updated": 1678328423
    },
    {
      "id": "641a96b7aff09e000036a54e",
      "text": "\tver.2 released[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679464120,
      "updated": 1679464127
    },
    {
      "id": "64094714aff09e00007513cf",
      "text": "\t　「理解しやすい短いコードを作る」方針にそって、入力をクレンジングするコードと、参照したページの表示を削った[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329620,
      "updated": 1679464119
    },
    {
      "id": "641a842eaff09e00005ddbd3",
      "text": "　　有用性が微妙なので〜",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679459374,
      "updated": 1679459384
    },
    {
      "id": "641a8438aff09e00005ddbd4",
      "text": "　　後者は、回答を再度embedしてそれとの類似度で並び替えた方が良いと思うが、追加の時間とコストを要求することになるのでデフォルトにすることはないかなーといあ判断",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679459384,
      "updated": 1679459437
    },
    {
      "id": "641a83c0aff09e00005ddbd0",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679459264,
      "updated": 1679459264
    },
    {
      "id": "641a83c0aff09e00005ddbd1",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679459264,
      "updated": 1679459264
    },
    {
      "id": "641a83c0aff09e00005ddbd2",
      "text": "ver.1~~~",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679459264,
      "updated": 1679464138
    },
    {
      "id": "641a96c9aff09e000036a54f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679464137,
      "updated": 1679464137
    },
    {
      "id": "6409475aaff09e0000b7b919",
      "text": " [Scrapbox ChatGPT Connector]、とても気になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329691,
      "updated": 1678329691
    },
    {
      "id": "6409475baff09e0000b7b91a",
      "text": " Q&Aに書くにはオフトピックな気がするので、やってみたいことやアイデアをここに書く[blu3mo.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329691,
      "updated": 1678329691
    },
    {
      "id": "6409475baff09e0000b7b91b",
      "text": "　　Q&Aではなく雑談のセクションにしたのでマージしていい？[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329691,
      "updated": 1678329691
    },
    {
      "id": "6409475baff09e0000b7b91c",
      "text": "　　👍[blu3mo.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329691,
      "updated": 1678329691
    },
    {
      "id": "6409475baff09e0000b7b91d",
      "text": "\t\t✅[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329691,
      "updated": 1678329691
    },
    {
      "id": "6409475baff09e0000b7b91e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329691,
      "updated": 1678329691
    },
    {
      "id": "6409471faff09e00007513d2",
      "text": " 「質問文で[ベクトルサーチ]」ではなく「質問文の回答を一度知識0で生成させて、その回答文を元に[ベクトルサーチ]」した方が精度が上がる、みたいな話をどこかでみた[blu3mo.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329632,
      "updated": 1678329697
    },
    {
      "id": "6409e8c4aff09e0000b07f95",
      "text": " 　上がりそう[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678371013,
      "updated": 1678371013
    },
    {
      "id": "6409e8c4aff09e0000b07f96",
      "text": " 　 要するに質問文が大体の場合は短すぎて「良い」埋め込みベクトルにならないのだと思う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678371013,
      "updated": 1678371013
    },
    {
      "id": "6409e8c4aff09e0000b07f97",
      "text": " 　 　埋め込みに使われるのは[Ada]なのでそれほど頭良くないし",
      "userId": "59fb21121207900012774b17",
      "created": 1678371013,
      "updated": 1678371243
    },
    {
      "id": "640a9314aff09e00001c94be",
      "text": " 　 ベクトルサーチは単なる内積なので「答え」を検索するのではなく「似ているもの(関連ありそうなもの)」を検索している",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678414613,
      "updated": 1678414717
    },
    {
      "id": "640a938faff09e00001c94bf",
      "text": " 　  一度回答文を作らせてから、それに似ているものを探すことで「ChatGPTが生成する回答文に似たことを書いている僕のScrapboxのページを参考にして回答を作る」になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678414736,
      "updated": 1678415078
    },
    {
      "id": "640a94e6aff09e00001c94c1",
      "text": " 　  それが良いのかどうかはニーズ次第だなぁ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678415078,
      "updated": 1678420097
    },
    {
      "id": "640aa880aff09e0000ca28a3",
      "text": " 　  すでに回答が世の中にあるものに関してはそれを使えるから質が上がる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678420097,
      "updated": 1678420102
    },
    {
      "id": "640aa885aff09e0000ca28a4",
      "text": " 　  自分のScrapboxを学習させたキャラを作る上では最初にChatGPTが回答しちゃうのでそれに引きずられて「ありきたりなことばかり言うようになるのでは」が心配",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678420102,
      "updated": 1678420139
    },
    {
      "id": "6409471faff09e00007513d3",
      "text": " 　これを応用して、",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329632,
      "updated": 1678329697
    },
    {
      "id": "6409471faff09e00007513d4",
      "text": " 　 1. 質問文でベクトルサーチして、多少関連度高いページを元に回答させる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329632,
      "updated": 1678329697
    },
    {
      "id": "6409471faff09e00007513d5",
      "text": " 　 2. その回答を元にベクトルサーチして、もっと関連度高いページを元に回答させる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329632,
      "updated": 1678329697
    },
    {
      "id": "6409471faff09e00007513d6",
      "text": " 　 みたいな2 stepでやることで回答のクオリティ上がったりしないかな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329632,
      "updated": 1678329697
    },
    {
      "id": "6409e8c7aff09e0000b07f98",
      "text": " 　 なんかこれ、AIが自問自答しなから考えを深めていってる感じがあって面白いな[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678371016,
      "updated": 1678371050
    },
    {
      "id": "640a9acbaff09e0000ec5580",
      "text": "　 \t実験",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678416588,
      "updated": 1678633799
    },
    {
      "id": "640d5893aff09e00006f74f2",
      "text": " \t\tstep 1",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678596247,
      "updated": 1678633801
    },
    {
      "id": "6409471faff09e00007513da",
      "text": "\t\t\t\t>>>> 自分の知的生産性を高めるにはどうすればいいか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329632,
      "updated": 1678633801
    },
    {
      "id": "640a9a0baff09e0000ec5578",
      "text": "    >新しい知識を生み出す能力を向上させるような知識を身につけることが必要である。他人に伝えるために、未来の自分にも理解できるような具体的な言語化とアウトプットをすることも大切である。また、生産物が時と共に価値を失わないよう、知識を生み出す能力に焦点を合わせた情報を生産することが重要である。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678416395,
      "updated": 1678633801
    },
    {
      "id": "640a9aeaaff09e0000ec5581",
      "text": "    >`[知的生産術は自分で作らねばならない] [知的生産性の向上] [知的生産] [知識労働者の生産性は計測できない] [未来の自分にわかるようにする] [KJ法の表札をいつ変更するのか] [知的生産に専念するために楽な手法を使う] [知識労働者の生産性向上] [BMOT特別授業第1回「知的生産」] [老害化しない技術が人生全体での知的生産性向上に有益]`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678416619,
      "updated": 1678633801
    },
    {
      "id": "640a9a0baff09e0000ec5579",
      "text": "    これを元にして新しい質問をしてみた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678416395,
      "updated": 1678633799
    },
    {
      "id": "640a9a1aaff09e0000ec557a",
      "text": "     code:step-2 query",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678416411,
      "updated": 1678633799
    },
    {
      "id": "640a9a1daff09e0000ec557b",
      "text": "      新しい知識を生み出す能力を向上させるような知識を身につけることが必要である。他人に伝えるために、未来の自分にも理解できるような具体的な言語化とアウトプットをすることも大切である。また、生産物が時と共に価値を失わないよう、知識を生み出す能力に焦点を合わせた情報を生産することが重要である。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678416414,
      "updated": 1678633799
    },
    {
      "id": "640a9a24aff09e0000ec557c",
      "text": "      ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678416420,
      "updated": 1678633799
    },
    {
      "id": "640a9a24aff09e0000ec557d",
      "text": "      ネクストアクションは？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678416420,
      "updated": 1678633799
    },
    {
      "id": "640a9a02aff09e0000ec5576",
      "text": " \t\t\t\t>新しい知識を生み出す能力を向上させるために、具体的な言語化とアウトプットをすることが必要。また、知識を生み出す能力に焦点を合わせた情報を生産することが重要。これらを実践することで、生産物が時と共に価値を失わないようにすることができる。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678416387,
      "updated": 1678633799
    },
    {
      "id": "640a9a37aff09e0000ec557f",
      "text": "      `[知識の生成と利用] [エンジニアの知的生産術を若い人に渡す] [知的生産] [Hatena2011-05-04] [未来の自分にわかるようにする] [知識の生産者] [エンジニアの知的生産術 ビフォー・アフター] [なぜ知的生産術に投資するのか]`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678416439,
      "updated": 1678633799
    },
    {
      "id": "640a9a02aff09e0000ec5577",
      "text": "　　　　　回答は(そもそも抽象的すぎる話題のせいか)あんまり変わってないけど、参考にしてるリスト(ベクトル検索結果上位)はかなり変わってるな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678416387,
      "updated": 1678633799
    },
    {
      "id": "640aa24baff09e00001c94c5",
      "text": "　　　　　やってから思ったけど質問文を変えない方が良かったか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678418507,
      "updated": 1678633799
    },
    {
      "id": "640d587faff09e00006f74f1",
      "text": "　　　　質問文を変えないversion",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678596226,
      "updated": 1678633799
    },
    {
      "id": "640d5801aff09e00006f74ed",
      "text": "　　　　　code:step-2 query",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678596099,
      "updated": 1678633799
    },
    {
      "id": "640d5803aff09e00006f74ee",
      "text": "　　　　　 >>>> 新しい知識を生み出す能力を向上させるような知識を身につけることが必要である。他人に伝えるために、未来の自分にも理解できるような具体的な言語化とアウトプットをすることも大切である。また、生産物が時と共に価値を失わないよう、知識を生み出す能力に焦点を合わせた情報を生産することが重要である。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678596102,
      "updated": 1678633799
    },
    {
      "id": "640d5804aff09e00006f74ef",
      "text": "      ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678596102,
      "updated": 1678633799
    },
    {
      "id": "640d5804aff09e00006f74f0",
      "text": "      自分の知的生産性を高めるにはどうすればいいか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678596102,
      "updated": 1678633799
    },
    {
      "id": "640d57f3aff09e00006f74eb",
      "text": "　　　　　>自分の知識の量を増やすことと、他人の知識の量を増やすことの両方が必要である。自分の知識を増やすためには、新しい知識を習得する速度を上げたり、新しい知識を発見することが重要である。他人の知識を増やすためには、教えることが資産の生産であるため、効率的に教える知識を身につけることが重要である。また、未来の自分にも理解できるような具体的な言語化とアウトプットをすることも大切である。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678596086,
      "updated": 1678633799
    },
    {
      "id": "640d57f4aff09e00006f74ec",
      "text": "     > `[未来の自分にわかるようにする] [知的生産] [知識の生成と利用] [エンジニアの知的生産術を若い人に渡す] [なぜ知的生産術に投資するのか] [知識の生産者] [「成果に焦点を合わせた情報」の「成果」とは何] [知的生産性の向上] [ポスト資本主義社会]`",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678596087,
      "updated": 1678633799
    },
    {
      "id": "640a9b4faff09e00001c94c2",
      "text": "\t\t\t\tstep-3もやってみたけど同じ回答だった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678416720,
      "updated": 1678633799
    },
    {
      "id": "640a9b4faff09e00001c94c3",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678416720,
      "updated": 1678416720
    },
    {
      "id": "64094707aff09e00007513cd",
      "text": "[* タイムアウト]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329608,
      "updated": 1678329609
    },
    {
      "id": "640933c0aff09e0000b7b8b1",
      "text": " 「APIを叩いてるけどタイムアウトしまくり」みたいな話、そもそも無料トライアルや、課金して48時間以内の新参者にはキツいリミット掛けられてるんだよね[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678324672,
      "updated": 1678329601
    },
    {
      "id": "6409f891aff09e000014b4ee",
      "text": " Rate Limit",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678375058,
      "updated": 1678375058
    },
    {
      "id": "6409f891aff09e000014b4ef",
      "text": " \t>[https://gyazo.com/df46d34c1612ea9bc585538a3af22e91]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678375058,
      "updated": 1678375058
    },
    {
      "id": "6409f891aff09e000014b4f0",
      "text": " \t\t[https://platform.openai.com/docs/guides/rate-limits/overview OpenAI API]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678375058,
      "updated": 1678375058
    },
    {
      "id": "64093f9daff09e0000b7b8c9",
      "text": " たぶんこのスクリプトで初めてChatGPT APIを試す人はこの罠にハマりまくる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678327709,
      "updated": 1678328836
    },
    {
      "id": "64094404aff09e0000466fd3",
      "text": " 一応、失敗したら1秒待ってやり直すコードにはしてあるけど、僕の環境では再現しないので試せない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678328837,
      "updated": 1678328902
    },
    {
      "id": "6409acb1774b170000f724b8",
      "text": " 無課金枠だと一瞬でrate limitに達した[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1678355634,
      "updated": 1678355698
    },
    {
      "id": "6409acbb774b170000f724b9",
      "text": " 　>limit reached for default-global-with-image-limits in organization org-xxx on requests per min. Limit: 60 / min. Current: 70 / min. Contact support@openai.com if you continue to have issues. Please add a payment method to your account to increase your rate limit. Visit https://platform.openai.com/account/billing to add a payment method.",
      "userId": "59fb21121207900012774b17",
      "created": 1678355643,
      "updated": 1678355648
    },
    {
      "id": "640933d2aff09e0000b7b8b6",
      "text": "　リクエストごとに1秒待つ挙動にしました[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678324690,
      "updated": 1678364164
    },
    {
      "id": "6409cdecaff09e00007e20d7",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678364140,
      "updated": 1678364140
    },
    {
      "id": "6409cdecaff09e00007e20d8",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678364140,
      "updated": 1678364140
    },
    {
      "id": "6409470eaff09e00007513ce",
      "text": "[* 値段]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329615,
      "updated": 1678329616
    },
    {
      "id": "6409446eaff09e0000466fd4",
      "text": "\tみんなが心配するのは値段だと思う[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678328943,
      "updated": 1678329615
    },
    {
      "id": "64093452aff09e0000b7b8b7",
      "text": " Price",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678324818,
      "updated": 1678328958
    },
    {
      "id": "64094484aff09e0000466fd5",
      "text": " 　[/nishio]のデータでいろいろ試して10ドルいかない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678328964,
      "updated": 1678329540
    },
    {
      "id": "64093453aff09e0000b7b8b8",
      "text": "  >[https://gyazo.com/5078424fb66b40689979d7aec9abc1b6]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678324820,
      "updated": 1678328962
    },
    {
      "id": "64093456aff09e0000b7b8b9",
      "text": "　　実験過程の諸々が含まれてるので、本当はもう少し安い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678324822,
      "updated": 1678329038
    },
    {
      "id": "640933c0aff09e0000b7b8b3",
      "text": "　　安い[blu3mo.icon*2][fumito.icon][基素.icon][yuyasurarin.icon][tkgshn.icon]",
      "userId": "5b9f8ea76ffa88001309c5f2",
      "created": 1678324673,
      "updated": 1678363223
    },
    {
      "id": "6409b2235f1e0d0000350964",
      "text": " 　　この体験ができて10$なんていかないのは本当に安いと思う[yuyasurarin.icon]",
      "userId": "616ca537c25a92001e5f1e0d",
      "created": 1678357028,
      "updated": 1678357040
    },
    {
      "id": "6409479a79e1130000b17cda",
      "text": "　サイズ感[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678329754,
      "updated": 1678330950
    },
    {
      "id": "64094bfaaff09e0000466feb",
      "text": "　　/nishioのJSONが32MB",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678330875,
      "updated": 1678330897
    },
    {
      "id": "641aa67aaff09e000035e3a5",
      "text": "　　tokenが17229603個",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679468155,
      "updated": 1679468162
    },
    {
      "id": "641ab59aaff09e00007a2eb4",
      "text": "　　\t単純計算で7$くらい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679472027,
      "updated": 1679472051
    },
    {
      "id": "64094c2caff09e0000466fec",
      "text": "　　出来上がったベクトルインデックスは140MB",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678330925,
      "updated": 1678330941
    },
    {
      "id": "640dd3ba774b170000661e81",
      "text": "　　/motosoのJSON 25MB pickleは500MBぐらいあった[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1678627770,
      "updated": 1678643349
    },
    {
      "id": "6409496a79e11300002c3350",
      "text": "　　　お値段いくらか知りたい〜[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678330219,
      "updated": 1678629594
    },
    {
      "id": "640e10e3774b1700005c46d2",
      "text": "　　　4.8ドルぐらいでした[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1678643427,
      "updated": 1678643445
    },
    {
      "id": "640e9efb55cbd30000ad787a",
      "text": "　　/mtane0412 json18.5MB pickle404.3MB[mtane0412.icon]",
      "userId": "5ae7fecf7766b7001455cbd3",
      "created": 1678679803,
      "updated": 1678679862
    },
    {
      "id": "640ddadaaff09e0000709cc0",
      "text": "   $5.50",
      "userId": "5ae7fecf7766b7001455cbd3",
      "created": 1678629594,
      "updated": 1678679870
    },
    {
      "id": "640ea6f155cbd30000904d72",
      "text": "    色々質問とかしたからちょっと増えてるのかな",
      "userId": "5ae7fecf7766b7001455cbd3",
      "created": 1678681842,
      "updated": 1678681850
    },
    {
      "id": "640ddadaaff09e0000709cc1",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678629594,
      "updated": 1678629594
    },
    {
      "id": "64093468aff09e0000b7b8bd",
      "text": "[LangChain Chat]よりインデックス作成に時間がかかっている印象[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678324840,
      "updated": 1678329876
    },
    {
      "id": "6409481479e11300005beb72",
      "text": "　LangChain Chatのingest.pyの処理は3000ページが15秒くらいで終わった気がする[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678329876,
      "updated": 1678329910
    },
    {
      "id": "640949df79e11300002c3355",
      "text": "  https://github.com/hwchase17/chat-langchain/blob/master/ingest.py",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678330335,
      "updated": 1678330671
    },
    {
      "id": "64094b2e79e11300005beb79",
      "text": "　　時間かかるよねえ[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678330670,
      "updated": 1678333033
    },
    {
      "id": "64095469aff09e0000f4fd1d",
      "text": "　　 どれくらい掛かるかREADMEに書きたいけど、時間測らずに放置して寝たのでどれくらい掛かるのかわからないな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678333033,
      "updated": 1678333091
    },
    {
      "id": "64095463aff09e0000f4fd1c",
      "text": "　　　テキストそれぞれAPIを叩くのではなくバルクで叩く方法があるのではと思ったんだがパッと見つけられず、とりあえず「まあ/nishioでも寝てる間に終わるからいいだろう」的な感じでリリースした",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678333027,
      "updated": 1678594010
    },
    {
      "id": "64094b8679e11300005beb7b",
      "text": "   なるほど[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678330758,
      "updated": 1678330758
    },
    {
      "id": "64094b82aff09e0000466fe9",
      "text": "　　 Scrapboxが更新された時のアップデートをどうするのかも悩みどころ[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678330755,
      "updated": 1678333102
    },
    {
      "id": "640e8210aff09e000059b354",
      "text": "　　 　この件、現状でも「キャッシュにないときだけAPIを叩く」という実装なので単純に新しいJSONと既存のpickleでやれば更新された分だけ追加される",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678672401,
      "updated": 1678672552
    },
    {
      "id": "640e82a8aff09e000059b355",
      "text": "　　 　ただし「消えたもの」もpickleには残り続けるから…",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678672552,
      "updated": 1678674021
    },
    {
      "id": "640e8838aff09e000059b356",
      "text": "　　 　　これ言葉で書くよりコードで書く方が楽だが「機能追加ではなくシンプルであることを最優先」ってポリシーには反するんだよな、どうしようかな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678673977,
      "updated": 1678674015
    },
    {
      "id": "640c3c1faff09e0000d944cb",
      "text": "　　 やっぱまとめて埋め込む方法あるっぽい[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678523423,
      "updated": 1678523451
    },
    {
      "id": "640d509faff09e000047eb2f",
      "text": "　　 \t>Scrapbox ChatGPT Connector、embedding APIをバッチでまとめて生成するようにしたらindexingが爆速になった気がする https://twitter.com/mpppk/status/1634397275257712640?s=20",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594210,
      "updated": 1678594226
    },
    {
      "id": "64094b9aaff09e0000466fea",
      "text": "\t[\" Scrapboxが更新された時のアップデート]を実装したついでに、何もアップデート必要ないケースの実験をしてわかったんだけどデータをpickleで保存してるのが遅い[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678330779,
      "updated": 1678808755
    },
    {
      "id": "6410969caff09e0000512dd6",
      "text": "\t　途中で止めた時に途中経過が失われないように毎回保存してるからw",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678808733,
      "updated": 1678808759
    },
    {
      "id": "641096b8aff09e0000512dd7",
      "text": "\t　というわけでこの保存をコメントアウトして最後に一回だけ保存するように変えたらいいと思う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678808761,
      "updated": 1678808805
    },
    {
      "id": "64109582aff09e00000c3252",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678808450,
      "updated": 1678808450
    },
    {
      "id": "64109582aff09e00000c3253",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678808450,
      "updated": 1679467845
    },
    {
      "id": "641aa541aff09e000035e39e",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679467842,
      "updated": 1679467842
    },
    {
      "id": "64094f43aff09e0000466ff3",
      "text": "類似度検索を素朴に実装しているので/nishioの39000チャンクに対して検索すると1秒に22000チャンクくらいの速度で1秒ちょい掛かる(Macbook Pro)[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678331716,
      "updated": 1678413964
    },
    {
      "id": "64094f68aff09e0000466ff6",
      "text": " これの数倍大きい人は高速化を考える必要が出てくるだろうね",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678331752,
      "updated": 1678331836
    },
    {
      "id": "640c3c04aff09e0000d944ca",
      "text": " [FAISS]とか使うといいのかな？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678523396,
      "updated": 1678523409
    },
    {
      "id": "64094f47aff09e0000466ff4",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678331720,
      "updated": 1678331720
    },
    {
      "id": "640950e26eb40600004437da",
      "text": "テキストの似ている順を計算するときにもOpenAIが利用できるというのを知った[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1678332130,
      "updated": 1678332250
    },
    {
      "id": "640950f36eb40600004437dc",
      "text": "\t例えばScrapboxの[2-hop link]の代わりにこのベクトルを使うとかもできそう",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1678332147,
      "updated": 1678332163
    },
    {
      "id": "640954eb79e1130000f1a228",
      "text": "\t　[mem]とかはそういう事をやっていそう[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678333163,
      "updated": 1678333178
    },
    {
      "id": "640951116eb40600004437dd",
      "text": "  [mem.nhiro.org]にその機能をつけようかな…[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678332177,
      "updated": 1678333302
    },
    {
      "id": "6409559caff09e0000f4fd1f",
      "text": "　  ちなみにChatGPTが4000トークンしか受け付けないので500トークンに刻んでインデックスを使ってるんだけど、埋め込みAPI自体は8000トークン取れる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678333346,
      "updated": 1678333489
    },
    {
      "id": "64095630aff09e0000f4fd20",
      "text": "　  僕のプロジェクトの99%のページは刻まずに埋め込める",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678333489,
      "updated": 1678333493
    },
    {
      "id": "64095626aff09e0000b7b92d",
      "text": "　  [/nishio/Scrapboxのtoken/page]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678333479,
      "updated": 1678333479
    },
    {
      "id": "64098595774b1700003c8c1d",
      "text": "　   自分のでも計算してみたい[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1678345622,
      "updated": 1678345652
    },
    {
      "id": "640c3be7aff09e0000d944c9",
      "text": "　   まあ確かに実行前におおよその見積もりが出ると安心だよね[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678523367,
      "updated": 1678523383
    },
    {
      "id": "640dcea7774b170000531b1b",
      "text": "  　　雑に[Scrapboxのjsonから文字数の分布を可視化する][基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1678626472,
      "updated": 1678626493
    },
    {
      "id": "64095535aff09e0000f4fd1e",
      "text": "\t一度ベクトルを計算してしまえば、あとはOpenAIに聞く必要はないので、API利用のためのお金もかからない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678333238,
      "updated": 1678333238
    },
    {
      "id": "640950e46eb40600004437db",
      "text": "",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1678332132,
      "updated": 1678332132
    },
    {
      "id": "64095b3faff09e0000911d3c",
      "text": "https://twitter.com/techtalkjp/status/1633669516503965696?s=20",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678334783,
      "updated": 1678346945
    },
    {
      "id": "64095b55aff09e0000911d3e",
      "text": ">[tiktoken] で数えるんですね！",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678334806,
      "updated": 1678594262
    },
    {
      "id": "64095b57aff09e0000911d3f",
      "text": "\t既存のライブラリはTop KのKが固定のものばっかりで、僕はChatGPT APIの上限いっぱいまで詰め込みたかったので自前実装にしました[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678334807,
      "updated": 1678334814
    },
    {
      "id": "64095b3faff09e0000911d3d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678334783,
      "updated": 1678334783
    },
    {
      "id": "64095c9daff09e0000d45ce4",
      "text": "チャンクの結合機能はありません、今のところつける気もありません[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335134,
      "updated": 1678336972
    },
    {
      "id": "64095cabaff09e0000d45ce6",
      "text": "　考察 from [2023/03/08]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335148,
      "updated": 1678533458
    },
    {
      "id": "64095c9faff09e0000d45ce5",
      "text": "\t [ベクトルサーチ]の[ベストマッチ]から時間軸方向にチャンクを選択するの、正しいんだろうか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335136,
      "updated": 1678335205
    },
    {
      "id": "64095ce1aff09e0000368ef5",
      "text": "  　その場合「一番関係あるところ」でスタートして、関係がだんだん減っていく流れをコンテキストとして与えることになる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335202,
      "updated": 1678335205
    },
    {
      "id": "64095ce1aff09e0000368ef6",
      "text": "  　逆では？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335202,
      "updated": 1678335205
    },
    {
      "id": "64095ce1aff09e0000368ef7",
      "text": "  　一番関係あるところで終わる流れを与えた方がいいのでは？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335202,
      "updated": 1678335205
    },
    {
      "id": "64095ce1aff09e0000368ef8",
      "text": "  　「前に読むのと後ろに読むのとどっちがいいかな？」と周囲を見て判断した方がいい？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335202,
      "updated": 1678335205
    },
    {
      "id": "64095ce1aff09e0000368ef9",
      "text": "  　理想を言うとスライドウィンドウの中で最も関連度の高いものを選ぶのが良さそうな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335202,
      "updated": 1678335205
    },
    {
      "id": "64095ce1aff09e0000368efa",
      "text": "  Scrapboxの構造を踏まえたインデックス作成について",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335202,
      "updated": 1678335260
    },
    {
      "id": "64095d13aff09e0000368efb",
      "text": "　　\t✅長いページは500トークン弱(行単位)で区切り、",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335252,
      "updated": 1678335263
    },
    {
      "id": "64095d13aff09e0000368efe",
      "text": "　　\t✅検索時に[* 同じページから複数取らないようにする]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335252,
      "updated": 1678335263
    },
    {
      "id": "64095d13aff09e0000368eff",
      "text": "　…という感じの設計思想です",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335252,
      "updated": 1678533466
    },
    {
      "id": "64095d99aff09e0000d45ce7",
      "text": "　500トークンのチャンクは50%ずつオーバーラップしている、これがスライディングウィンドウに相当する",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335390,
      "updated": 1678335433
    },
    {
      "id": "64095d21aff09e0000368f00",
      "text": "\t同じページから複数取らないようにするのは[Maximal Marginal Relevance]的な思想",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335266,
      "updated": 1678335873
    },
    {
      "id": "64095f73aff09e0000368f01",
      "text": "　　類似度が高いものばかり取って共通点が多くなったらイマイチだから、同じページからいくつも取らない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335859,
      "updated": 1678335984
    },
    {
      "id": "64095ff0aff09e0000d45cea",
      "text": "　　一つのページからはベストな500トークンだけを取り出す",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335984,
      "updated": 1678335984
    },
    {
      "id": "64095fe3aff09e0000d45ce9",
      "text": "　　AIに「関係のありそうないくつものページを読んで考える」という活動をさせている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335972,
      "updated": 1678336978
    },
    {
      "id": "64095f95aff09e0000d45ce8",
      "text": "　対象がScrapboxでない場合(例えば一冊の書籍とか)の場合には、オーバーラップしないように選んでからドキュメント内位置でソートするとかがいいかな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678335894,
      "updated": 1678337059
    },
    {
      "id": "640963d3aff09e0000d45cec",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678336980,
      "updated": 1678336980
    },
    {
      "id": "640962a8aff09e0000368f07",
      "text": "内積を使ってる点に関して[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678336681,
      "updated": 1678336706
    },
    {
      "id": "640962a0aff09e0000368f04",
      "text": "\t>OpenAI embeddings are normalized to length 1, which means that: ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678336672,
      "updated": 1678336725
    },
    {
      "id": "640962d5aff09e0000368f08",
      "text": " > Cosine similarity can be computed slightly faster using just a dot product",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678336725,
      "updated": 1678336726
    },
    {
      "id": "640962d6aff09e0000368f0a",
      "text": " > Cosine similarity and Euclidean distance will result in the identical rankings --- [doc https://platform.openai.com/docs/guides/embeddings/limitations-risks]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678336726,
      "updated": 1678336743
    },
    {
      "id": "640962a0aff09e0000368f05",
      "text": "\t\t区別する意味はない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678336673,
      "updated": 1678336679
    },
    {
      "id": "640962a0aff09e0000368f06",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678336673,
      "updated": 1678336673
    },
    {
      "id": "640dce85774b170000531b0e",
      "text": "　[https://openai.com/pricing Pricing]",
      "userId": "59fb21121207900012774b17",
      "created": 1678626437,
      "updated": 1678626437
    },
    {
      "id": "640dce85774b170000531b0f",
      "text": "  >gpt-3.5-turbo\t$0.002 / 1K tokens",
      "userId": "59fb21121207900012774b17",
      "created": 1678626437,
      "updated": 1678626437
    },
    {
      "id": "640dce85774b170000531b10",
      "text": "　　>Ada\t$0.0004 / 1K tokens",
      "userId": "59fb21121207900012774b17",
      "created": 1678626437,
      "updated": 1678626437
    },
    {
      "id": "640dce85774b170000531b11",
      "text": "   Embeddingはこっちかな？[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1678626437,
      "updated": 1678626441
    },
    {
      "id": "640dce85774b170000531b12",
      "text": "    [https://github.com/nishio/scrapbox_chatgpt_connector/blob/8c80e4b8f9aca19f7e06c7fb795aeb4103f9fa47/make_index.py#L40 ここで指定されていた]",
      "userId": "59fb21121207900012774b17",
      "created": 1678626437,
      "updated": 1678626437
    },
    {
      "id": "640dce85774b170000531b13",
      "text": "　　　Yes[nishio.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1678626437,
      "updated": 1678626437
    },
    {
      "id": "640dce8e774b170000531b14",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678626446,
      "updated": 1678697520
    },
    {
      "id": "640ee443aff09e000005553d",
      "text": " 対話的にやり取りできるようにしてみたい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678697539,
      "updated": 1678697539
    },
    {
      "id": "640ee443aff09e000005553e",
      "text": " \t[Scrapbox ChatGPT Connector対話モード]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678697539,
      "updated": 1678697539
    },
    {
      "id": "640ee443aff09e000005553f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678697539,
      "updated": 1678697539
    },
    {
      "id": "64099e5b774b1700004e6794",
      "text": "　Q&A以外が結構混じっていたので切り出した[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1678351963,
      "updated": 1678626527
    },
    {
      "id": "640dce5a774b170000531b0d",
      "text": "　　[Scrapbox ChatGPT Connectorで遊ぶ（motoso）]",
      "userId": "59fb21121207900012774b17",
      "created": 1678626395,
      "updated": 1678626520
    },
    {
      "id": "640dbed5774b170000bf37b9",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1678622422,
      "updated": 1678622422
    },
    {
      "id": "6409da56ef07ca0000d7ea1f",
      "text": "[fumito.icon]",
      "userId": "5e11de5979b9010017ef07ca",
      "created": 1678367319,
      "updated": 1678367319
    },
    {
      "id": "6409da57ef07ca0000d7ea20",
      "text": "\t試してみた (Windows環境)",
      "userId": "5e11de5979b9010017ef07ca",
      "created": 1678367320,
      "updated": 1678367388
    },
    {
      "id": "6409da5fef07ca0000d7ea22",
      "text": "\t\tPythonを入れてなかったのでインストールから",
      "userId": "5e11de5979b9010017ef07ca",
      "created": 1678367327,
      "updated": 1678367629
    },
    {
      "id": "6409daa0ef07ca0000d7ea24",
      "text": "\t\t\thttps://www.python.org/",
      "userId": "5e11de5979b9010017ef07ca",
      "created": 1678367393,
      "updated": 1678367394
    },
    {
      "id": "640ea06faff09e000098db7b",
      "text": "\t\t[fixed: WindowsでUnicodeDecodeError(Scrapbox ChatGPT Connector)]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678680176,
      "updated": 1678680215
    },
    {
      "id": "6409dd6aef07ca0000d7ea31",
      "text": "\t\tインデックスができるまで待機中",
      "userId": "5e11de5979b9010017ef07ca",
      "created": 1678368107,
      "updated": 1678368261
    },
    {
      "id": "6409e07eef07ca0000d7ea33",
      "text": "\t\t\t終わっていた",
      "userId": "5e11de5979b9010017ef07ca",
      "created": 1678368894,
      "updated": 1678368947
    },
    {
      "id": "6409e0a8ef07ca0000d7ea35",
      "text": "\t\tうまく動いた",
      "userId": "5e11de5979b9010017ef07ca",
      "created": 1678368936,
      "updated": 1678368940
    },
    {
      "id": "6409e0d0ef07ca0000d7ea37",
      "text": "\t\t\tめちゃくちゃ楽しいな......",
      "userId": "5e11de5979b9010017ef07ca",
      "created": 1678368976,
      "updated": 1678369594
    },
    {
      "id": "6409dd46ef07ca0000d7ea30",
      "text": "",
      "userId": "5e11de5979b9010017ef07ca",
      "created": 1678368070,
      "updated": 1678368070
    },
    {
      "id": "641aa550aff09e000035e39f",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679467857,
      "updated": 1679467865
    },
    {
      "id": "640d5242aff09e000047eb3e",
      "text": "[Scrapbox ChatGPT Connector(tkgshn)]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594629,
      "updated": 1678594629
    },
    {
      "id": "640d520baff09e000047eb30",
      "text": "\tこれって毎回、ask.pyを編集しててるけどそれよりいい方法あります？[tkgshn.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594574,
      "updated": 1678594630
    },
    {
      "id": "640d520baff09e000047eb31",
      "text": "\t\t少し改造して`a (質問文)`で呼び出せるようにしてました [Scrapbox ChatGPT Connector試す(sta)#640ab6b079d3a90000415325] [Scrapbox ChatGPT Connector試す(sta)#640ab8ad79d3a9000041535c][sta.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594574,
      "updated": 1678594630
    },
    {
      "id": "640d520baff09e000047eb32",
      "text": "　　「いい方法」はニーズによって決まるので、例えば上記のような方法が使いやすいならそうしてもいい[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594574,
      "updated": 1678594630
    },
    {
      "id": "640d520baff09e000047eb33",
      "text": "　　 僕はVSCodeの画面分割でコードとターミナルが一画面に並んでる状態にしてる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594574,
      "updated": 1678594630
    },
    {
      "id": "640d520baff09e000047eb34",
      "text": "　　 ターミナルのコマンド引数で質問文を取るスタイルだとこういう複数行の入力が試しづらくなると思う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594574,
      "updated": 1678594630
    },
    {
      "id": "640d520baff09e000047eb35",
      "text": "　　　 [https://gyazo.com/a0a062c392cd4ade4a0cf21a2ba0534e]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594574,
      "updated": 1678594630
    },
    {
      "id": "640d520baff09e000047eb36",
      "text": "　　サーバを用意するのが面倒でなければUserScriptで呼び出せるAPIを作ると良いと思う[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594574,
      "updated": 1678594630
    },
    {
      "id": "640d5266aff09e000047eb3f",
      "text": "   UserScriptの案",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594665,
      "updated": 1678594667
    },
    {
      "id": "640d5267aff09e000047eb40",
      "text": "   \t[ベクトルサーチでリンク補完]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594665,
      "updated": 1678594667
    },
    {
      "id": "640d520baff09e000047eb37",
      "text": "　　 Herokuの無料枠がなくなった的な話を聞いたけど今だと何がいいのかな？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594574,
      "updated": 1678594630
    },
    {
      "id": "640d520baff09e000047eb38",
      "text": "　　 [railway]とか？[yuyasurarin.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594574,
      "updated": 1678594630
    },
    {
      "id": "640d533b6eb4060000be47fa",
      "text": "　　 See: [Heroku無料枠廃止][inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1678594874,
      "updated": 1678594904
    },
    {
      "id": "640d533c6eb4060000be47fb",
      "text": "　　 \t[fly.io]をちょっと使ってる[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1678594876,
      "updated": 1678594885
    },
    {
      "id": "640d520baff09e000047eb39",
      "text": "　　[Jupyter notebook]?[yosider.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594574,
      "updated": 1678594630
    },
    {
      "id": "640d520baff09e000047eb3a",
      "text": "　　この件、UserScriptにAPIサーバの情報を書いてしまうと誰でも呼び出せてしまうと気づいた[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594574,
      "updated": 1678594630
    },
    {
      "id": "640d520baff09e000047eb3b",
      "text": "　　　APIサーバをローカルで建てるか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594574,
      "updated": 1678594630
    },
    {
      "id": "641095e6aff09e0000512dd4",
      "text": "　　　そんなことをしなくてもAPIキーをlocalstorageに入れれば良い",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678808551,
      "updated": 1678808570
    },
    {
      "id": "641095faaff09e0000512dd5",
      "text": "　　　しかしそれ以外の問題がたくさんあった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678808570,
      "updated": 1678808586
    },
    {
      "id": "641094cfaff09e0000512dd3",
      "text": "　　　→[AskChatGPT]作った(バニラChatGPT用)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678808272,
      "updated": 1678808532
    },
    {
      "id": "640d5228aff09e000047eb3d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594603,
      "updated": 1678594603
    },
    {
      "id": "640d520faff09e000047eb3c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594578,
      "updated": 1678594627
    },
    {
      "id": "6409ea2faff09e0000b07f9e",
      "text": "[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678371375,
      "updated": 1678412103
    },
    {
      "id": "640a8a1279e113000080dde5",
      "text": "自分が書いていないことを新しく考えさせたい[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678412307,
      "updated": 1678412318
    },
    {
      "id": "640a894679e113000080dddb",
      "text": "　>ANSWER:",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678412103,
      "updated": 1678412107
    },
    {
      "id": "640a894a79e113000080dddc",
      "text": " > >>>> ParallelTalkというプロダクトの概要を説明した上で、より独創的なプロダクト名を10個挙げてください。",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678412107,
      "updated": 1678412107
    },
    {
      "id": "640a894a79e113000080dddd",
      "text": " > > ParallelTalkは、非ターン制の音声コミュニケーションツールであり、将来的には様々なメディアの半同期的コミュニケーションを目指している。独創的なプロダクト名の例：1. SyncSphere 2. TimeWarp 3. CoSync 4. MetaComm 5. FlowTalk 6. Synapse 7. TimeBlend 8. MindMeld 9. SyncHive 10. TimeEcho",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678412107,
      "updated": 1678412107
    },
    {
      "id": "6409ea12aff09e0000b07f9c",
      "text": "　　いくつか普通に好きなのあるな[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678371346,
      "updated": 1678412209
    },
    {
      "id": "640a896b79e113000080dddf",
      "text": " >ANSWER:",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678412140,
      "updated": 1678412140
    },
    {
      "id": "640a896c79e113000080dde0",
      "text": " > >>>> ParallelTalkというプロダクトの概要を説明した上で、プロダクトの課題を挙げてください。",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678412140,
      "updated": 1678412140
    },
    {
      "id": "640a896c79e113000080dde1",
      "text": " > > ParallelTalkは、時間を超越した存在のためのコミュニケーションツールであり、同期と非同期の間にある時間共有のあり方を目指している。課題としては、コミュニケーションが本当に成立するかどうか不明であり、実装方法や音声配信などの技術的な問題もある。また、時間軸のannotationが必要であり、人間の労働力と自然言語処理の両方が必要とされている。",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678412140,
      "updated": 1678412140
    },
    {
      "id": "640a897f79e113000080dde3",
      "text": "  回答は完璧だけど、全部自分が考えたこと[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678412159,
      "updated": 1678412174
    },
    {
      "id": "640a898579e113000080dde4",
      "text": "  新しく考えさせるにはどうすれば良いのだろう",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678412165,
      "updated": 1678412326
    },
    {
      "id": "640a8a2679e113000080dde6",
      "text": "   Promptいじくり回していればできそう",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678412328,
      "updated": 1678412331
    },
    {
      "id": "640a8cf4aff09e00001c94b9",
      "text": "  AIクオリアさんでは「Say your opinion」ってやってる[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413045,
      "updated": 1678413091
    },
    {
      "id": "640b46f579e1130000442b2b",
      "text": "   「Aiは自分の意見持てないので無理」と言ってくるので、これを突破する必要がありそう[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678460661,
      "updated": 1678460697
    },
    {
      "id": "640b474eaff09e0000f003eb",
      "text": "   あー、そうなんだ、クオリアさんでそんなことになったことがない[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678460751,
      "updated": 1678460767
    },
    {
      "id": "640b475faff09e0000f003ec",
      "text": "    「あなたは何々です」の役割指定が機能してるのか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678460768,
      "updated": 1678460783
    },
    {
      "id": "640c43fcaff09e0000d944cd",
      "text": "   ある質問に対してthe text does not provide a specific answer to this questionばっかり言う[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678525436,
      "updated": 1678525523
    },
    {
      "id": "640c4454aff09e0000d944d0",
      "text": "    ハルシネーション対策でAIが想像でものを書かないようにチューニングされて、想像力を失ってしまったのか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678525524,
      "updated": 1678525569
    },
    {
      "id": "640c4483aff09e0000d944d1",
      "text": "    「もっと自由に書け」ってパラメータが欲しいなぁ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678525572,
      "updated": 1678525587
    },
    {
      "id": "640b488a79e1130000497d8c",
      "text": " 2 stepでやらせたら出来た[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678461066,
      "updated": 1678461067
    },
    {
      "id": "640b486b79e1130000497d86",
      "text": "  > >>>> 1. Summarize issue about ParallelTalk. 2. Think and explain issues of ParallelTalk not written in the text. Say something unique, not only cliches.",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678461036,
      "updated": 1678461069
    },
    {
      "id": "640b487179e1130000497d87",
      "text": "   「最初に文章に書かれていることを言わせて、その後にそれ以外の事を言わせる」のが上手くいった[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678461042,
      "updated": 1678594364
    },
    {
      "id": "640a897d79e113000080dde2",
      "text": "  >ANSWER:",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678412157,
      "updated": 1678461069
    },
    {
      "id": "640b484979e1130000497d83",
      "text": "  > 1. The issue with ParallelTalk is the need to create an interface that allows for semi-synchronous communication using elastic synchronization and annotations on a virtual timeline. The goal is to create an environment where pseudo-synchronous and synchronous communication can coexist. The implementation of this interface is still uncertain, and there are concerns about smooth branch branching and the ability to add audio later. The text also mentions previous research on computer-mediated communication and the use of CRDTs to address conflicts in parallel communication.",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678461001,
      "updated": 1678461069
    },
    {
      "id": "640b484979e1130000497d84",
      "text": "  > 2. One potential issue with ParallelTalk could be the difficulty in achieving a balance between synchronous and pseudo-synchronous communication. It may be challenging to create an interface that allows for both types of communication to coexist without causing confusion or frustration for users. Additionally, there may be concerns about the privacy and security of the communication, especially if it involves sensitive or confidential information. Another issue could be the potential for miscommunication or misunderstandings due to the lack of nonverbal cues in virtual communication.",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678461001,
      "updated": 1678461069
    },
    {
      "id": "640b47e079e1130000497d75",
      "text": "　　　おお、これは普通に良いこと言ってるな[blu3mo.icon]",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678460896,
      "updated": 1678461111
    },
    {
      "id": "640b48ad79e1130000497d8e",
      "text": "　　　　自分が書いたことがないことを言い出しているので、普通に有益だ",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678461102,
      "updated": 1678461131
    },
    {
      "id": "640b48a179e1130000497d8d",
      "text": "",
      "userId": "5d89b1f60230ae001779e113",
      "created": 1678461089,
      "updated": 1678461089
    },
    {
      "id": "640aa51a79d3a90000c85660",
      "text": "[sta.icon]",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1678419227,
      "updated": 1678419227
    },
    {
      "id": "640aa51b79d3a90000c85661",
      "text": "\t[Scrapbox ChatGPT Connector試す(sta)]",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1678419227,
      "updated": 1678419241
    },
    {
      "id": "640aa51979d3a90000c8565f",
      "text": "",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1678419226,
      "updated": 1678419226
    },
    {
      "id": "640a8aadaff09e0000ec5534",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678412461,
      "updated": 1678594656
    },
    {
      "id": "640a9017aff09e0000ec553f",
      "text": "[** 仕組み解説]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413848,
      "updated": 1678413860
    },
    {
      "id": "640a9019aff09e0000ec5540",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413849,
      "updated": 1678413849
    },
    {
      "id": "640a9039aff09e0000ec5541",
      "text": "[/sta/俺のScrapboxをChatGPTに入れたい]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5542",
      "text": "\t>全くわからない。「埋め込みベクトル」「クエリー」「ベクトル」「ベクトル検索」あたり",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5543",
      "text": "\t描いた[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5544",
      "text": "\t\t\tたすかります[sta.icon][sta.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5545",
      "text": "\t\t[https://gyazo.com/2771fdb01ea77aa72adfa69290efbed7]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5546",
      "text": "\t\t　テキストをベクトルで表現したものが[埋め込みベクトル]かな？[基素.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5547",
      "text": "\t\t　　[https://qiita.com/Hironsan/items/8f7d35f0a36e0f99752c いますぐ使える単語埋め込みベクトルのリスト - Qiita]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5548",
      "text": "\t\t　　[https://ja.wikipedia.org/wiki/単語の埋め込み 単語の埋め込み - Wikipedia]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5549",
      "text": "\t\t　　 >自然言語処理（NLP）における一連の言語モデリングおよび特徴学習手法の総称であり、単語や語句が実ベクトル空間上に位置づけられる。単語の数だけの次元を持つ空間から、はるかに低い次元を持つ連続ベクトル空間へと数学的な埋め込みが行われる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec554a",
      "text": "\t\t　　 そう。1トークン1万種類くらいあるので、8000トークンの文字列は8000万次元空間の点とみなせるわけだが、これをたった1000次元程度の空間にギュッと詰め込んでしまうのが「埋め込み」",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec554b",
      "text": "\t\t自分も理解できてないので図を見てふわっと考えてみる[inajob.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec554c",
      "text": "\t\t\t質問だけだとChatGPTはあまりその内容を理解してくれないのでそれを補強しようという試み？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec554d",
      "text": "\t\t\tどう補強するかと言うと、短い質問を膨らませた上でChatGPTに問い合わせる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec554e",
      "text": "\t\t\tどう膨らませると言うとあるScrapboxプロジェクトに記載された文書で、今回の質問と類似したものも一緒に質問とする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec554f",
      "text": "\t\t\t合ってるのだろうか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5550",
      "text": "\t\t\t「あまり内容を理解してくれない」というよりも、知ってて欲しいことを知らない[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5551",
      "text": "    ChatGPTの学習時に使われていないデータを参考資料としてプロンプトに含めることで「これを読んで答えて」ができる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5552",
      "text": "    そうするとChatGPTにできない下記のデータを参考にしたやり取りができる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5553",
      "text": "    　学習時に存在しなかった最新の情報",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5554",
      "text": "    　電子書籍などの著作権的にインターネット上でアクセス可能にできないデータ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5555",
      "text": "    　グループウェアの中の顧客コンタクト履歴のデータなど社外に公開できないもの",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5556",
      "text": "    [/nishio/自分のScrapboxをChatGPTにつないだ]でKozanebaの質問を例にしているのは、ChatGPTの学習データにKozanebaの話が含まれてないから",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5557",
      "text": "    なるほど[inajob.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5558",
      "text": "  「この質問に回答してください。なお、回答の生成に利用するデータに、このScrapboxの内容も含んで良いです」といったことをやっているのか[fumito.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5559",
      "text": "  似てる順Textが用意できるならOpenAPIを利用せずとも似たような仕組みが作れるということだろうか？[inajob.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec555a",
      "text": "  \t意味を加味したテキスト類似度を出すのって大変だろうからOpenAPIを使うのは妥当だとは思いつつ、理解のために質問",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec555b",
      "text": "　　　できる[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec555c",
      "text": "　　　 「似てる順」である必然性はないので、例えばScrapboxのURLを渡して「このページと関連リンクのページを更新順に読んで」でもいい",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec555d",
      "text": "　　　 そうすると人間がScrapboxのリンクによって明示した「関連」を使って参考にする文章を選ぶようになる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec555e",
      "text": "　　　 [英語ブログの要約RSS生成の仕組み]に関連した話だと、例えばRSSの新着全部がChatGPTの4000トークンに収まるなら、全部を読ませて「最近何がホットな話題？」とか聞くことができるけど、4000トークンを超えてくると何らかの方法で選抜することが必要になる。この選抜の方法はいろいろあり得るけど、その一つの方法として埋め込みベクトルの類似度を使う方法があるというだけの話",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec555f",
      "text": "　　　 　「埋め込みベクトルの類似度を使う」はテキストの情報しか使わないのでテキストならなんでも使える、対象のデータ構造の知識があればもっと工夫のしようがある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5560",
      "text": "　　　 [埋め込みベクトル]の計算がOpenAIのものである必要性は皆無",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5561",
      "text": "　　　 　対象テキストが日本語であるなら、日本語の得意なモデルを使うのもあり",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9039aff09e0000ec5562",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413881,
      "updated": 1678413881
    },
    {
      "id": "640a9066aff09e0000ec556c",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413927,
      "updated": 1678413927
    },
    {
      "id": "640a9066aff09e0000ec556d",
      "text": ">「似てる順」である必然性はないので、例えばScrapboxのURLを渡して「このページと関連リンクのページを更新順に読んで」でもいい [Scrapbox ChatGPT Connector#64094fffaff09e0000466ff7]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413927,
      "updated": 1678413927
    },
    {
      "id": "640a9066aff09e0000ec556e",
      "text": "\tこれはプロンプトを相当工夫しなきゃいけない、ということですか？[sta.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413927,
      "updated": 1678413927
    },
    {
      "id": "640a9066aff09e0000ec556f",
      "text": "\tたとえば",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413927,
      "updated": 1678413927
    },
    {
      "id": "640a9066aff09e0000ec5570",
      "text": "\t\t「今与えたjsonファイルの仕様を説明します。pagesにpageという概念がn件入っています。pageという概念は……」「Scrapboxでは`[]`で囲った文字列をリンクとして扱います。リンクとは……」みたいな感じで読み方を説明していく",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413927,
      "updated": 1678413927
    },
    {
      "id": "640a9066aff09e0000ec5571",
      "text": "\t\tScrapboxのjsonを解析するコードを与えた上で、「このコードから、今与えたjsonファイルの仕様を理解しなさい」みたいな命令を与える etc",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413927,
      "updated": 1678413927
    },
    {
      "id": "640a9066aff09e0000ec5572",
      "text": "　そもそもChatGPTは4000トークンしか読めないのでScrapboxからエクスポートしたJSONを直接読ませることは不可能[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413927,
      "updated": 1678413927
    },
    {
      "id": "640a9066aff09e0000ec5573",
      "text": "　　プロンプトで頑張るのではなく、Pythonとかで「読む対象を選ぶコード」を書いて、選んでからChatGPTに渡す必要がある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413927,
      "updated": 1678413927
    },
    {
      "id": "640a9066aff09e0000ec5574",
      "text": "　　なるほど！[sta.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413927,
      "updated": 1678413927
    },
    {
      "id": "640a9066aff09e0000ec5575",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413927,
      "updated": 1678413927
    },
    {
      "id": "640a9049aff09e0000ec5563",
      "text": "[/sta/Scrapbox ChatGPT Connector#640986d079d3a90000bde205]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413897,
      "updated": 1678413897
    },
    {
      "id": "640a9049aff09e0000ec5564",
      "text": "\tOpenAIが提供しているAPIの中にEmbedding APIと、ChatGPT APIがある[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413897,
      "updated": 1678413897
    },
    {
      "id": "640a9049aff09e0000ec5565",
      "text": "\t　そこの区別が曖昧なせいで混乱したのだと思う",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413897,
      "updated": 1678413897
    },
    {
      "id": "640a97a379d3a900000d6c71",
      "text": "\t　\tこれでした。二つあったのか[sta.icon]",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1678415780,
      "updated": 1678415790
    },
    {
      "id": "640a9049aff09e0000ec5566",
      "text": "\t　[\" OpenAI APIの仕様が「埋め込みベクトルのみ受け付けられる」になっている] はFalse",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413897,
      "updated": 1678413897
    },
    {
      "id": "640a9049aff09e0000ec5567",
      "text": "　　どっちのAPIも自然言語しか受け取らない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413897,
      "updated": 1678413897
    },
    {
      "id": "640a9049aff09e0000ec5568",
      "text": "\t\t>「俺のsta.json 26MBを全部与える」ことはできるのか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413897,
      "updated": 1678413897
    },
    {
      "id": "640a9049aff09e0000ec5569",
      "text": "　　　小分けにしてEmbedding APIに全部与える",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413897,
      "updated": 1678413897
    },
    {
      "id": "640a9049aff09e0000ec556a",
      "text": "　　　この結果を使って26MBの中から厳選したものをChatGPT APIに与える",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413897,
      "updated": 1678413897
    },
    {
      "id": "640a9049aff09e0000ec556b",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678413897,
      "updated": 1678413897
    },
    {
      "id": "640d2011aff09e00007fcffe",
      "text": "https://twitter.com/nishio/status/1634593870104363010?s=46&t=gkSZtjGEtUZPO0JCzBxCBw",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678581777,
      "updated": 1678581782
    },
    {
      "id": "640d52a7aff09e000047eb5e",
      "text": "(mizchi)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594730,
      "updated": 1678594733
    },
    {
      "id": "640d2016aff09e00007fd000",
      "text": " chatgpt に任意のドキュメントを調べさせる方法、これで理解あってる？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678581783,
      "updated": 1678594716
    },
    {
      "id": "640d528aaff09e000047eb43",
      "text": "  事前に関連資料群を embedding APIで検索ベクトル化",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594701,
      "updated": 1678594716
    },
    {
      "id": "640d528aaff09e000047eb44",
      "text": "  プロンプトも一旦検索ベクトル化して↑の文書群とのコサイン類似度で近いものを列挙",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594701,
      "updated": 1678594716
    },
    {
      "id": "640d528aaff09e000047eb45",
      "text": "  最終的なプロンプトとして関連ドキュメントをテキストとして埋め込んで実行",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594701,
      "updated": 1678594716
    },
    {
      "id": "640d528aaff09e000047eb46",
      "text": " (自分の最初の理解だった)検索エンジン作るのと何が違うかというと、word2vec 的な？検索ベクトル作る作業を OpenAI のモデル側で行ってて、自分で検索エンジン作るのと違って、文書の発見はそのコサイン類似度を使えばいいと最初から手段が示されてる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594701,
      "updated": 1678594716
    },
    {
      "id": "640d528aaff09e000047eb49",
      "text": " ただそれらすべて8192トークン内で済ませるテクニックみたいなもので、今変なテクニックを頑張って覚えなくても有料APIの拡充等で普通にやれそうな気配もあるな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594701,
      "updated": 1678594716
    },
    {
      "id": "640d2011aff09e00007fcfff",
      "text": "(nishio)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678581777,
      "updated": 1678594736
    },
    {
      "id": "640d52aeaff09e000047eb5f",
      "text": "\t検索がベクトル検索であるかどうかはChatGPTと無関係なので「手前に検索エンジン作る」の理解で良いように思う。例えば社内に顧客とのコンタクト履歴DBがある場合に、顧客IDで検索してプロンプトに積めばChatGPTは過去のコンタクト履歴を踏まえた回答ができるようになる。本質的にはそういう仕組み",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594736,
      "updated": 1678594737
    },
    {
      "id": "640d52b8aff09e000047eb60",
      "text": "\tベクトル検索は文字列の完全一致で検索する従来の検索と違って表記揺れなどに強いなどの特徴がある「新しい検索」で、それ自体が独立でChatGPTと無関係に価値のある技術。",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594747,
      "updated": 1678594747
    },
    {
      "id": "640d7a6c774b170000501dc7",
      "text": "\t これは未来の普通かな[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1678604908,
      "updated": 1678604982
    },
    {
      "id": "640d52b8aff09e000047eb61",
      "text": "\tこの記事が2019年だから埋め込みベクトルの類似度に基づく検索がChatGPTのためのハックではなくChatGPTより前からある技術だということは明らか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594747,
      "updated": 1678594755
    },
    {
      "id": "640d52c0aff09e000047eb62",
      "text": "\t\t[Elasticsearchのベクトルフィールドをテキスト類似性検索に活用する | Elastic Blog https://www.elastic.co/jp/blog/text-similarity-search-with-vectors-in-elasticsearch]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594755,
      "updated": 1678594767
    },
    {
      "id": "6412b9c7385a920000806e5b",
      "text": " 　てっきり、ベクトルそのままChatGPTにわたすのかと思ってたが違うのか[miyamonz.icon]",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1678948808,
      "updated": 1678948834
    },
    {
      "id": "6412b9e2385a920000806e5c",
      "text": "　　　そう考えると、どちらかというとChatGPT側のほうが、前段の検索結果のテキストから欲しい内容を説明させるグルーコード（コード？）的な役割だな",
      "userId": "5953adab7aa58a0011385a92",
      "created": 1678948834,
      "updated": 1678948883
    },
    {
      "id": "640d529aaff09e000047eb5d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678594717,
      "updated": 1678594717
    },
    {
      "id": "640c5840aff09e00005d9663",
      "text": "体験談",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678530624,
      "updated": 1678530628
    },
    {
      "id": "640c55d1aff09e00005d9661",
      "text": " https://twitter.com/0xtkgshn/status/1634265541287223297",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678530002,
      "updated": 1678530800
    },
    {
      "id": "640c55d2aff09e00005d9662",
      "text": " https://twitter.com/daizplus/status/1634345629240422406",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678530002,
      "updated": 1678530800
    },
    {
      "id": "640c584daff09e00005d9665",
      "text": " https://twitter.com/9Satoooh/status/1634278212154064896",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678530637,
      "updated": 1678530800
    },
    {
      "id": "640c584caff09e00005d9664",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678530637,
      "updated": 1678530637
    },
    {
      "id": "640c586daff09e00005d9666",
      "text": "別の実装",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678530669,
      "updated": 1679034332
    },
    {
      "id": "640c5873aff09e00005d9668",
      "text": "\t[自分のはてなブログをChat GPTにつないだ - hitode909の日記 https://blog.sushi.money/entry/2023/03/10/190000]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678530675,
      "updated": 1678530797
    },
    {
      "id": "64143223aff09e0000d48a55",
      "text": "\t[https://zenn.dev/kentarok/articles/a99e51079a8071 ChatWP: WordPressをAI化しておしゃべりする]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679045155,
      "updated": 1679045159
    },
    {
      "id": "641407e3aff09e00002816aa",
      "text": "\tDiscord",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679034339,
      "updated": 1679034344
    },
    {
      "id": "640c5873aff09e00005d9669",
      "text": " 　https://twitter.com/sizumita/status/1636601574075301889?s=46&t=gkSZtjGEtUZPO0JCzBxCBw",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678530676,
      "updated": 1679034346
    },
    {
      "id": "641407e1aff09e00002816a9",
      "text": "\t\t[https://zenn.dev/sizumita/scraps/44c6af06eadb27 自分のDiscordの過去メッセージをChatGPTに読み込ませる]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679034337,
      "updated": 1679045177
    },
    {
      "id": "64143238aff09e0000d48a57",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679045177,
      "updated": 1679045178
    },
    {
      "id": "640c58e7aff09e00005d966a",
      "text": "関連話題",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678530792,
      "updated": 1679034326
    },
    {
      "id": "640c58eaaff09e00005d966b",
      "text": "\t[Scrapboxの文章はLLMにも読みやすいのでは]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678530795,
      "updated": 1678530795
    },
    {
      "id": "640c5873aff09e00005d9667",
      "text": "\t[ScrapboxはLLMに食わせるデータ形式として適しているか？]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678530675,
      "updated": 1678548940
    },
    {
      "id": "640c9fcbaff09e0000aecd5d",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1678548940,
      "updated": 1678548940
    },
    {
      "id": "64157398aff09e00001a22d0",
      "text": "from [2023/03/15]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679127449,
      "updated": 1679127449
    },
    {
      "id": "64157398aff09e00001a22d1",
      "text": "Scrapbox ChatGPT Connector",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679127449,
      "updated": 1679127449
    },
    {
      "id": "64157398aff09e00001a22d2",
      "text": "過去のブログとかTwitterとかも全部ChatGPTに食わせたいなと思ったけどScrapboxにぶちこめばいいのか",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679127449,
      "updated": 1679127449
    },
    {
      "id": "64157398aff09e00001a22d3",
      "text": "\t(ver.1)これを呼ぶたびに追加されるだけなのでScrapboxを介さずに直接追加してもいいよ [Github https://github.com/nishio/scrapbox_chatgpt_connector/blob/main/make_index.py#L64][nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679127449,
      "updated": 1679472095
    },
    {
      "id": "64157398aff09e00001a22d4",
      "text": "　なるほど[mtane0412.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679127449,
      "updated": 1679127449
    },
    {
      "id": "64157398aff09e00001a22d5",
      "text": "\tver.2でわかりやすくしておいた [https://github.com/nishio/scrapbox_chatgpt_connector/blob/main/make_index.py#L100 add_record]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679127449,
      "updated": 1679467969
    },
    {
      "id": "641aa571aff09e000035e3a1",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679467890,
      "updated": 1679467890
    },
    {
      "id": "641aa571aff09e000035e3a2",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679467890,
      "updated": 1679467890
    },
    {
      "id": "641aa572aff09e000035e3a3",
      "text": "[Scrapbox ChatGPT Connector(ver.1)]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679467890,
      "updated": 1679467890
    },
    {
      "id": "641aa572aff09e000035e3a4",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1679467890,
      "updated": 1679467890
    }
  ]
}