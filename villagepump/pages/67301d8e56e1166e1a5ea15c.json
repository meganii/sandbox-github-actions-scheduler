{
  "id": "67301d8e56e1166e1a5ea15c",
  "title": "最強のTODOアプリ作りたくなったので、久々に土日はプログラム書くだけの日にする",
  "created": 1731206543,
  "updated": 1731206592,
  "lines": [
    {
      "id": "67301d8e56e1166e1a5ea15c",
      "text": "最強のTODOアプリ作りたくなったので、久々に土日はプログラム書くだけの日にする",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206550
    },
    {
      "id": "67301d8e71b3c20000b4329a",
      "text": "from [2023/07/14]([biwa.icon]の日記)",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206592
    },
    {
      "id": "67301d8e71b3c20000b4329b",
      "text": "[() 最強のTODOアプリ]作りたくなったので、久々に土日はプログラム書くだけの日にする",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b4329c",
      "text": " とりあえずReactでパパッと作ろうかな。そんなに詳しいわけではないけど、まあいけるでしょ。",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b4329d",
      "text": " Reactの状態管理のライブラリとか何使えばいいんだろ。",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b4329e",
      "text": " \t過去にそんな話をした[inajob.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b4329f",
      "text": " \t\t[Reduxは使われない流れなのか]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432a0",
      "text": " \t\t\t結論出てない",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432a1",
      "text": " [ScrapBubble]や[scrapbox-select-suggestion]はhooks onlyで頑張ってる[takker.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432a2",
      "text": "  まともな設計かどうかは不明。だれか良さげな設計を教えてほしい",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432a3",
      "text": "\t[Gyazzみたいなエディタ作りでReact.jsを学ぶ]もhooks only[inajob.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432a4",
      "text": "\thooks onlyで始めて「困ったな」と思う時って「[自明でないコンポーネント間の通信が必要になった時]」だと思う[nishio.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432a5",
      "text": "\t そういう時にアドホックに通信を作ると混乱するから[メディエイターパターン]で一箇所にまとめる的なイメージで[ReactN]を導入してる",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432a6",
      "text": "\t [自明でないコンポーネント間の通信が必要になった時]がイメージできなかった[takker.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432a7",
      "text": "\t  必要になったコード例を見るのが早そう",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432a8",
      "text": "\t 「困ったな」と思ったことはたくさんあるが、それがこの状況と同じなのかどうかを知りたい",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432a9",
      "text": "\t 例: コンポーネントのヒエラルキーの上下関係にないものがやり取りをする場合",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432aa",
      "text": "\t 　メニューアイテムをクリックしたら、サイドバーの中の個別アイテムが変化する的なやつ",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432ab",
      "text": "\t 　コンポーネント階層",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432ac",
      "text": "\t 　　メニュー",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432ad",
      "text": "\t 　　　メニューアイテムX",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432ae",
      "text": "\t 　　コンテンツ",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432af",
      "text": "\t 　　　サイドバー",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432b0",
      "text": "\t 　　　　サイドバーアイテムY",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432b1",
      "text": "\t 　XとYが通信する時にどうするか",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432b2",
      "text": "\t 　こういう時に「よしYにイベントリスナーを生やしてXからイベントを投げよう」とかやると数が増えたり実はその情報を欲しいコンポーネントZが別の場所にもあることが判明したりした時にカオスが生まれる",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432b3",
      "text": "\t 　この場合、「階層関係にない」ことが「自明でない」ということか[takker.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432b4",
      "text": "\t 　メニューとコンテンツの親から流し込む方法もあるけど、[propsバケツリレー]になって悲惨なことになるし(2,3敗)、確かにglobalに持たせるのが便利そう",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432b5",
      "text": "\t PreactNはないが、ReactN相当のことができそうな[@preact/signals]がある[takker.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432b6",
      "text": "\t  これを今度使ってみよう",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432b7",
      "text": "\t  signalsは[SolidJS]の仕組みを転用したもの",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432b8",
      "text": "\t  [@preact/signals]はReactでも使える",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432b9",
      "text": "\tとりあえずhooks onlyでやって、困ったら導入する感じでいいかな[biwa.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432ba",
      "text": "\t 後からうわーってなるやつ",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432bb",
      "text": "\t [2回作るつもりでラフにダーッとやる]のが好き[inajob.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432bc",
      "text": "[カフェイン]飲むと貧乏ゆすりしたり、机叩いたりするな",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432bd",
      "text": " いずれ机が疲労破壊しそう(適当)[takker.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    },
    {
      "id": "67301d8e71b3c20000b432be",
      "text": "",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1731206543,
      "updated": 1731206543
    }
  ]
}