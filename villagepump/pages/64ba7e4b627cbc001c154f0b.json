{
  "id": "64ba7e4b627cbc001c154f0b",
  "title": "充足可能性問題",
  "created": 1689943638,
  "updated": 1689948025,
  "lines": [
    {
      "id": "64ba7e4b627cbc001c154f0b",
      "text": "充足可能性問題",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689943638,
      "updated": 1689943638
    },
    {
      "id": "64ba7e57ed60e60000130041",
      "text": "Boolean Satisfability 略して SAT",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689943639,
      "updated": 1689943651
    },
    {
      "id": "64ba7e66ed60e60000130043",
      "text": "\t試験の SAT と被るのでググるのに苦労しがち",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689943653,
      "updated": 1689943670
    },
    {
      "id": "64ba7e78ed60e60000130044",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689943671,
      "updated": 1689943672
    },
    {
      "id": "64ba7e79ed60e60000130045",
      "text": "与えられた bool 論理式を True にする変数割当は存在するか？という問題",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689943672,
      "updated": 1689943727
    },
    {
      "id": "64ba7eb7ed60e60000130046",
      "text": "例",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689943734,
      "updated": 1689943737
    },
    {
      "id": "64ba7ebaed60e60000130047",
      "text": "\t[$ a\\lor b]は[$ (a,b)=(\\rm{True}, \\rm{False})]の時に[$ \\rm True]なので充足可能",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689943737,
      "updated": 1689943826
    },
    {
      "id": "64ba7f16ed60e60000130048",
      "text": "\t[$ a\\land\\lnot a]は何を割り当てても [$ \\rm{False}] なので充足不能",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689943829,
      "updated": 1689943876
    },
    {
      "id": "64ba8161ed60e60000130050",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689944416,
      "updated": 1689944416
    },
    {
      "id": "64ba8169ed60e60000130051",
      "text": "難しい問題の代表例",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689944425,
      "updated": 1689944444
    },
    {
      "id": "64ba816aed60e60000130052",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689944425,
      "updated": 1689944425
    },
    {
      "id": "64ba7f47ed60e60000130049",
      "text": "[NP完全]性が証明された初めての問題 ([https://en.wikipedia.org/wiki/Cook-Levin_theorem Cook-Levin theorem])",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689943878,
      "updated": 1689944462
    },
    {
      "id": "64ba7f60ed60e6000013004b",
      "text": "証明方法は、[非決定的チューリングマシン] のルールと動作を論理式で再現するというドストレートなもの",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689943904,
      "updated": 1689943968
    },
    {
      "id": "64ba7f4ced60e6000013004a",
      "text": "\t各時刻の状態やテープの各セルに対応する変数をチューリングマシンのルールで制約する",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689943883,
      "updated": 1689944343
    },
    {
      "id": "64ba8119ed60e6000013004d",
      "text": "\t\t充足可能な場合はその時の変数の値が、各時刻の状態やテープの各セルの値ということになる",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689944344,
      "updated": 1689944388
    },
    {
      "id": "64ba8066ed60e6000013004c",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689944165,
      "updated": 1689944165
    },
    {
      "id": "64ba8efced60e60000130072",
      "text": "任意の論理式を [CNF] に多項式時間で変換でき、 [CNF] の方が扱いやすい",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689947899,
      "updated": 1689948016
    },
    {
      "id": "64ba8f71ed60e60000130074",
      "text": "\tこのため充足可能性問題と言うと普通は [CNF] に対するものを言う",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689948016,
      "updated": 1689948025
    },
    {
      "id": "64ba8efded60e60000130073",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1689947900,
      "updated": 1689947900
    }
  ]
}