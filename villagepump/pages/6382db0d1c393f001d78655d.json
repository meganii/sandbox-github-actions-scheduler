{
  "id": "6382db0d1c393f001d78655d",
  "title": "ルビを取る処理の習得記録 Part 3「正規表現が動いた！！」",
  "created": 1669520142,
  "updated": 1669520146,
  "lines": [
    {
      "id": "6382db0d1c393f001d78655d",
      "text": "ルビを取る処理の習得記録 Part 3「正規表現が動いた！！」",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65574",
      "text": "from [青空文庫のルビを取るテキスト処理を習得してみよう]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db135e90c00000e65631",
      "text": "",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520146,
      "updated": 1669520146
    },
    {
      "id": "6382db0e5e90c00000e65576",
      "text": "[* 正規表現惑星の探索]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65577",
      "text": " `self[regexp] = val`",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65578",
      "text": "  >正規表現 regexp にマッチした部分文字列全体を val で置き換えます。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65579",
      "text": "   おっと出た正規表現！",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6557a",
      "text": "   `regexp`は聞いたことない",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6557b",
      "text": "    regexp = [regular expression] （正規表現のこと）",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6557c",
      "text": "    注釈助かる……[issac-37765679.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6557d",
      "text": "   [grep]は見たことある",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6557e",
      "text": "    >指定したファイルから特定のパターン、あるいは文字列を含んだ行を検索し、該当する行表示する[UNIXコマンド]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6557f",
      "text": "    [目grep]とかいう単語で見た",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65580",
      "text": "  code:ruby",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65581",
      "text": "   buf = \"string\"",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65582",
      "text": "   buf[/tr../] = \"!!\"",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65583",
      "text": "   p buf   # => \"s!!g\"",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65584",
      "text": "  これやりたいことに近いな",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65585",
      "text": "   いいね[nishio.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65586",
      "text": "  この`buf`ってなんなんだろう？",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65587",
      "text": "   [バッファ]`buffer`の略称かな",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65588",
      "text": "   　yes![nishio.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65589",
      "text": "  [青空文庫のルビを取るテキスト処理を習得してみよう#63796e886eb4060000acac18]でエンコード装備(?)を取得した後",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6558a",
      "text": "   [https://gyazo.com/e4f4a60085630d827734fead243c8a40]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6558b",
      "text": "   code:Ruby",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6558c",
      "text": "    # coding: utf-8",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6558d",
      "text": "    Encoding.default_internal = __ENCODING__",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6558e",
      "text": "    ",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6558f",
      "text": "    buf = \"ゴジラ\"",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65590",
      "text": "    buf[/ゴ/] = \"ク\"",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65591",
      "text": "    p buf # -> \"クジラ\"",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65592",
      "text": "   おー動いた！",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65593",
      "text": "    [https://gyazo.com/413fa91b7f7bd54c25dd48e3b5c33449][https://gyazo.com/aecd64e3ac0624f24463dec802fcc6dc]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65594",
      "text": "    プロンプト上でも動作確認",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65595",
      "text": "  では次。`ゴジラ`とある文を`ガメラ`にしたい場合にはどうしたらよいだろう？",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65596",
      "text": "   1. ",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65597",
      "text": "    $ buf/ゴジ/ = \"ガメ\"",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65598",
      "text": "     あっこれパターン([青空文庫のルビを取るテキスト処理を習得してみよう#6378f9d35e90c00000949c89])じゃん",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65599",
      "text": "    これは文字を指定しなきゃいけないので、今回の目的には合わない。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6559a",
      "text": "    「ゴから始まってその次1文字目までを置換してください」とRubyさんに伝える方法がいる",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6559b",
      "text": "     たのしいRubyを見ると`.`が任意の一文字とマッチングする、とある(p.348)",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6559c",
      "text": "      [青空文庫のルビを取るテキスト処理を習得してみよう#63789afe5e90c00000c213a3]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6559d",
      "text": "      あっここ[Mijinko_SD.icon]さんの言及で出たやつだ！",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6559e",
      "text": "      [つながった……脳細胞が、トップギアだぜ！][takker.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6559f",
      "text": "   2. ",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655a0",
      "text": "    こうか…？",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655a1",
      "text": "     $ buf/ゴ./ = \"ガメ\"",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655a2",
      "text": "     [https://gyazo.com/e7e22babf3179fd4bb112cbeb5ccdf92]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655a3",
      "text": "     いけたー。このルートだな",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655a4",
      "text": "  さらにもう段階",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655a5",
      "text": "   `\"歌《うた》\"`とあるときに`\"《うた》\"`を`\"\"`にするにはどうしたらよいか？(本質問題の一)",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655a6",
      "text": "   p.349に`\\z`が文字列の末尾にマッチすると説明有り",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655a7",
      "text": "    実験だ！",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655a8",
      "text": "     [https://gyazo.com/e080e141397807e8b0c1995e5840f802]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655a9",
      "text": "     ゴジラ→ゴジラSPの生成に成功",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655aa",
      "text": "     $ buf[/ラ\\z/] = \"ラSP\"",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655ab",
      "text": "      文字列の末尾の「ラ」を探して「ラSP」に置換してね",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655ac",
      "text": "   ということは…",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655ad",
      "text": "    [https://gyazo.com/71d76e9bfc70c068dc66b0810068141a]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655ae",
      "text": "     まあそうですよね",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655af",
      "text": "     戦闘が「ゴ」末尾が「ラ」の語句を「Godzilla: King of Monsters」に変える(変えたい)",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655b0",
      "text": "     もう少し読んだら回答があるはずだ",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655b1",
      "text": "     この正規表現で使われてる`*`や`+`の振る舞いって、[データベース]での検索条件となんか似てるな",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655b2",
      "text": "      データベース何にも[[知らんけど.icon]]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655b3",
      "text": "      [何でも言うことを聞いてくれるアカネチャン]聞くか……",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655b4",
      "text": "    `*`を使う方法と`+`を使う手があるらしい",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655b5",
      "text": "     >同じ文字や単語の繰り返しにマッチさせたいことがあります。たとえば、\"Subject\"という文字列のあとに、いくつか空白があって、その後ろに文字列が並んでいる行にマッチさせる」というような場合です(これは、電子メールの件名(サブジェクト)にマッチさせるためのパターンです)。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655b6",
      "text": "     [青空文庫のルビを取るテキスト処理を習得してみよう#63789afe5e90c00000c213a2]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655b7",
      "text": "      >文字全てを指定したい時に`.+`か`.*`を使えばいいというのは覚えて損はないです",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655b8",
      "text": "      ここの記述重要だな？",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655b9",
      "text": "    いろいろ苦労したが`/.*/`が効いた",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655ba",
      "text": "     [https://gyazo.com/76737dc51b4a56455b80e7934d4e80b2]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655bb",
      "text": "     これで`歌《うた》`を`歌`にできた！(終了条件2)",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655bc",
      "text": "     [/emoji/tada.icon][inajob.icon][nishio.icon][takker.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655bd",
      "text": "  さらに次の問題。`\"歌《うた》の話《はなし》について\"`を`\"歌の話について\"`にするにはどうしたらよいか？",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655be",
      "text": "   [https://gyazo.com/ed031caf68302252016dd11dd8a341f1]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655bf",
      "text": "   code:ruby",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655c0",
      "text": "    buf = \"歌《うた》の話《はなし》について\"",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655c1",
      "text": "    buf[/《.*》/] = \"\"",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655c2",
      "text": "    p buf #=> \"歌について\"",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655c3",
      "text": "   こうなりますよね",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655c4",
      "text": "    これはわかる",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655c5",
      "text": "     Scrapbox上での`[]`の振る舞いや[$ \\TeX]での`[]`とおんなじことが起こってる",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655c6",
      "text": "     \"歌[*_ 《うた》の話《はなし》]について\"←この太字の部分が`\"\"`になっているってわけだ",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655c7",
      "text": "    なので「行を読んでいく間に数回出てくるパターン」への対応策を考えなきゃならん",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655c8",
      "text": "   たのしいRubyを読み進めていたらこのあたりで`sub`メソッドと`gsub`メソッドが出てきた",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655c9",
      "text": "    [青空文庫のルビを取るテキスト処理を習得してみよう#637841785e90c00000ddb369]アッ前に来たところだ！",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655ca",
      "text": "    >subメソッドもgsubメソッドも、引数を2つ取ります。最初の引数には、マッチさせたいパターンを正規表現として指定します。2番目の引数には、マッチした部分と置き換える文字列を書きます。subメソッドは最初にマッチした部分だけを置き換えますが、gsubメソッドはマッチする部分すべてを置き換えます。(p.358)",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655cb",
      "text": "     code:ruby",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655cc",
      "text": "      buf = \"歌《うた》の話《はなし》について\"",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655cd",
      "text": "      #subを使う",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655ce",
      "text": "      p buf.sub(/《.*》/, \"\") ",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655cf",
      "text": "      ",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655d0",
      "text": "      #gsubを使う",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655d1",
      "text": "      p buf.gsub(/《.*》/, \"\")",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655d2",
      "text": "     さてどうなる？",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655d3",
      "text": "      [https://gyazo.com/2006c25f3316ba565ec71b7a4ac15a39]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655d4",
      "text": "      同じだ",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655d5",
      "text": "       説明のとおりでこうなるのは自然",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655d6",
      "text": "        マッチする条件は`《.*》`だし置き換えるのも`\"\"`だから",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655d7",
      "text": "        なので改善すべき点は正規表現の書き方にありそう",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655d8",
      "text": "        +1[inajob.icon][nishio.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655d9",
      "text": "      `sub``gsub`メソッドを使うと最初よりも行が短縮できる",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655da",
      "text": "       これを使うとよいなあ[issac-37765679.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655db",
      "text": "     `^`, `$`というのがあるらしい",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655dc",
      "text": "      これは行頭と行末",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655dd",
      "text": "      今回は行の内部にあるから使う必要は無さそう",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655de",
      "text": "     [https://docs.ruby-lang.org/ja/latest/doc/spec=2fregexp.html 正規表現 (Ruby 3.1 リファレンスマニュアル)]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655df",
      "text": "      読むのにじかんがかかる",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655e0",
      "text": "      キャプチャというのがあるのか",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655e1",
      "text": "       >丸括弧 ( ) によってキャプチャをすることができます。括弧に囲まれた部分正規表現にマッチした前からn番目の開き括弧によって囲まれた部分式にマッチした文字列を後で参照することができます。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655e2",
      "text": "       > 正規表現内では \\1, \\2, ... という記法で[後方参照]できます。また、\\k<1>, \\k<2>, ... や \\k'1', \\k'2', ... という記法を使うこともできます(10を越える数字を渡すことができます)。また、Regexp#match で得られた MatchData からは MatchData#[]で取り出せます。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655e3",
      "text": "     [最短マッチ]というのを見つけた",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655e4",
      "text": "      >0回以上の繰り返しを表す「*」と1回以上の繰り返しを表す「+」は、可能な限り長い部分にマッチします。逆に、マッチする可能性のある部分のうち一番短い部分にマッチさせる場合は、次のメタ文字を使います。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655e5",
      "text": "      > *?\t\t0回以上の繰り返しのうち最短の部分",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655e6",
      "text": "      > +?\t\t1回以上の繰り返しのうち最短の部分",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655e7",
      "text": "      いいね[yuyasurarin.icon][inajob.icon][nishio.icon][takker.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655e8",
      "text": "      [https://gyazo.com/17bd990c5650f9aa72f39406e13186bd][https://gyazo.com/ed5dcec92c100e18f5dd089817e284d6]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655e9",
      "text": "      行けた！",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655ea",
      "text": "       `*`と`+`の使い分けはまだわからん",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655eb",
      "text": "  ✅2つの条件がある場合にどうなるか？",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655ec",
      "text": "   `［＃６字下げ］歌《うた》の話《はなし》について［＃「歌の話について」は中見出し］`",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655ed",
      "text": "   1. `《》`",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655ee",
      "text": "   2. `［］`",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655ef",
      "text": "   この両者を`gsub`で変換できればまずよし",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655f0",
      "text": "    二回処理を走らせるという手があるな",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655f1",
      "text": "    \t+1[inajob.icon][yuyasurarin.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655f2",
      "text": "    \t僕が自分でやるとしてもそうします[nishio.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655f3",
      "text": "    \tえっそうなんですか[issac-37765679.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655f4",
      "text": "     \tてっきりプログラマは常に複数条件を華麗に分岐させてスパーッ！！とやるのかと思った([主語が大きい])",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655f5",
      "text": "     \t正規表現を使わない解法を考える場合2回処理をしない選択肢をとるかも[inajob.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655f6",
      "text": "     \t\t正規表現は、プログラミング言語内言語みたいなもので、細かい制御が難しい",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655f7",
      "text": "     \t\tWiki文法の解析などをするときは正規表現を使わないケースがある",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655f8",
      "text": "     \t　「正規表現を使わない場合」+1[nishio.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655f9",
      "text": "     \t　 正規表現を使う場合は、と書き忘れた。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655fa",
      "text": "     \t　 正規表現を使って2つのルールを組み合わせて1回でやるコードは2倍よりも長くなる",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655fb",
      "text": "     \t　 今回の課題の範囲では2つってことになってるけど、すぐ「3つ目を追加したい」とかなる可能性がある",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655fc",
      "text": "     \t　 というあたりに思いを馳せてから「長期的視点でコスト最小なのは2回処理する方法だな」と判断する",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655fd",
      "text": "      コードを読んで理解が難しいより自分が制御できる範囲のものをまず使う[yuyasurarin.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655fe",
      "text": "       [https://gyazo.com/ac5aca0219e707ce87c158300499e729]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e655ff",
      "text": "       できたわ(できるんかい)",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65600",
      "text": "",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65601",
      "text": "    [https://gyazo.com/71b10a6255d6d2f0dba02448ff1d5359]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65602",
      "text": "    とりあえずこれでよし",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65603",
      "text": "     本来は「複数の条件を指定して正規表現を行う」処理を行いたい",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65604",
      "text": "   じゃあせっかくだしこれやってみよう",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65605",
      "text": "    改行なしの一行データを上のスクリプトに放り込んだらどうなる？",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65606",
      "text": "    code:Ruby",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65607",
      "text": "     # coding: utf-8",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65608",
      "text": "     Encoding.default_internal = __ENCODING__",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65609",
      "text": "     ",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6560a",
      "text": "     ",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6560b",
      "text": "     buf = \"この度《たび》、高濱虚子《たかはまきよし》さん・柳田國男先生《やなぎだくにをせんせい》［＃ルビの「やなぎだくにをせんせい」はママ］と御一《ごいつ》しょに、この一部《いちぶ》の書物《しよもつ》を作《つく》ることになりました。その高濱《たかはま》さんの御領分《ごりようぶん》の俳句《はいく》と同樣《どうよう》に、短歌《たんか》といふものは、ほんとうに、日本國民《につぽんこくみん》自身《じしん》が生《う》み出《だ》したもので、とりわけ、きはめて古《ふる》い時代《じだい》に、出來上《できあが》つてゐたものであります。さうして、それが偶然《ぐうぜん》、私《わたし》の先生《せんせい》でもあり、またあなた方《がた》のこの文庫《ぶんこ》におけるおなじみでもある、柳田國男先生《やなぎだくにをせんせい》［＃ルビの「やなぎだくにをせんせい」はママ］がお書《か》きの諺《ことわざ》の成《な》り立《た》ちとも、原因《げんいん》が竝行《へいかう》してゐるのは、不思議《ふしぎ》な御縁《ごえん》だとおもひます。\"",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6560c",
      "text": "     #gsubを使う",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6560d",
      "text": "     buf2 = buf.gsub(/《.*?》/, \"\")",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6560e",
      "text": "     print buf2.gsub(/［.*?］/, \"\")",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6560f",
      "text": "    code:処理結果",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65610",
      "text": "     この度、高濱虚子さん・柳田國男先生と御一しょに、この一部の書物を作ることになりました。その高濱さんの御領分の俳句と同樣に、短歌といふものは、ほんとうに、日本國民自身が生み出したもので、とりわけ、きはめて古い時代に、出來上つてゐたものであります。さうして、それが偶然、私の先生でもあり、またあなた方のこの文庫におけるおなじみでもある、柳田國男先生がお書きの諺の成り立ちとも、原因が竝行してゐるのは、不思議な御縁だとおもひます。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65611",
      "text": "    イェイイェーイ！[!- [issac-37765679.icon]]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65612",
      "text": "    うーん達成感。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65613",
      "text": "  ✅改行が含まれてる場合にどうするか？",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65614",
      "text": "   今は変数`buf`に文字列を代入して、それをもとに処理している",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65615",
      "text": "   [https://gyazo.com/a413b7a8fbecb462f517da8de4fc9722]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65616",
      "text": "   `\\n詩の話について\\n`",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65617",
      "text": "    この`\\n`を削除する",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65618",
      "text": "    \tこれは、必要な処理なのかな？ 元の文書の改行は整形後も改行のままでよい気がする[inajob.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65619",
      "text": "     おっとこれは文字ではなく改行を表してるんですか[issac-37765679.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6561a",
      "text": "      消すと改行情報が亡くなってしまう？",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6561b",
      "text": "      [\" 改行情報が亡くなってしまう？]←なんかfuneralになってしまった。面白いので残しておこう",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6561c",
      "text": "\t\t\t\t\t`p`じゃなくて`print`にすれば改行は見た目も改行になるはず[inajob.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6561d",
      "text": " \t\t\t\t\tなりました！[issac-37765679.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6561e",
      "text": "\t\t\t\t\tたのしいRuby(p.32, 33)",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6561f",
      "text": " \t\t\t\t\t> たとえば、数値の100 と文字列の\"100\" を、print メソッドやputs メソッドで表示させると、どちらも単に「100」と表示されてしまいます。これでは本当はどちらのオブジェクトなのか、表示結果から確認できません。そんなときには、pメソッドを使うのが便利です。pメソッドなら、文字列と数値を違った形で表示してくれるのです。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65620",
      "text": " \t\t\t\t\t>(...)このように、文字列を出力する場合、「\" \"」で囲んで、表示してくれるわけです。これなら一目瞭然ですね。さらに、文字列の中に含まれる改行やタブなどの特殊な文字も、「`\\n`」 や「`\\t`」のように表示されます。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65621",
      "text": " \t\t\t\t\tﾅﾙﾎﾄﾞﾈｰ[issac-37765679.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65622",
      "text": " \t\t\t\t\t\t特殊文字の表現は[エスケープシーケンス]と呼ばれますね[inajob.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65623",
      "text": "    もう一度`gsub(/\\n.*?/)`の処理をかけるという手もあるけど、もっとよい解決策があるに違いない",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65624",
      "text": "    もっとエレガント(?)にしたい",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65625",
      "text": "     短く、すっとするような",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65626",
      "text": "   行情報があるときにどうなるか？",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65627",
      "text": "    code:txt",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65628",
      "text": "     この度《たび》、高濱虚子《たかはまきよし》さん・柳田國男先生《やなぎだくにをせんせい》［＃ルビの「やなぎだくにをせんせい」はママ］と御一《ごいつ》しょに、この一部《いちぶ》の書物《しよもつ》を作《つく》ることになりました。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65629",
      "text": "     その高濱《たかはま》さんの御領分《ごりようぶん》の俳句《はいく》と同樣《どうよう》に、短歌《たんか》といふものは、ほんとうに、日本國民《につぽんこくみん》自身《じしん》が生《う》み出《だ》したもので、とりわけ、きはめて古《ふる》い時代《じだい》に、出來上《できあが》つてゐたものであります。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6562a",
      "text": "     さうして、それが偶然《ぐうぜん》、私《わたし》の先生《せんせい》でもあり、またあなた方《がた》のこの文庫《ぶんこ》におけるおなじみでもある、柳田國男先生《やなぎだくにをせんせい》［＃ルビの「やなぎだくにをせんせい」はママ］がお書《か》きの諺《ことわざ》の成《な》り立《た》ちとも、原因《げんいん》が竝行《へいかう》してゐるのは、不思議《ふしぎ》な御縁《ごえん》だとおもひます。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6562b",
      "text": "    code:処理結果",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6562c",
      "text": "     この度、高濱虚子さん・柳田國男先生と御一しょに、この一部の書物を作ることになりました。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6562d",
      "text": "     その高濱さんの御領分の俳句と同樣に、短歌といふものは、ほんとうに、日本國民自身が生み出したもので、とりわけ、きはめて古い時代に、出來上つてゐたものであります。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6562e",
      "text": "     さうして、それが偶然、私の先生でもあり、またあなた方のこの文庫におけるおなじみでもある、柳田國男先生がお書きの諺の成り立ちとも、原因が竝行してゐるのは、不思議な御縁だとおもひます。",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e6562f",
      "text": "    いよーし！Goodッ！",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    },
    {
      "id": "6382db0e5e90c00000e65630",
      "text": "",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1669520142,
      "updated": 1669520142
    }
  ]
}