{
  "id": "67de70159acaa19cbe039c39",
  "title": "葬式をメソッドチェーンで書く",
  "created": 1742630935,
  "updated": 1742650563,
  "lines": [
    {
      "id": "67de70159acaa19cbe039c39",
      "text": "葬式をメソッドチェーンで書く",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742630935,
      "updated": 1742630935
    },
    {
      "id": "67de702879d3a900003f79ec",
      "text": "✂[2025/03/22]",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742630953,
      "updated": 1742630978
    },
    {
      "id": "67de702379d3a900003f79ea",
      "text": "ってどういうことだ[bsahd.icon] ",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742630948,
      "updated": 1742630980
    },
    {
      "id": "67de701779d3a900003f79e7",
      "text": "",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742630936,
      "updated": 1742630936
    },
    {
      "id": "67de701679d3a900003f79e3",
      "text": "そのためにはまず「葬式を書く」という概念を確立しなければならない……[sta.icon]",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742630935,
      "updated": 1742630962
    },
    {
      "id": "67de701679d3a900003f79e4",
      "text": "\tIaCならぬ葬式 As Codeみたいな",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742630935,
      "updated": 1742630962
    },
    {
      "id": "67de70bd79d3a900003f7a0b",
      "text": "",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631101,
      "updated": 1742631101
    },
    {
      "id": "67de701679d3a900003f79e5",
      "text": "o1 proに無茶振り: https://chatgpt.com/c/67de6ff9-f898-8007-b41c-e6f476d5f85f",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742630935,
      "updated": 1742631101
    },
    {
      "id": "67de749271b3c20000629cc2",
      "text": "\t`Unable to load conversation 67de6ff9-f898-8007-b41c-e6f476d5f85f`と表示されます[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1742632083,
      "updated": 1742632090
    },
    {
      "id": "67de749971b3c20000629cc3",
      "text": "\t\t多分共有用URLを生成してない",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1742632090,
      "updated": 1742632100
    },
    {
      "id": "67de701679d3a900003f79e6",
      "text": "\t>さらに「IaC(Infrastructure as Code) ならぬ『葬式 as Code』」という謎の概念まで飛躍していて、なかなかシュールな流れです。",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742630935,
      "updated": 1742631018
    },
    {
      "id": "67de705179d3a900003f79ee",
      "text": "\t\tｗ[sta.icon]",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742630994,
      "updated": 1742631020
    },
    {
      "id": "67de706d79d3a900003f79f1",
      "text": ">ここで冗談として「葬式 as Code」というのは、[葬儀]の進行をすべてコード(プログラム)として記述し、ワンクリックで(？)執り行えるようにする みたいなイメージでしょう。「[メソッドチェーン]で書く」というネタと組み合わせると、たとえば次のような擬似コードが考えられます。\t",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1742631021,
      "updated": 1742650389
    },
    {
      "id": "67de707979d3a900003f79f2",
      "text": " \tcode:java",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631033,
      "updated": 1742631056
    },
    {
      "id": "67de707e79d3a900003f79f3",
      "text": " \t Funeral funeral = new Funeral()",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631038,
      "updated": 1742631056
    },
    {
      "id": "67de707e79d3a900003f79f4",
      "text": "       .determineVenue(\"某寺院\")         // 会場を決める",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631038,
      "updated": 1742631056
    },
    {
      "id": "67de707e79d3a900003f79f5",
      "text": "       .setOfficiant(\"和尚\")           // 導師を設定",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631038,
      "updated": 1742631056
    },
    {
      "id": "67de707e79d3a900003f79f6",
      "text": "       .invite(\"親族\")                // 参列者を招待",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631038,
      "updated": 1742631056
    },
    {
      "id": "67de707e79d3a900003f79f7",
      "text": "       .invite(\"友人\")",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631038,
      "updated": 1742631056
    },
    {
      "id": "67de707e79d3a900003f79f8",
      "text": "       .schedule(\"通夜\", \"2025-04-01 18:00\")",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631038,
      "updated": 1742631056
    },
    {
      "id": "67de707e79d3a900003f79f9",
      "text": "       .schedule(\"告別式\", \"2025-04-02 10:00\")",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631038,
      "updated": 1742631056
    },
    {
      "id": "67de707e79d3a900003f79fa",
      "text": "       .arrangeFlowers(\"白百合\", 50)   // 献花を準備",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631038,
      "updated": 1742631056
    },
    {
      "id": "67de707e79d3a900003f79fb",
      "text": "       .prepareEulogy(\"親族代表の弔辞\") // 弔辞を設定",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631038,
      "updated": 1742631056
    },
    {
      "id": "67de707e79d3a900003f79fc",
      "text": "       .prepareFarewellSpeech(\"友人代表スピーチ\")",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631038,
      "updated": 1742631056
    },
    {
      "id": "67de707e79d3a900003f79fd",
      "text": "       .addRitual(\"焼香\")",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631038,
      "updated": 1742631056
    },
    {
      "id": "67de707e79d3a900003f79fe",
      "text": "       .addRitual(\"お別れの言葉\")",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631038,
      "updated": 1742631056
    },
    {
      "id": "67de707e79d3a900003f79ff",
      "text": "       .finalizePlan();               // プラン確定",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631038,
      "updated": 1742631056
    },
    {
      "id": "67de707e79d3a900003f7a00",
      "text": "\t>もちろん実際にコンパイルして動くわけではなく、「あくまでネタ」というか「見せ方としてのコード」です。",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631038,
      "updated": 1742631090
    },
    {
      "id": "67de709379d3a900003f7a04",
      "text": "\t\t> しかし、もし葬式に必要な手続きを完全にシステム化できるなら——例えば葬儀屋さんの業務フローや役所への届け出（死亡届や火葬許可証の取得など）を全部 API 化して、各種所要手続きを自動で進められるようにしたら、ある意味「葬式 as Code」が実現しそうです。",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631060,
      "updated": 1742631110
    },
    {
      "id": "67de708079d3a900003f7a01",
      "text": "\t>本来まじめに「葬式 as Code」をやるとなると、ご遺体の搬送手配・火葬許可の申請・葬儀会場の手配・式次第の作成・参列者への通知や香典管理などなど、かなり人手のかかるフローをAPI連携や電子申請で処理しようというプロジェクトになりそうです。",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631040,
      "updated": 1742631106
    },
    {
      "id": "67de70cd79d3a900003f7a0c",
      "text": "\t\t葬儀屋のドメイン知識を調べたいところ[sta.icon]",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631118,
      "updated": 1742631211
    },
    {
      "id": "67de70d479d3a900003f7a0d",
      "text": "\t\t\tドメイン駆動開発じゃないけど、金くれるならできるよ",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631125,
      "updated": 1742631145
    },
    {
      "id": "67de70f879d3a900003f7a0e",
      "text": "\t\t\tちなみに会議進行の As Code 化はすでに考えてる。僕は[Facilitation As Code]と呼んでるけど",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1742631160,
      "updated": 1742650560
    },
    {
      "id": "67de711a79d3a900003f7a10",
      "text": "\t\t\t\t[/workware/Facilitation As Code]",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631195,
      "updated": 1742631195
    },
    {
      "id": "67de715379d3a900003f7a11",
      "text": "\t\tたぶん葬式に限らず、業務フロー全般を As Code 化するプラクティスが先にできて、それを葬儀に適用する、じゃないか？[sta.icon]",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631252,
      "updated": 1742631280
    },
    {
      "id": "67de716f79d3a900003f7a12",
      "text": "\t\t\tこっちは僕は[Work As Code]と呼んで検討してる（とっかかり得られなくて行き詰まってるけど。。。",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1742631280,
      "updated": 1742650563
    },
    {
      "id": "67de71e379d3a900003f7a15",
      "text": "\t\t\t\tワークフローやジョブはすでにあるけど、人間がやる「仕事」を As Code したいって話",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631395,
      "updated": 1742631408
    },
    {
      "id": "67de71a479d3a900003f7a13",
      "text": "\t\t\tたぶんもっと As Code の事例増やして人類の As Code 知見を貯めないと辿り着けない気もする",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631332,
      "updated": 1742631368
    },
    {
      "id": "67de71b479d3a900003f7a14",
      "text": "\t>とはいえ、ネタとして考える分には「Funeralクラスをインスタンス化してメソッドチェーンで工程を組み立てる」といった発想は面白いですね。いずれ、“SaaC（Sou-shiki as Code）”なんてプログラマー向け葬儀プランができる日が来る……かもしれません。",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631349,
      "updated": 1742631360
    },
    {
      "id": "67de70ba79d3a900003f7a0a",
      "text": "",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1742631098,
      "updated": 1742631098
    },
    {
      "id": "67debca8e5172d00008b0347",
      "text": "[XXXX As Code]",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1742650535,
      "updated": 1742650544
    },
    {
      "id": "67debca9e5172d00008b0348",
      "text": "",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1742650536,
      "updated": 1742650536
    }
  ]
}