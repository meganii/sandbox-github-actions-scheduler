{
  "id": "6226e1312dd917001d6c8085",
  "title": "ソースコードを階層整理する必要はあるのか？",
  "created": 1646715185,
  "updated": 1736601029,
  "lines": [
    {
      "id": "6226e1312dd917001d6c8085",
      "text": "ソースコードを階層整理する必要はあるのか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d3a",
      "text": "from [2022/03/08]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d3b",
      "text": "ソースコードを階層整理する必要はあるのか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e13daff09e0000571d5d",
      "text": "[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715198,
      "updated": 1646715198
    },
    {
      "id": "6226e131aff09e0000571d3c",
      "text": " Scrapboxの「階層整理は破綻する」に馴染みすぎて、ソースコード見た時に「あれ？なんでコンポーネントをcomponentsなんてフォルダに入れる必要があるのか？」という気持ちになっている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715206
    },
    {
      "id": "6226e131aff09e0000571d3d",
      "text": "  わかる[基素.icon][fumito.icon][takker.icon][blu3mo.icon][dnin.icon][Mijinko_SD.icon][bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1646715185,
      "updated": 1735213664
    },
    {
      "id": "676d27de7838e300002aa4ff",
      "text": "  　階層構造じゃないもっと良い分類方法なら初見のプロジェクトでもソースコード漁りやすくなるのではという期待がある[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1735206878,
      "updated": 1735206939
    },
    {
      "id": "6226e131aff09e0000571d3e",
      "text": "  [/mrsekut-p/Package by Layer]の利点ってそんなになさそう[takker.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d3f",
      "text": " 全部フラットにしたら何が問題になるのか試してみたくなってくる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d40",
      "text": "  ファイルシステムベースのフレームワークでは明らかに問題が出ますが、それ以外だとどうなんだろう[基素.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d41",
      "text": "  　例：https://nextjs.org/docs/routing/introduction",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d42",
      "text": "  特に問題は起きないのではと思っている[kuuote.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d43",
      "text": "   フラットな階層に大量にソースコードが置かれているプロジェクトはある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d44",
      "text": "    厳密な例ではないが、[git]や[tmux]など",
      "userId": "5b5e7121417cf700145b98c2",
      "created": 1646715185,
      "updated": 1736599501
    },
    {
      "id": "6226e131aff09e0000571d45",
      "text": "   階層に分ける理由の1つに、見やすさをあげられることがある[基素.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d46",
      "text": "   　IDEを使って開発していると階層の位置をあまり意識せずにファイル名とかを検索して直接アクセスすることが自分は多いので気持ちがそこまで理解できない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d47",
      "text": "   　もちろん階層を前提とした設計になっているソフトなら別",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d48",
      "text": "   同じく、ファイル名や中身の検索、参照による移動でコードにアクセスするので正しく記述できていればそこまで意識することないのではと[kuuote.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d49",
      "text": "   俯瞰したい欲なのかもしれない、あるいは全部把握したい[kuuote.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d4a",
      "text": "   階層に分けずにファイル名をちゃんとつけようとすると長くなってしまうのかも[yosider.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d4b",
      "text": "   　あるいは何か法則を決めてファイル名をつけるという作業が階層を分ける作業と同じことのような気もする",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d4c",
      "text": "    ある程度は曖昧検索が解決してくれそう[kuuote.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d4d",
      "text": "  [scrapbox-userscript-std]で名前衝突を避けるためにやっている[takker.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d4e",
      "text": "   pageとかtextとかかなり単純なファイル名にしている分、かなり衝突確率が上がっている",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d4f",
      "text": "   [名前空間]の概念が欲しいなら[階層構造]もセットになるってことか[sta.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646715185,
      "updated": 1646715362
    },
    {
      "id": "6226e131aff09e0000571d50",
      "text": "   \tあるいは `category1-categoryX-foo`みたいにフラットに名前書いてもいいけど",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d51",
      "text": "    \tまあそれもありっちゃありですが、directoryで分けるのと何も変わらなくなりますね[takker.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d52",
      "text": "    そゆことですねー[takker.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d53",
      "text": "   って[ソースコードを階層整理する必要はあるのか？#6226e131aff09e0000571d4a]に同じこと書かれてあるじゃん",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646715185,
      "updated": 1646715345
    },
    {
      "id": "6226e131aff09e0000571d54",
      "text": "    気づかなかった",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d55",
      "text": " ファイル一覧から目で探すのが困難になるがそもそもそれをやるのがおかしい[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d56",
      "text": "  やってた()[takker.icon][kuuote.icon][nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d57",
      "text": " [nishio.icon]さんのkozaneba日記でdirectoryを廃してフラットにファイルを置く話を読んでから、ちょっとだけ真似している[takker.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d58",
      "text": " うーん、VSCodeとScrapboxが合体してほしい…w",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1646715185,
      "updated": 1653604700
    },
    {
      "id": "6226e131aff09e0000571d59",
      "text": "  Scrapboxとはだいぶ趣が違うけど「Goto Definition」「Find All References」「Show Call Hierarchy」辺りは関連性により動いて便利だと思います[kuuote.icon][takker.icon*2]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d5a",
      "text": "　大体既に言われてるけど、検索でファイルにジャンプできるし、呼び出しや定義にジャンプできるし、だいぶ近いよね[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226e131aff09e0000571d5b",
      "text": "　　だけどまたなんか足りないのは何が足りないのか、下に関連ファイル一覧が出ればいいのか？？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646715185,
      "updated": 1646715185
    },
    {
      "id": "6226eccde5172d00006255db",
      "text": "\t[Goto Definition]がScrapboxにないのは問題だなぁ[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1646718157,
      "updated": 1648169291
    },
    {
      "id": "623d0f91aff09e0000f17bbf",
      "text": "\t　[定義へのリンク]がシステム的にはないので、たくさんの箇所で利用されてる概念は[大きなリンク]になり、人間が定義にシュッとジャンプすることが困難になる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648168849,
      "updated": 1648168923
    },
    {
      "id": "623d0fddaff09e0000f17bc0",
      "text": "\t　[/Chosakukenho]を見て「第何条」をリンクにした場合、それが「定義」である条文へのジャンプになるためにはページのタイトルが「第何条」という[無味乾燥]なものにならざるを得ないのだなーと感じた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648168925,
      "updated": 1648170079
    },
    {
      "id": "623d10c4aff09e0000f17bc1",
      "text": "\t　　[/Chosakukenho/第四十六条]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648169156,
      "updated": 1648169192
    },
    {
      "id": "623d10e8aff09e00003edac7",
      "text": "\t\t\t「第四十六条」ではなく「公開の美術の著作物等の利用」をタイトルにしたくなるのだけど、そうすると「第四十六条」のリンクが「定義へのジャンプ」ではなく「使用箇所の一覧」になってしまう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648169193,
      "updated": 1648169271
    },
    {
      "id": "623d4de5774b170000d5d73f",
      "text": "\t\t\t 同様の問題で悩んでためしに「46条 公開の美術の著作物等の利用」のように全部入りをリンクにしてみたけど、他人の文章を引用してリンクするハードルがやや上がってしまうのが難点[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1648184806,
      "updated": 1648184911
    },
    {
      "id": "623d0f5daff09e00003edac6",
      "text": "　Kozanebaで試しにやってみた感想[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648168797,
      "updated": 1648169619
    },
    {
      "id": "623d128daff09e0000f17bc7",
      "text": "　　「Baのダイアログに入力欄を出そう」→Ctrl+P BaDialog",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648169613,
      "updated": 1648169670
    },
    {
      "id": "623d12c7aff09e0000f17bc8",
      "text": "　　エラーを直そう→エラーメッセージからジャンプ",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648169671,
      "updated": 1648169685
    },
    {
      "id": "623d12d5aff09e0000f17bc9",
      "text": "　　保存したデータをロードしたときに適切に処理を→Ctrl+P load→あれ？ないぞ？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648169686,
      "updated": 1648169742
    },
    {
      "id": "623d130eaff09e0000f17bca",
      "text": "　　　saveから周囲を目で探して目的の位置にたどり着いた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648169742,
      "updated": 1648169795
    },
    {
      "id": "623d1343aff09e0000f17bcb",
      "text": "　　　解説: Firebaseからのロードはアプリからロードのトリガーを引いているのではなく、Firebaseの更新通知でトリガーを引かれてる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648169796,
      "updated": 1648169846
    },
    {
      "id": "623d1377aff09e0000f17bcc",
      "text": "　　　　なのでアプリのコードとしては`set_up_read_subscription.tsx`になってた",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648169848,
      "updated": 1648169972
    },
    {
      "id": "623d13f4aff09e0000f17bcd",
      "text": "　　　　Scrapbox的発想だと表記揺れ吸収の一種なので、これのコメントに`[load]`とか書いたらCtrl+P loadで出るようになるといいのにな",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648169972,
      "updated": 1648170037
    },
    {
      "id": "623d1282aff09e0000f17bc5",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648169603,
      "updated": 1648169991
    },
    {
      "id": "629035b779d3a900007add64",
      "text": "「特定の種類のコード全部を指定する」のに階層は役立つってのはありそう[sta.icon]",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1653618104,
      "updated": 1653618118
    },
    {
      "id": "629035c679d3a900007add65",
      "text": " src/、test/",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1653618118,
      "updated": 1653618123
    },
    {
      "id": "629035cd79d3a900007add66",
      "text": "\t test/に放り込んだもの全部をテストコードとして扱えばいい（テストコード全体、の指定が楽）",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1653618126,
      "updated": 1653618201
    },
    {
      "id": "629035da79d3a900007add67",
      "text": "\tこれが（たとえば階層じゃない例として）フラットの場合、「テストコード全部」を表現するのが一手間",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1653618139,
      "updated": 1653618183
    },
    {
      "id": "629035ea79d3a900007add68",
      "text": "\t\tファイル名やファイル内容に特定文字列を書くか",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1653618154,
      "updated": 1653618163
    },
    {
      "id": "629035f279d3a900007add69",
      "text": "\t\tこれがテストコードですリストみたいなのつくってそれをメンテするか etc",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1653618163,
      "updated": 1653618174
    },
    {
      "id": "62903ba11982700000292a4d",
      "text": "\t\t「テストコード全部」を表現する機会ってそんなにありますか？[mrsekut.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1653619618,
      "updated": 1653738760
    },
    {
      "id": "62903be31982700000292a50",
      "text": "\t\t\tjestなら`hoge.test.js`のようにかけば階層がなくてもテストできるわけだし、`hoge.js`の兄弟にいたほうが見つけやすい",
      "userId": "5b4ea932de544f0014198270",
      "created": 1653619684,
      "updated": 1653619962
    },
    {
      "id": "62903bb41982700000292a4e",
      "text": "\t\t\t使用しているtest libraryにも依るのかもしれない",
      "userId": "5b4ea932de544f0014198270",
      "created": 1653619636,
      "updated": 1653619975
    },
    {
      "id": "6291712a79d3a90000149ea2",
      "text": "\t\t\tテストコードどう置きたいかのスタンスにもよるのかもしれません[sta.icon]",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1653698860,
      "updated": 1653700533
    },
    {
      "id": "6291714279d3a90000149ea3",
      "text": "\t\t\t\t[sta.icon]は「ソースと一緒には置きたくない」派。ソースのコメントにテストコード書くみたいなの好きじゃない。「このコードのtestあるのか？」を知るのは不便だが許容（それよりも綺麗に置くことが大事）",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1653698882,
      "updated": 1653698968
    },
    {
      "id": "6291719879d3a90000149ea4",
      "text": "\t\t\t\t\tと書いてて、これこそ階層意識に毒されているのではないかと思った（[mrsekut.icon]さん言ってる方が普通に便利そう）[sta.icon]",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1653698968,
      "updated": 1653699007
    },
    {
      "id": "629180a8aff09e0000bca90d",
      "text": "\t\t\t\t\tこれを見てて僕はPythonのdoctestは小さめのプログラムに対してはよく使うなぁと思った[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1653702824,
      "updated": 1653702867
    },
    {
      "id": "629180ceaff09e0000bca90e",
      "text": "\t\t\t\t\t　関数冒頭のコメントにその関数はどんな入力にどんなものを返すかを書いてる",
      "userId": "582e63d27c56960011aff09e",
      "created": 1653702863,
      "updated": 1653702916
    },
    {
      "id": "629180f3aff09e0000bca90f",
      "text": "\t\t\t\t\t　「文芸的プログラミング」的？？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1653702900,
      "updated": 1653702936
    },
    {
      "id": "6291815eaff09e0000bca910",
      "text": "\t\t\t\t\tあ、わかった、foo.jsのテストをfoo.test.jsに書く的なことを考えてる時のテストは[ユニットテスト]で、僕が「テストコードを分ける」と書いた時に脳内にあったのはCypressを使ったUIの[E2Eテスト]だった",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1653703007,
      "updated": 1653738818
    },
    {
      "id": "629181cdaff09e0000bca911",
      "text": "\t\t\t\t\t　なのでテストコードと実装のファイルは1対1に対応しない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1653703118,
      "updated": 1653703147
    },
    {
      "id": "62920f7979d3a90000d0a8d0",
      "text": "\t\t\t\t\t　\t+1。なるほど、そういえば仕事ではFT(Function Test)もコードで書くことがあった[sta.icon]",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1653739386,
      "updated": 1653739422
    },
    {
      "id": "62903c7f1982700000292a51",
      "text": "\t\t\ttestと実装が別の場所にあると、この実装ってtestあるのか？ってならないですか？",
      "userId": "5b4ea932de544f0014198270",
      "created": 1653619840,
      "updated": 1653619856
    },
    {
      "id": "62918054aff09e0000bca90c",
      "text": "\t\t\t　カバレッジを可視化するツールを使う前提[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1653702740,
      "updated": 1653702758
    },
    {
      "id": "629171dd79d3a90000149ea5",
      "text": "\t\t「テストコード全部実行する」という使い方をするので全部実行できないと辛いです[sta.icon]",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1653699038,
      "updated": 1653700543
    },
    {
      "id": "629177c879d3a900007868c8",
      "text": "\t\t\tpython unittestだと一気に実行できたりする",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1653700552,
      "updated": 1653700552
    },
    {
      "id": "629177c379d3a900007868c7",
      "text": "\t\t\t逆にhoge.jsのテストコードだけ実行する、はあまりしない",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1653700547,
      "updated": 1653700547
    },
    {
      "id": "629177cc79d3a900007868c9",
      "text": "\t\t\t人による？",
      "userId": "5a4873ab2e26fb001479d3a9",
      "created": 1653700556,
      "updated": 1653700602
    },
    {
      "id": "62903789aff09e0000687c29",
      "text": "\t確かに、テストコードは分けたいな[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1653618570,
      "updated": 1653618582
    },
    {
      "id": "62903797aff09e0000687c2a",
      "text": "\t 逆にテストコード以外にそういうのはあるか？",
      "userId": "582e63d27c56960011aff09e",
      "created": 1653618584,
      "updated": 1653618598
    },
    {
      "id": "62903f1b8ee92a0000ccc9ee",
      "text": "\t文芸的に書いてれば大丈夫! [増井俊之.icon]",
      "userId": "566fa156776c9b11008ee92a",
      "created": 1653620508,
      "updated": 1653620517
    },
    {
      "id": "623d1282aff09e0000f17bc6",
      "text": "",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648169603,
      "updated": 1648169603
    },
    {
      "id": "6226e131aff09e0000571d5c",
      "text": "[ファイルとScrapboxのページのアナロジー]",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1646715185,
      "updated": 1646718190
    },
    {
      "id": "6226eceee5172d00006255dc",
      "text": "　またはファイル名とページタイトルのアナロジー",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1646718190,
      "updated": 1646718193
    },
    {
      "id": "6226ed09e5172d00006255dd",
      "text": "　というより、エディタによるファイルの扱いとScrapboxによるページの扱いの比較か",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1646718217,
      "updated": 1646718276
    },
    {
      "id": "6226ecc2e5172d00006255d9",
      "text": "　共通点",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1646718147,
      "updated": 1646718160
    },
    {
      "id": "6226ec90e5172d00006255d6",
      "text": "　　検索できる",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1646718097,
      "updated": 1646718160
    },
    {
      "id": "6226eca5e5172d00006255d8",
      "text": "　　呼び出し箇所にジャンプできる",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1646718117,
      "updated": 1646718160
    },
    {
      "id": "6226ecc7e5172d00006255da",
      "text": "　違い",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1646718152,
      "updated": 1646718160
    },
    {
      "id": "6226ec2ee5172d00006255d2",
      "text": "　　ファイル名にはいろいろ制約がある",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1646717999,
      "updated": 1646718160
    },
    {
      "id": "6226ec2ee5172d00006255d3",
      "text": "　　　英語が推奨されている",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1646717999,
      "updated": 1646718160
    },
    {
      "id": "6226ec2ee5172d00006255d4",
      "text": "　　　スペースや記号を入れにくい・入れられない",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1646717999,
      "updated": 1646718160
    },
    {
      "id": "67826db171b3c2000068cdc2",
      "text": "　　　NULと`/`以外なら入れられますが何か？[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1736601010,
      "updated": 1736601029
    },
    {
      "id": "6226ed6ce5172d00006255de",
      "text": "",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1646718317,
      "updated": 1646718317
    },
    {
      "id": "6226eab9e5172d00006255bf",
      "text": "　ページタイトルは長くなっても気にならない（むしろある程度の長さがあるほうが好ましい？）のに、ファイル名は短いほうがいいと感じるのはなぜだろう[yosider.icon]",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1646717625,
      "updated": 1646718319
    },
    {
      "id": "6226eaffe5172d00006255c0",
      "text": "　　入力するのが大変だから？",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1646717695,
      "updated": 1646718319
    },
    {
      "id": "6226eb0de5172d00006255c1",
      "text": "　　　現代は補完があるので問題ない",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1646717709,
      "updated": 1646718319
    },
    {
      "id": "6226ec51e5172d00006255d5",
      "text": "　　いろいろ制約がある[. [ソースコードを階層整理する必要はあるのか？#6226ec2ee5172d00006255d2] ]ので長いと読みにくい？",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1646718034,
      "updated": 1646718319
    },
    {
      "id": "6226ea81e5172d00006255be",
      "text": "",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1646717569,
      "updated": 1646717569
    },
    {
      "id": "623c5e508ee92a00005e6237",
      "text": "[増井俊之.icon]",
      "userId": "566fa156776c9b11008ee92a",
      "created": 1648123472,
      "updated": 1648123474
    },
    {
      "id": "623c5e528ee92a00005e6238",
      "text": " 短いソースはScrapboxに書けばいい気がしている",
      "userId": "566fa156776c9b11008ee92a",
      "created": 1648123474,
      "updated": 1648123490
    },
    {
      "id": "623c5e628ee92a00005e623a",
      "text": "  e.g. [/masui/壁紙写真でスクリーンセーバ]",
      "userId": "566fa156776c9b11008ee92a",
      "created": 1648123490,
      "updated": 1648123608
    },
    {
      "id": "623c5e528ee92a00005e6239",
      "text": " 　このページを作ったときにイメージしていたのは100ファイル以上が関係してあって動いているようなプログラム[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648123474,
      "updated": 1648169480
    },
    {
      "id": "623d1208aff09e0000f17bc4",
      "text": " 　 コードスニペットを階層的管理しなくてもいいって点には異論はない(し、僕も現時点で既に階層管理してない)",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648169480,
      "updated": 1648169551
    },
    {
      "id": "623d690c8ee92a0000b7b4f5",
      "text": " 　デカいプロジェクトで使ってみたいものですが [増井俊之.icon]",
      "userId": "566fa156776c9b11008ee92a",
      "created": 1648191757,
      "updated": 1648191777
    },
    {
      "id": "623d11deaff09e0000f17bc3",
      "text": " つまらないコードスニペットでも、Scrapboxにいろいろ書いてると有用なことがあるかもしれない",
      "userId": "582e63d27c56960011aff09e",
      "created": 1648169438,
      "updated": 1648169438
    },
    {
      "id": "623c5e9e8ee92a00005e623c",
      "text": " そうなると、階層的管理など必要なくなるかもしれない",
      "userId": "566fa156776c9b11008ee92a",
      "created": 1648123550,
      "updated": 1648123580
    },
    {
      "id": "623c5e7c8ee92a00005e623b",
      "text": " [* 例]",
      "userId": "566fa156776c9b11008ee92a",
      "created": 1648123516,
      "updated": 1648123628
    },
    {
      "id": "623c5ee98ee92a00005e623e",
      "text": "  [Gyaim]の変換アルゴリズムをScrapboxに書く",
      "userId": "566fa156776c9b11008ee92a",
      "created": 1648123625,
      "updated": 1648123645
    },
    {
      "id": "623c5efd8ee92a00005e623f",
      "text": "  それを使ってGyaimをビルドできる",
      "userId": "566fa156776c9b11008ee92a",
      "created": 1648123645,
      "updated": 1648123658
    },
    {
      "id": "623c5f2e8ee92a00005e6241",
      "text": "  文書とコードが一体化する",
      "userId": "566fa156776c9b11008ee92a",
      "created": 1648123694,
      "updated": 1648123703
    },
    {
      "id": "623c5f378ee92a00005e6242",
      "text": "  自然と[文芸的プログラミング]みたいになる",
      "userId": "566fa156776c9b11008ee92a",
      "created": 1648123703,
      "updated": 1648123716
    },
    {
      "id": "623c5f018ee92a00005e6240",
      "text": " こういうことを以前考えたりしていたな[kuuote.icon]",
      "userId": "5e8944948a182900174bb2e2",
      "created": 1648123650,
      "updated": 1648126611
    },
    {
      "id": "623c6a934bb2e20000672dc3",
      "text": "  importする時にバージョンが固定されると嬉しいということを考えていた",
      "userId": "5e8944948a182900174bb2e2",
      "created": 1648126611,
      "updated": 1648126642
    },
    {
      "id": "623c5ee48ee92a00005e623d",
      "text": "",
      "userId": "566fa156776c9b11008ee92a",
      "created": 1648123621,
      "updated": 1648123621
    },
    {
      "id": "629001641280f00000a54faf",
      "text": "[/nishio]に関連した話題がありそうだったので探してみた[- がなかった][takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1653604708,
      "updated": 1653604835
    },
    {
      "id": "629001651280f00000a54fb0",
      "text": " あった[/nishio/ソースコードをScrapbox的に管理]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1653604709,
      "updated": 1653604757
    },
    {
      "id": "629001961280f00000a54fb2",
      "text": " 「階層」「フラット」「ディレクトリ」「フォルダ」で引っかからなかったのでないと思ってしまった",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1653604758,
      "updated": 1653604787
    },
    {
      "id": "629001b31280f00000a54fb3",
      "text": " なるほど。フラットをscrapbox的と表現しているわけか",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1653604787,
      "updated": 1653604805
    },
    {
      "id": "629001c51280f00000a54fb4",
      "text": " 　この言い換えを思いつかないとたどり着かないな",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1653604805,
      "updated": 1653604825
    },
    {
      "id": "629001931280f00000a54fb1",
      "text": "",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1653604756,
      "updated": 1653604756
    }
  ]
}