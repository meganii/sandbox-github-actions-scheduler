{
  "id": "63972ccaa7108c001e042088",
  "title": "「キー列」の定義がだいじ",
  "created": 1670851787,
  "updated": 1670853047,
  "lines": [
    {
      "id": "63972ccaa7108c001e042088",
      "text": "「キー列」の定義がだいじ",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2fdd",
      "text": "from [雑に読む「達人に学ぶDB設計徹底指南書」]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2fde",
      "text": "「[キー列]」の定義がだいじ",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2fdf",
      "text": " >ここで特に重要なのは、「[キー]（[key])」という列を定義することです。キーとは、ある特定の列の値を決定するための列（複数列でも良い）のことです。(p.31)",
      "userId": "5b5e7121417cf700145b98c2",
      "created": 1670851787,
      "updated": 1670853037
    },
    {
      "id": "63972cca5e90c00000ab2fe0",
      "text": " いわゆる[UUID]のことかな[issac-37765679.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851791
    },
    {
      "id": "63972cca5e90c00000ab2fe1",
      "text": " 　UUIDに限りません。ある特定の列の値を[一意]に決定できれば大丈夫です[基素.icon]",
      "userId": "5b5e7121417cf700145b98c2",
      "created": 1670851787,
      "updated": 1670853047
    },
    {
      "id": "63972cca5e90c00000ab2fe2",
      "text": " 　[\" ある特定の列の値を決定するための列（複数列でも良い）]を理解するために変な例をたくさんあげてみる",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2fe3",
      "text": " 　こういうテーブルがあったとする",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2fe4",
      "text": " 　　table:例",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2fe5",
      "text": " 　　 社員番号\t入社年\t名前",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2fe6",
      "text": " 　　 1\t2000\t田中太郎",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2fe7",
      "text": " 　　 2\t2001\t田中次郎",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2fe8",
      "text": " 　　 3\t2002\t田中太郎",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2fe9",
      "text": " 　　ここでの社員番号は連番なので一番キーとして便利",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2fea",
      "text": " 　　　社員番号1番の人は2000年入社の田中太郎さんしかいない",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2feb",
      "text": " 　　　ここはわかる[issac-37765679.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2fec",
      "text": " 　　入社年も被っていないから（もし、もう社員が増減しないという非現実的な仮定を置くなら）キーにできる",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2fed",
      "text": " 　　　2000年入社の人はここでは1人しかいないので、「2000年入社の人」で社員番号1番の田中太郎さんが一意に定まる",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2fee",
      "text": " 　　　注意：非現実的な仮定なので、普通はキーにしません（多分どんなシステムでもしない）。あくまで理解のための例",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2fef",
      "text": " 　　　仮に2000年入社の人がもう一人増えたら、キーにはできないということですね[issac-37765679.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2ff0",
      "text": " 　　　　入社年がこのテーブルにおいて一意でなくなっちゃうから",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2ff1",
      "text": " 　　　　そうですね[基素.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2ff2",
      "text": " 　　ところで、田中太郎さんは2人いるので名前の列は（単体では）キーにならない",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2ff3",
      "text": " 　　　「田中太郎」という情報だけでは社員番号1なのか3なのかわからない",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2ff4",
      "text": " 　　　でも「入社年と名前」の組み合わせなら重複がないので社員番号を一位に定めるキーになる",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2ff5",
      "text": " 　　　　2000年入社の田中太郎さんは社員番号1番の人しかいない",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2ff6",
      "text": " 　　　　　今回の例だと入社年だけで決められちゃうからそれに何足しても一意にに決まるので例が悪かった",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2ff7",
      "text": " 　　　　なるほど[issac-37765679.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2ff8",
      "text": " 　　みたいな感じ",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2ff9",
      "text": " 　　「[一意に定まる]」というのが重要なんだなあ[issac-37765679.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851814
    },
    {
      "id": "63972cca5e90c00000ab2ffa",
      "text": " 　　　これは一つの属性だけに限らず、複数の属性で指定できる",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2ffb",
      "text": " 　　　　(使ってる語彙が正しくなさそうだけれども)",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2ffc",
      "text": " 　　　キーにはいろいろな名前がついているのですが、複雑になるので後から出てくるのかな[基素.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2ffd",
      "text": " 　　社員名簿があるとして、全員違う名前だから名前をキー列にしたろ！ってするとひどいことになるんだろうな[issac-37765679.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2ffe",
      "text": " 　　　あとから同じ名字の人や名前の人が入ってきて一意性が保てなくなる",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab2fff",
      "text": " 　　　だからそういう列はキーにしてはならない(単独で)",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab3000",
      "text": " 　　　そういうのを考えるのが面倒なので[連番id列]を作るのが普通だと思います[基素.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab3001",
      "text": " 　　　　そしてそれが[アンチパターン]になることも",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851806
    },
    {
      "id": "63972cca5e90c00000ab3002",
      "text": " 　　　　 [https://qiita.com/ayayo/items/ba38853bca0c2cc2acb7 SQLアンチパターン勉強会 第三回：IDリクワイアド - Qiita]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab3003",
      "text": " 　　　　  まだ理解出来ない[issac-37765679.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab3004",
      "text": " 　　　　  これは実際にやるような人が考えることなのでとりあえず無視してOK[基素.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab3005",
      "text": " 　ここでのキーは[スーパーキー]かな？",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab3006",
      "text": " 　　https://atmarkit.itmedia.co.jp/ait/articles/1703/01/news180.html",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab3007",
      "text": " 　　[スーパーキー]、[候補キー]、[主キー]、[外部キー]がなんなのかまだ頭でも心でもわからない[issac-37765679.icon]",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab3008",
      "text": "  　　いつか再訪する",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab3009",
      "text": " 複数列を使ってもいい",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    },
    {
      "id": "63972cca5e90c00000ab300a",
      "text": "",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1670851787,
      "updated": 1670851787
    }
  ]
}