{
  "id": "67f396a387b92f9f06aa4a3a",
  "title": "constructor には何を書くべきであり、何を書くべきではないのか",
  "created": 1744017069,
  "updated": 1744032418,
  "lines": [
    {
      "id": "67f396a387b92f9f06aa4a3a",
      "text": "constructor には何を書くべきであり、何を書くべきではないのか",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017069,
      "updated": 1744017069
    },
    {
      "id": "67f396ad000000000020452c",
      "text": "#opendraft",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017070,
      "updated": 1744017075
    },
    {
      "id": "67f39d150000000000aa60eb",
      "text": "published at: [Qiita.icon][https://qiita.com/Summer498/items/00f63924b85e53e3760a constructor には何を書くべきであり、何を書くべきではないのか - Qiita][Summer498.icon]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744018710,
      "updated": 1744019213
    },
    {
      "id": "67f396b2000000000020452e",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017075,
      "updated": 1744017075
    },
    {
      "id": "67f39d0f0000000000aa60ea",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744018704,
      "updated": 1744018704
    },
    {
      "id": "67f396de000000000020453d",
      "text": "Abstract",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017120,
      "updated": 1744017125
    },
    {
      "id": "67f396e40000000000204540",
      "text": "constructor の役割は「インスタンスが利用可能になるために必要な初期状態を作ること」に限定することが望ましい。",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017125,
      "updated": 1744017215
    },
    {
      "id": "67f3970d0000000000204542",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017167,
      "updated": 1744017167
    },
    {
      "id": "67f396b2000000000020452f",
      "text": "# constructor に書くべきこと",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017075,
      "updated": 1744017206
    },
    {
      "id": "67f396be0000000000204531",
      "text": "\t- クラスのインスタンスが初期状態として最低限必要なプロパティの初期化・設定",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017087,
      "updated": 1744017098
    },
    {
      "id": "67f396be0000000000204533",
      "text": " - 依存性注入（Dependency Injection）により外部から渡されるオブジェクトや設定値の保持",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017087,
      "updated": 1744017099
    },
    {
      "id": "67f397140000000000204547",
      "text": "## プロパティの初期化",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017173,
      "updated": 1744017223
    },
    {
      "id": "67f39725000000000020454c",
      "text": " クラスが正常動作するために最低限必要な状態を、引数から受け取った値、またはデフォルト値で設定する。",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017190,
      "updated": 1744017224
    },
    {
      "id": "67f39724000000000020454a",
      "text": "## 依存性の注入（DI）",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017189,
      "updated": 1744017240
    },
    {
      "id": "67f39753000000000020454f",
      "text": " 外部のオブジェクトやサービスを受け取って内部に保持する。テスト容易性・疎結合性のために重要。",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017236,
      "updated": 1744017241
    },
    {
      "id": "67f39752000000000020454d",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017236,
      "updated": 1744017236
    },
    {
      "id": "67f396be0000000000204535",
      "text": "# constructor に書くべきでないこと",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017087,
      "updated": 1744017689
    },
    {
      "id": "67f396be0000000000204537",
      "text": " - 複雑なロジックやビジネスロジックの実行（メソッドとして別に切り出す）",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017689,
      "updated": 1744017690
    },
    {
      "id": "67f396d2000000000020453c",
      "text": " - グローバルな状態の変更や副作用を伴う処理（副作用の少ない設計にすべき）",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017107,
      "updated": 1744017108
    },
    {
      "id": "67f396ae000000000020452d",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017071,
      "updated": 1744017686
    },
    {
      "id": "67f39813000000000020455f",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017428,
      "updated": 1744017428
    },
    {
      "id": "67f3970f0000000000204545",
      "text": "## 複雑なビジネスロジックや条件分岐処理",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017168,
      "updated": 1744017280
    },
    {
      "id": "67f397790000000000204555",
      "text": " `constructor` はインスタンス生成のための設定に専念するべきであり、ロジックを大量に含めると読みやすさ・保守性が低下する。",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017274,
      "updated": 1744017402
    },
    {
      "id": "67f397790000000000204557",
      "text": " ビジネスロジックは専用のメソッドやファクトリメソッドに分離すべき。",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017274,
      "updated": 1744017277
    },
    {
      "id": "67f397800000000000204558",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017281,
      "updated": 1744017281
    },
    {
      "id": "67f397800000000000204559",
      "text": "## グローバルな状態変更や副作用のある処理",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017281,
      "updated": 1744017291
    },
    {
      "id": "67f39788000000000020455c",
      "text": " グローバルな副作用を `constructor` で引き起こすと、テストやデバッグが難しくなる。",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017289,
      "updated": 1744017419
    },
    {
      "id": "67f39794000000000020455d",
      "text": " これを避けるため、`constructor` は純粋にインスタンス自身に関することに集中すべき。",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017301,
      "updated": 1744017423
    },
    {
      "id": "67f39780000000000020455a",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017281,
      "updated": 1744017281
    },
    {
      "id": "67f397b0000000000020455e",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017329,
      "updated": 1744017329
    },
    {
      "id": "67f399260000000000204581",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017704,
      "updated": 1744017704
    },
    {
      "id": "67f399260000000000204582",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017704,
      "updated": 1744017704
    },
    {
      "id": "67f399260000000000204583",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017704,
      "updated": 1744017704
    },
    {
      "id": "67f398740000000000204563",
      "text": "誤りを取り除いておく",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017526,
      "updated": 1744017558
    },
    {
      "id": "67f3988d0000000000204565",
      "text": "\t# constructor に書くべきでないこと",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017550,
      "updated": 1744017664
    },
    {
      "id": "67f398ff0000000000204568",
      "text": "  - 非同期処理や長時間かかる処理（ネットワークアクセス、ファイルアクセスなど）",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff0000000000204569",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017677
    },
    {
      "id": "67f398ff000000000020456c",
      "text": " ## 非同期処理（ネットワークアクセスやファイルアクセス）",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff000000000020456d",
      "text": "  constructor は本質的に同期処理なので、非同期処理を `constructor` に書くと設計が複雑化しエラー処理も難しくなる。",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff000000000020456e",
      "text": "  代替案として、非同期初期化は別の専用のメソッドや `static` メソッドを作るべき。",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff000000000020456f",
      "text": "  JSでは非同期処理はコンストラクター内に書けない[bsahd.icon]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff0000000000204570",
      "text": "  \t厳密には、コンストラクターがPromiseを返したりとかはできない",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f39b0100000000006717a4",
      "text": "  \tコンストラクターは生成したインスタンス以外は返せないので、コールバックなどの別チャネルでやる必要がある",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744018177,
      "updated": 1744018194
    },
    {
      "id": "67f398ff0000000000204571",
      "text": "  \tコールバックでやるとか頑張ればできる",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff0000000000204572",
      "text": "  \t\t\t逆に言うと頑張らないとできないってことやね[Summer498.icon]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff0000000000204573",
      "text": "  \t\tcode:js",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff0000000000204574",
      "text": "  \t\t class AsyncConstructor{",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff0000000000204575",
      "text": "  \t\t     constructor(cb){",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff0000000000204576",
      "text": "  \t\t         fetch(/* URL */).then((res)=>{",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff0000000000204577",
      "text": "  \t\t             return res.json();",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff0000000000204578",
      "text": "  \t\t         }).then((json)=>{",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff0000000000204579",
      "text": "  \t\t             this.data = json;",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff000000000020457a",
      "text": "  \t\t             cb(this);",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff000000000020457b",
      "text": "  \t\t         })",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff000000000020457c",
      "text": "  \t\t     }",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff000000000020457d",
      "text": "  \t\t }",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f3ae010000000000c08044",
      "text": "  \t\thttps://qiita.com/Summer498/items/00f63924b85e53e3760a#constructor-に書くべきでないこと",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744023041,
      "updated": 1744023060
    },
    {
      "id": "67f3ae130000000000c08058",
      "text": "  \t\t\tこの悪い例だとdataの準備完了が外部から簡単に受け取れない",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744023060,
      "updated": 1744023078
    },
    {
      "id": "67f3d1b900000000000a3823",
      "text": "  \t\t\tひーん[Summer498.icon]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744032187,
      "updated": 1744032193
    },
    {
      "id": "67f3d29300000000004da790",
      "text": "  \t\t\t同期XHRという手もあるぞ[bsahd.icon]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1744032404,
      "updated": 1744032418
    },
    {
      "id": "67f398ff000000000020457e",
      "text": " \t\tGPT くん派手に間違えてて草[Summer498.icon]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017664
    },
    {
      "id": "67f398ff000000000020457f",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017664,
      "updated": 1744017671
    },
    {
      "id": "67f398780000000000204564",
      "text": "",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1744017530,
      "updated": 1744017530
    }
  ]
}