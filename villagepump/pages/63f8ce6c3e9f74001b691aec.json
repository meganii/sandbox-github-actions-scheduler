{
  "id": "63f8ce6c3e9f74001b691aec",
  "title": "JavaScriptのアロー関数",
  "created": 1677250159,
  "updated": 1725485071,
  "lines": [
    {
      "id": "63f8ce6c3e9f74001b691aec",
      "text": "JavaScriptのアロー関数",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250159,
      "updated": 1677250162
    },
    {
      "id": "63f8ce7d7838e30000ed2c50",
      "text": "[ () => {}]みたいなの",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250174,
      "updated": 1677250325
    },
    {
      "id": "63f8cf947838e30000ed2c69",
      "text": "[arrow function]とも",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250452,
      "updated": 1677250461
    },
    {
      "id": "63f8ce827838e30000ed2c51",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250179,
      "updated": 1677250343
    },
    {
      "id": "63f8cf297838e30000ed2c53",
      "text": "なんかいろいろ書き方がある[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250346,
      "updated": 1677250357
    },
    {
      "id": "63f8cfc37838e30000ed2c6c",
      "text": "[https://code2svg.vercel.app/svg/https://scrapbox.io/api/code/villagepump/JavaScriptのアロー関数/arrows.js#.svg]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250499,
      "updated": 1677250515
    },
    {
      "id": "63f8cfc37838e30000ed2c6d",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250499,
      "updated": 1677250499
    },
    {
      "id": "63f8cf347838e30000ed2c54",
      "text": "code:arrows.js",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250357,
      "updated": 1677250364
    },
    {
      "id": "63f8cf3c7838e30000ed2c55",
      "text": " () => {console.log(\"\");} // 引数なし",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250364,
      "updated": 1677250364
    },
    {
      "id": "63f8cf747838e30000ed2c64",
      "text": "引数が無いアロー関数",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250421,
      "updated": 1677250451
    },
    {
      "id": "63f8cf847838e30000ed2c68",
      "text": "最初の`()`は省略不可能",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250436,
      "updated": 1677250546
    },
    {
      "id": "63f8cfac7838e30000ed2c6b",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250477,
      "updated": 1677250477
    },
    {
      "id": "63f8cf617838e30000ed2c5f",
      "text": "code:arrows.js",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250402,
      "updated": 1677250402
    },
    {
      "id": "63f8cf3c7838e30000ed2c56",
      "text": " (e) => {console.log(e);} // 引数あり",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250364,
      "updated": 1677250364
    },
    {
      "id": "63f8cf7d7838e30000ed2c65",
      "text": "引数（`e`）があるアロー関数",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250430,
      "updated": 1677250565
    },
    {
      "id": "63f8d00c7838e30000ed2c71",
      "text": "複数の引数がある場合は[カンマ区切り]で記述できる",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250572,
      "updated": 1677250591
    },
    {
      "id": "63f8d01e7838e30000ed2c72",
      "text": "\t例) `(e, f, g)`",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250591,
      "updated": 1677250602
    },
    {
      "id": "63f8cff47838e30000ed2c6e",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250548,
      "updated": 1677250548
    },
    {
      "id": "63f8cf627838e30000ed2c60",
      "text": "code:arrows.js",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250403,
      "updated": 1677250403
    },
    {
      "id": "63f8cf3c7838e30000ed2c57",
      "text": " e => {console.log(e);} // 上と全く同じ（()を省略しただけ）",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250364,
      "updated": 1677250364
    },
    {
      "id": "63f8d0097838e30000ed2c6f",
      "text": "引数が1つしかない場合限定で`()`を省略できる",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250569,
      "updated": 1677251114
    },
    {
      "id": "63f989421280f00000caa58f",
      "text": "[deno fmt]が`()`を必ず付けてくるので、時間がないときにスクボで適当に書いたコード以外は`()`を略さないようにしている[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1677297986,
      "updated": 1677298051
    },
    {
      "id": "66d8825073e52200006cff8a",
      "text": "[コードゴルフ](もどき)をしていると、引数なしより引数1つのほうが文字数が少ないのでそっちを採用することがある[綾坂こと.icon]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1725465169,
      "updated": 1725465191
    },
    {
      "id": "66d8826673e52200006cff8b",
      "text": "\t`()=>{……}`より`u=>{……}`のほうが1文字少ない",
      "userId": "62919f6444e78d001d73e522",
      "created": 1725465191,
      "updated": 1725465265
    },
    {
      "id": "66d8cffa1280f000002a32d7",
      "text": "\tこのあたりはminifier2に任せている[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1725485051,
      "updated": 1725485071
    },
    {
      "id": "63f8d0097838e30000ed2c70",
      "text": "",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250569,
      "updated": 1677250570
    },
    {
      "id": "63f8cf667838e30000ed2c62",
      "text": "code:arrows.js",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250407,
      "updated": 1677250407
    },
    {
      "id": "63f8cf3c7838e30000ed2c59",
      "text": " () => true; // trueを返す",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250364,
      "updated": 1677250409
    },
    {
      "id": "63f8d22b7838e30000696a4f",
      "text": "右側を中括弧`{}`で囲まなければ、右側に書いた値や計算式自体が戻り値になる",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677251116,
      "updated": 1677251162
    },
    {
      "id": "63f8d31d7838e30000696a57",
      "text": "中括弧で囲んでいて、かつ[return]を書いていない場合は値を返さない",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677251357,
      "updated": 1677251391
    },
    {
      "id": "63f8d3417838e30000696a58",
      "text": "\t上記の上から3つまでが該当する",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677251394,
      "updated": 1677251419
    },
    {
      "id": "66d8841073e52200006cff93",
      "text": "これつまり、アロー関数式の構文に式を取るものと文を取るものがあるな？[綾坂こと.icon]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1725465617,
      "updated": 1725465657
    },
    {
      "id": "66d8843a73e52200006cff94",
      "text": " [MDN Web Docs https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Functions/Arrow_functions#%E6%A7%8B%E6%96%87]に書いてあるやんけ",
      "userId": "62919f6444e78d001d73e522",
      "created": 1725465658,
      "updated": 1725465881
    },
    {
      "id": "66d8844b73e52200006cff95",
      "text": " \t右側に式をいれる : `[async ]() => 式`, `[async ]引数 => 式`, `[async ](引数1[, 引数2[, ……, 引数N]]) => 式`",
      "userId": "62919f6444e78d001d73e522",
      "created": 1725465676,
      "updated": 1725465834
    },
    {
      "id": "66d8848b73e52200006cff96",
      "text": " \t右側に文をいれる`[async ]() => {文}`, `[async ]引数 => {文}`, `[async ](引数1[, 引数2[, ……, 引数N]]) => {文}`",
      "userId": "62919f6444e78d001d73e522",
      "created": 1725465740,
      "updated": 1725465834
    },
    {
      "id": "66d884eb73e52200006cff97",
      "text": " \t`{}`があれば文、なければ式として解釈してる",
      "userId": "62919f6444e78d001d73e522",
      "created": 1725465835,
      "updated": 1725465863
    },
    {
      "id": "63f9297e6eb4060000c8aceb",
      "text": "",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1677273471,
      "updated": 1677273472
    },
    {
      "id": "63f929286eb4060000c8ace8",
      "text": "returnなしでオブジェクトを返そうとして、できないのをたまにやる[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1677273385,
      "updated": 1677273466
    },
    {
      "id": "63f929546eb4060000c8acea",
      "text": "　オブジェクト生成とブロックが同じ中括弧なのが問題",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1677273428,
      "updated": 1677273451
    },
    {
      "id": "63f9783f7838e30000f58de5",
      "text": "　毎回`()=>{return{foo:bar}}`って書いてる[Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677293632,
      "updated": 1677293688
    },
    {
      "id": "63f978797838e30000f58de6",
      "text": "　　もっといい方法ないのかな",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677293690,
      "updated": 1677293695
    },
    {
      "id": "63f987191280f00000caa587",
      "text": "　[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1677297433,
      "updated": 1677297437
    },
    {
      "id": "63f9871a1280f00000caa588",
      "text": "　 code:arrows.js",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1677297437,
      "updated": 1677297440
    },
    {
      "id": "63f987201280f00000caa589",
      "text": "　  () => ({ foo: bar });",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1677297440,
      "updated": 1677297451
    },
    {
      "id": "63f8d22c7838e30000696a50",
      "text": "\t\tなるほど！次からこうしよう[inajob.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1677251117,
      "updated": 1677297825
    },
    {
      "id": "63fa5c757838e30000365eae",
      "text": "\t\t[* ま　じ　か　よ　][Mijinko_SD.icon]",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677352054,
      "updated": 1677352080
    },
    {
      "id": "63fa5c7c7838e30000365eaf",
      "text": "\t\t\tこの書き方出来るのか、知らなかった",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677352061,
      "updated": 1677352070
    },
    {
      "id": "6527df62ed60e600009e0293",
      "text": "\t\t\t+1[Summer498.icon]",
      "userId": "6436266c7ac3c0001bed60e6",
      "created": 1697111907,
      "updated": 1697111909
    },
    {
      "id": "63fab89d1280f00000d1b78b",
      "text": "\t\t自分もだれかのコードを読んで初めて知りました[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1677375646,
      "updated": 1677375664
    },
    {
      "id": "66d882cb73e52200006cff8c",
      "text": "\t\tブロックと解釈されないように`()`で囲うのはこれ以外でも使う気がする[綾坂こと.icon]",
      "userId": "62919f6444e78d001d73e522",
      "created": 1725465291,
      "updated": 1725465320
    },
    {
      "id": "66d882e873e52200006cff8d",
      "text": "\t\t\t具体例が出てこないけど",
      "userId": "62919f6444e78d001d73e522",
      "created": 1725465321,
      "updated": 1725465326
    },
    {
      "id": "63f988a36eb4060000716623",
      "text": "",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1677297828,
      "updated": 1677297828
    },
    {
      "id": "63f8cf687838e30000ed2c63",
      "text": "code:arrows.js",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250409,
      "updated": 1677250409
    },
    {
      "id": "63f8cf3c7838e30000ed2c5a",
      "text": " () => {return true;} // trueを返す",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250364,
      "updated": 1677250364
    },
    {
      "id": "63f8cf507838e30000ed2c5e",
      "text": "右側を中括弧で囲むと、普通の関数と同じように中に命令文を書けるようになる",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677250384,
      "updated": 1677251278
    },
    {
      "id": "63f8d2797838e30000696a51",
      "text": "\tちゃんと整形して書くと以下のようになる",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677251193,
      "updated": 1677251295
    },
    {
      "id": "63f8d28c7838e30000696a52",
      "text": " code:arrow_formatted.js",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677251213,
      "updated": 1677251282
    },
    {
      "id": "63f8d2a27838e30000696a54",
      "text": "  () => {",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677251234,
      "updated": 1677251282
    },
    {
      "id": "63f8d2a47838e30000696a55",
      "text": "    return true;",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677251237,
      "updated": 1677251282
    },
    {
      "id": "63f8d2aa7838e30000696a56",
      "text": "  }",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677251242,
      "updated": 1677251282
    },
    {
      "id": "63f8d4117838e300006ca337",
      "text": " もちろん、複数行で書くことも出来る",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677251602,
      "updated": 1677251617
    },
    {
      "id": "63f8d4207838e300006ca338",
      "text": " code:arrow2.js",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677251617,
      "updated": 1677251622
    },
    {
      "id": "63f8d4257838e300006ca339",
      "text": "  () => {",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677251622,
      "updated": 1677251626
    },
    {
      "id": "63f8d42f7838e300006ca33c",
      "text": "    console.log(\"真でも喰らえ！！！！！\");",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677251632,
      "updated": 1677251712
    },
    {
      "id": "63f8d4297838e300006ca33a",
      "text": "    return true;",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677251626,
      "updated": 1677251626
    },
    {
      "id": "63f8d4297838e300006ca33b",
      "text": "  }",
      "userId": "60fb0a79f3364000237838e3",
      "created": 1677251626,
      "updated": 1677251626
    },
    {
      "id": "66d8840d73e52200006cff91",
      "text": "",
      "userId": "62919f6444e78d001d73e522",
      "created": 1725465613,
      "updated": 1725465613
    }
  ]
}