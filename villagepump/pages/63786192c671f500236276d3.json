{
  "id": "63786192c671f500236276d3",
  "title": "HoudiniとRhinocerousの設計思想の違いについて",
  "created": 1668833684,
  "updated": 1668847314,
  "lines": [
    {
      "id": "63786192c671f500236276d3",
      "text": "HoudiniとRhinocerousの設計思想の違いについて",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833684,
      "updated": 1668833840
    },
    {
      "id": "63786230e8ae9f0000f63d13",
      "text": "あるいは、「ツールが思考の限界を規定する」問題について",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833840,
      "updated": 1668833877
    },
    {
      "id": "63786230e8ae9f0000f63d14",
      "text": "",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833841,
      "updated": 1668833841
    },
    {
      "id": "63786196e8ae9f0000f63cff",
      "text": "https://blog.syntegrate.jp/2021/07/09/internal-competition-1-jp/",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833687,
      "updated": 1668833687
    },
    {
      "id": "63786200e8ae9f0000f63d10",
      "text": "よそで書き込んだものを持ってきました。[シンテグレート]という、複雑な曲面形状をもった建築のためのエンジニアリングのコンサルを専門とする会社の、上のリンクのブログ記事の、実況メモみたいなものです。 [kentnkmr.icon]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833792,
      "updated": 1668834350
    },
    {
      "id": "6378621ce8ae9f0000f63d12",
      "text": "",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833820,
      "updated": 1668833820
    },
    {
      "id": "63786200e8ae9f0000f63d11",
      "text": "---",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833793,
      "updated": 1668833882
    },
    {
      "id": "6378625ae8ae9f00000879b8",
      "text": "",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833882,
      "updated": 1668833882
    },
    {
      "id": "63786196e8ae9f0000f63d00",
      "text": " [* 1. [Rhinocerous]は[Brep](Boundary Representation、ビーレップ)という「線・面」の幾何的定義をベースに、さらに拡張した[NURBS]（Non-uniform rational B-spline、ナーブス）という数学的モデルをベースにすべての描画（線・面・立体）を行っているらしいのですが、これは以下のことを意味します。]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833687,
      "updated": 1668834056
    },
    {
      "id": "63786196e8ae9f0000f63d01",
      "text": "  [/ ご存知の通りライノセラスは基本的にサーフェスでモデリングをしていくソフトで、Brep(Boundary Representation)という名の通り、サーフェスの境界（Boundary）で面を規定しています。そのためサーフェスには表裏、方向、などさまざまな情報が入っています。だからこそUntrimをすると、Trimする前のサーフェスに復元できたりもするわけですが、それだけ情報を保持しているということは、逆に一回一回の操作でそれだけの情報を計算しているので、当然複雑になるにつれて情報量は増え、操作はどんどん重くなります。]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833687,
      "updated": 1668833788
    },
    {
      "id": "63786196e8ae9f0000f63d02",
      "text": " [* 2. 他方、「メッシュ」とよばれる立体の幾何学的表現方法が、いわばBrepのオルタナティブとして存在するそうです。これは雑に言えば三角形の面の集合で立体を表現するもので、次のような特徴を持ちます。]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833687,
      "updated": 1668834374
    },
    {
      "id": "63786196e8ae9f0000f63d03",
      "text": "  [/ 一方、メッシュはそういった情報を省くためにジオメトリのデータサイズとしてはかなり軽くなりますが、一度メッシュにしたオブジェクトは不可逆的で、元のNURBSには戻せません。メッシュにした途端に滑らかなサーフェスは失われるので、通常のモデリングの中で積極的にメッシュにするということはまずありません。ありえるとすれば、他のソフトウェアとの互換する際、止むを得ず行うくらいです。（それでもその後メッシュのデータ形式のまま作業を進めていくことはしません）]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833687,
      "updated": 1668833781
    },
    {
      "id": "63786196e8ae9f0000f63d04",
      "text": " [* 3. そして[Houdini]というのは、「敢えて」メッシュをつかって立体を表現するという設計思想から出発しているといえます。するとこうなります。]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833687,
      "updated": 1668834332
    },
    {
      "id": "63786196e8ae9f0000f63d05",
      "text": "  [/ メッシュの強み]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833687,
      "updated": 1668833758
    },
    {
      "id": "63786196e8ae9f0000f63d06",
      "text": "  [/ しかしこの一見ネガティブなメッシュではありますが、映像業界を始めとして使用されている強みとして、非常に細かい複雑な形状のモデル、またそれをアニメーションとして変形、動かしたいと思ったらメッシュの軽さに軍配が上がります。また煙や水の流れなどのシミュレーションもモデルとして作れるのはメッシュならではの軽さゆえ出来るものだと思います。]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833687,
      "updated": 1668833761
    },
    {
      "id": "63786196e8ae9f0000f63d07",
      "text": "  [/ Houdiniにおいて私が感動した点はまず]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833687,
      "updated": 1668833764
    },
    {
      "id": "63786196e8ae9f0000f63d08",
      "text": "   [/ Booleanが怖くない（ライノセラスではいつもBooleanは半分くらい失敗するだろうなーという心持ち）→ 補足：これはBrepのある種の限界で、たまに数学的に立体のブーリアン演算の結果が決定できない状態に陥ることがある、ということを意味していると思われます。]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833687,
      "updated": 1668833778
    },
    {
      "id": "63786196e8ae9f0000f63d09",
      "text": "   [/ 扱えるジオメトリの数が桁違い（何万個の点を入れてもへっちゃら）→ 数学的には全く同じ形状をBrepとメッシュの双方で表現できるのですが、ただの三角形の集合であるメッシュの方が圧倒的に軽くなる。と同時に、流体シミュレーション等でもちいるアルゴリズムでも処理しやすいデータになっている、ということかと思われます。]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833687,
      "updated": 1668833772
    },
    {
      "id": "63786196e8ae9f0000f63d0a",
      "text": "   [/ 膨大な数のジオメトリを動かしてアニメーションを作れる（GHでパラメータを変えると日が暮れるくらい時間がかかりそうな類の処理も速い）→これは上の話と被りますが、シンプルにデータ量が少ないので必要な演算の回数も少なく、Brepで表現された形状よりもかなり低コストにジオメトリの操作が行えることを指していると思います。これはそのまま、デザイン上の表現の広がりに直結します。]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833687,
      "updated": 1668833920
    },
    {
      "id": "6378627fe8ae9f00000879b9",
      "text": " [* 4. これをふまえて、重要な洞察として、「[ツールがデザインの限界を規定する]」という話がでてきます。]",
      "userId": "5f0ae250e8cd56001ee2dacc",
      "created": 1668833920,
      "updated": 1668847314
    },
    {
      "id": "63786196e8ae9f0000f63d0c",
      "text": "  [/ （Houdiniは）ソフトウェアの特性がかなり特徴的なので、これまでライノセラス系のサーフェスモデリングツールを触ってきた人たちからすると作れるものが根本から違うため、デザインの発想自体が変わると思います。実はこれは、ツールの限界が思考の限界を暗に決めてしまっているということでもあり、特にコンピュテーショナルな分野においてはツールの進化とデザインの質は密接に関わっているので、行き詰まっている人は別のツールを使ってみるとそれを打破する突破口になるかもしれません。]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833687,
      "updated": 1668833922
    },
    {
      "id": "63786196e8ae9f0000f63d0d",
      "text": " [* 5. そして彼らは「ふつうにCGとかパースもつかえばいいじゃん」という結論に至ります。]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833687,
      "updated": 1668833935
    },
    {
      "id": "63786196e8ae9f0000f63d0e",
      "text": "  [/ つまり何が言いたいかというと、適材適所でツールを使い分ける必要があるということです。すべてのことを一つのツールでやるのではなく、得意不得意を把握した上で使い分けることがより大事ということです。これはツールだけの話ではなく、模型かCGか論争にも言えることで、どちらか一方がすべてをカバー出来るのではなく、空間の把握の際は模型を使えばいいし、ビジュアルで空気感を見せたいときはCGやパースを使えばよいと思います。]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833687,
      "updated": 1668833925
    },
    {
      "id": "63786196e8ae9f0000f63d0f",
      "text": " 　[/ シンテグレートの業務でも様々な状況に出くわします。常に頭を柔らかくして、その時々で柔軟な対応が出来るように準備しておくことが大切だなと思います。]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833687,
      "updated": 1668834094
    },
    {
      "id": "63786193e8ae9f0000f63cfe",
      "text": "",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668833684,
      "updated": 1668833684
    },
    {
      "id": "6378632fe8ae9f00000879bf",
      "text": "良い結論だなと思いました。[kentnkmr.icon]",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668834095,
      "updated": 1668834101
    },
    {
      "id": "63786333e8ae9f00000879c0",
      "text": "",
      "userId": "5a0290fe4752660012e8ae9f",
      "created": 1668834100,
      "updated": 1668834100
    }
  ]
}