{
  "id": "63d03096a30708001d394364",
  "title": "雑に読む「問題解決力を鍛える！アルゴリズムとデータ構造」",
  "created": 1674588313,
  "updated": 1677227906,
  "lines": [
    {
      "id": "63d03096a30708001d394364",
      "text": "雑に読む「問題解決力を鍛える！アルゴリズムとデータ構造」",
      "userId": "59fb21121207900012774b17",
      "created": 1674588313,
      "updated": 1674588315
    },
    {
      "id": "63d0309a774b170000601743",
      "text": "[アルゴリズム体操]",
      "userId": "616ca537c25a92001e5f1e0d",
      "created": 1674588315,
      "updated": 1675333209
    },
    {
      "id": "63db5378774b170000353b9d",
      "text": " なにこれ？w[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1675318137,
      "updated": 1675318144
    },
    {
      "id": "63d030f5774b170000601750",
      "text": "[問題解決力を鍛える！アルゴリズムとデータ構造]を雑に読む",
      "userId": "59fb21121207900012774b17",
      "created": 1674588405,
      "updated": 1674588405
    },
    {
      "id": "63d0ab13774b17000092f3eb",
      "text": " [雑に読む「達人に学ぶDB設計徹底指南書」]にインスパイアされた",
      "userId": "59fb21121207900012774b17",
      "created": 1674619668,
      "updated": 1674619677
    },
    {
      "id": "63d0309e774b170000601745",
      "text": " 2020",
      "userId": "59fb21121207900012774b17",
      "created": 1674588319,
      "updated": 1674588349
    },
    {
      "id": "63d03126774b170000601765",
      "text": " https://bookclub.kodansha.co.jp/product?item=0000275430",
      "userId": "59fb21121207900012774b17",
      "created": 1674588454,
      "updated": 1674588454
    },
    {
      "id": "63d030b6774b170000601746",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1674588342,
      "updated": 1674588343
    },
    {
      "id": "63f79764774b1700008f177d",
      "text": "注意：章末問題の回答が書いてある可能性があります（あっている保証はないです）",
      "userId": "59fb21121207900012774b17",
      "created": 1677170532,
      "updated": 1677171447
    },
    {
      "id": "63f79764774b1700008f177e",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1677170532,
      "updated": 1677170532
    },
    {
      "id": "63d030b7774b170000601747",
      "text": "目標[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588343,
      "updated": 1674588346
    },
    {
      "id": "63d030ba774b170000601748",
      "text": "　何日かに1回読む",
      "userId": "59fb21121207900012774b17",
      "created": 1674588346,
      "updated": 1674588365
    },
    {
      "id": "63d030cd774b17000060174b",
      "text": "　コードはマネでもいいから書く",
      "userId": "59fb21121207900012774b17",
      "created": 1674588366,
      "updated": 1674588377
    },
    {
      "id": "63d031e7774b170000601769",
      "text": "　　本書はC++になっているけどGoかTypeScriptで書こうかな。",
      "userId": "59fb21121207900012774b17",
      "created": 1674588647,
      "updated": 1674588825
    },
    {
      "id": "63d07cb71280f0000010d287",
      "text": " 　　[Wandbox]とかを使えば、C++でも環境構築なしに試せる[takker.icon]",
      "userId": "5ef2bdebb60650001e1280f0",
      "created": 1674607799,
      "updated": 1674607820
    },
    {
      "id": "63d030da774b17000060174d",
      "text": "　実例大事",
      "userId": "59fb21121207900012774b17",
      "created": 1674588379,
      "updated": 1674588380
    },
    {
      "id": "63db532e774b170000353b9c",
      "text": "　 [使えないと意味ない](過激派)",
      "userId": "60508ed36a7abc00235e90c0",
      "created": 1675318063,
      "updated": 1675333392
    },
    {
      "id": "63d030c6774b170000601749",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1674588359,
      "updated": 1674588359
    },
    {
      "id": "63d0310d774b170000601751",
      "text": "　https://github.com/drken1215/book_algorithm_solution",
      "userId": "59fb21121207900012774b17",
      "created": 1674588429,
      "updated": 1674588430
    },
    {
      "id": "63d0310f774b170000601752",
      "text": "　　著者の補足資料",
      "userId": "59fb21121207900012774b17",
      "created": 1674588431,
      "updated": 1674588434
    },
    {
      "id": "63d030c6774b17000060174a",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1674588359,
      "updated": 1674588359
    },
    {
      "id": "63d0aa7445c7e600001bf38c",
      "text": " [アルゴ式]というサイトは、この本をベースに問題を作成している[lsajfk.icon]",
      "userId": "5dc4278df651e0001745c7e6",
      "created": 1674619509,
      "updated": 1674619583
    },
    {
      "id": "63d0aaa445c7e600001bf38e",
      "text": " 　[https://algo-method.com/ アルゴ式]",
      "userId": "5dc4278df651e0001745c7e6",
      "created": 1674619557,
      "updated": 1674619561
    },
    {
      "id": "63db52f7774b170000353b9b",
      "text": " 　著者らの立ち上げた会社だ[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1675318008,
      "updated": 1675318025
    },
    {
      "id": "63d0aa7545c7e600001bf38d",
      "text": "",
      "userId": "5dc4278df651e0001745c7e6",
      "created": 1674619509,
      "updated": 1674619509
    },
    {
      "id": "63db8fd1774b170000d44946",
      "text": "[目次 https://www.kspub.co.jp/book/detail/5128442.html]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333586,
      "updated": 1675333591
    },
    {
      "id": "63db518d774b170000353b94",
      "text": "前書き",
      "userId": "59fb21121207900012774b17",
      "created": 1675317645,
      "updated": 1675317649
    },
    {
      "id": "63db5197774b170000353b96",
      "text": " アルゴリズム設計技法を大切にしている本らしい[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1675317656,
      "updated": 1675317975
    },
    {
      "id": "63db51b3774b170000353b97",
      "text": "  1,2で準備して、3-7はいきなりこの本の核心である設計技法",
      "userId": "59fb21121207900012774b17",
      "created": 1675317683,
      "updated": 1675317875
    },
    {
      "id": "63db9245774b170000d4494d",
      "text": "  [https://gyazo.com/40d2a2766f3e4e16edaa0dff19cc0afc]",
      "userId": "59fb21121207900012774b17",
      "created": 1675334214,
      "updated": 1675334214
    },
    {
      "id": "63db5276774b170000353b99",
      "text": " 理解を試す問題の難易度説明",
      "userId": "59fb21121207900012774b17",
      "created": 1675317878,
      "updated": 1675317993
    },
    {
      "id": "63db5282774b170000353b9a",
      "text": "  星4（難しいが理解が格段に深まる）まで解けたらいいなー[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1675317891,
      "updated": 1675326577
    },
    {
      "id": "63db744c774b17000034a7d3",
      "text": " >std::sort()の計算量がO(NlogN)であることが仕様として保証されていること (p.14). Kindle 版. ",
      "userId": "59fb21121207900012774b17",
      "created": 1675326540,
      "updated": 1675326622
    },
    {
      "id": "63db74a1774b17000034a7d6",
      "text": "  Goだとどうなるの？[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1675326626,
      "updated": 1675334244
    },
    {
      "id": "63db74a9774b17000034a7d7",
      "text": "  　[https://zenn.dev/spiegel/articles/20200926-standard-sort-package-by-golang Go 標準のソート・アルゴリズム]",
      "userId": "59fb21121207900012774b17",
      "created": 1675326633,
      "updated": 1675326738
    },
    {
      "id": "63db74fb774b17000034a7d8",
      "text": "  　 基本はクイックソートで平均O(nlogn)",
      "userId": "59fb21121207900012774b17",
      "created": 1675326716,
      "updated": 1675326738
    },
    {
      "id": "63db7505774b17000034a7d9",
      "text": "  　std::sort()の計算量は平均の話？",
      "userId": "59fb21121207900012774b17",
      "created": 1675326726,
      "updated": 1675326738
    },
    {
      "id": "63f79aa9aff09e0000b47a8f",
      "text": "  　「平均が」と書いてない本の側が悪い[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1677171369,
      "updated": 1677171387
    },
    {
      "id": "63f79abaaff09e0000b47a90",
      "text": "  　 最悪ケースでどうかを議論したりすることもある",
      "userId": "582e63d27c56960011aff09e",
      "created": 1677171387,
      "updated": 1677171402
    },
    {
      "id": "63db518d774b170000353b95",
      "text": "　　　本書での「計算量」は最悪時間計算量らしい（後から出てくる）けどここは違うのかも[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1675317645,
      "updated": 1677172642
    },
    {
      "id": "63f79f47774b1700008f17c7",
      "text": "　　　　[雑に読む「問題解決力を鍛える！アルゴリズムとデータ構造」#63f79f36774b1700008f17c6]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172552,
      "updated": 1677172552
    },
    {
      "id": "63f8776aaff09e00001322bd",
      "text": "　　　　クイックソートの最悪計算量はO(N^2)の気がするけどなぁ[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1677227883,
      "updated": 1677227906
    },
    {
      "id": "63d0311e774b170000601753",
      "text": "[雑読「問題解決力を鍛える！アルゴリズムとデータ構造」：1章 アルゴリズムとは]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1677172824
    },
    {
      "id": "63d0311e774b170000601754",
      "text": "2章 [計算量]と[オーダー記法]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333080
    },
    {
      "id": "63db8de8774b170000b9704b",
      "text": " 2.1 計算量とは",
      "userId": "59fb21121207900012774b17",
      "created": 1675333096,
      "updated": 1675333097
    },
    {
      "id": "63f79972774b1700008f1792",
      "text": " 　アルゴリズムの良さを決める基準",
      "userId": "59fb21121207900012774b17",
      "created": 1677171059,
      "updated": 1677171063
    },
    {
      "id": "63f79977774b1700008f1793",
      "text": " 　実行時間を大雑把に見積もれる",
      "userId": "59fb21121207900012774b17",
      "created": 1677171063,
      "updated": 1677171078
    },
    {
      "id": "63db8de8774b170000b9704c",
      "text": " 2.2 計算量のオーダー記法",
      "userId": "59fb21121207900012774b17",
      "created": 1675333097,
      "updated": 1675333097
    },
    {
      "id": "63f79998774b1700008f1794",
      "text": " 　1重のforループと2重のforループの比較の実験",
      "userId": "59fb21121207900012774b17",
      "created": 1677171096,
      "updated": 1677171135
    },
    {
      "id": "63f799b1774b1700008f1798",
      "text": " 　　1重はNが10, 100倍になると計算時間が10, 100倍になり、N重は100, 10000倍になっている",
      "userId": "59fb21121207900012774b17",
      "created": 1677171122,
      "updated": 1677171163
    },
    {
      "id": "63f799a7774b1700008f1795",
      "text": " 　前者をO(N)、後者を[$ O(N^2)]という",
      "userId": "59fb21121207900012774b17",
      "created": 1677171112,
      "updated": 1677171330
    },
    {
      "id": "63f799e6774b1700008f1799",
      "text": " 　　[ランダウのO記法]",
      "userId": "59fb21121207900012774b17",
      "created": 1677171175,
      "updated": 1677171187
    },
    {
      "id": "63f79a2f774b1700008f179a",
      "text": " 　　アルゴリズムAの計算時間T(N)がおおむねP(N)に比例することを",
      "userId": "59fb21121207900012774b17",
      "created": 1677171248,
      "updated": 1677171292
    },
    {
      "id": "63f79a5c774b1700008f179b",
      "text": " 　　　[$ T(N)=O(P(N))]と表記し",
      "userId": "59fb21121207900012774b17",
      "created": 1677171292,
      "updated": 1677171307
    },
    {
      "id": "63f79a5d774b1700008f179c",
      "text": " 　　　Aの計算量は[$ O(P(N))]という",
      "userId": "59fb21121207900012774b17",
      "created": 1677171293,
      "updated": 1677171314
    },
    {
      "id": "63f79aa5774b1700008f179d",
      "text": " 　forループのコードの計算量を実際に考えていく",
      "userId": "59fb21121207900012774b17",
      "created": 1677171365,
      "updated": 1677171388
    },
    {
      "id": "63f79b07774b1700008f179e",
      "text": " 　　一番支配的な項だけみておけばNが大きい時無視できるからいいよねという内容",
      "userId": "59fb21121207900012774b17",
      "created": 1677171464,
      "updated": 1677171505
    },
    {
      "id": "63db8de8774b170000b9704d",
      "text": " 2.3 計算量を求める例(1)：偶数の列挙",
      "userId": "59fb21121207900012774b17",
      "created": 1675333097,
      "updated": 1675333097
    },
    {
      "id": "63f79b52774b1700008f17a1",
      "text": " 　N個の整数を受け取ってN以下の偶数を全て出力するアルゴリズム",
      "userId": "59fb21121207900012774b17",
      "created": 1677171538,
      "updated": 1677171562
    },
    {
      "id": "63f79b6a774b1700008f17a2",
      "text": " 　反復回数はN/2で、計算時間はおおむねNに比例するのでO(N)",
      "userId": "59fb21121207900012774b17",
      "created": 1677171562,
      "updated": 1677171585
    },
    {
      "id": "63f7a616774b1700008f17c9",
      "text": " 　 Nが大きくなった時にあまり効いてこないので定数倍は無視する[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677174294,
      "updated": 1677174337
    },
    {
      "id": "63db8de8774b170000b9704e",
      "text": " 2.4 計算量を求める例(2)：最近点対問題",
      "userId": "59fb21121207900012774b17",
      "created": 1675333097,
      "updated": 1675333097
    },
    {
      "id": "63f79b81774b1700008f17a3",
      "text": "  2次元平面上のN個の点のうち、最も距離が近い2点の距離を求める問題に対する全探索",
      "userId": "59fb21121207900012774b17",
      "created": 1677171586,
      "updated": 1677171623
    },
    {
      "id": "63f79b9d774b1700008f17a4",
      "text": "  [$ T(N)=\\frac{1}{2}N(N-1)]なので[$ O(N^2)]",
      "userId": "59fb21121207900012774b17",
      "created": 1677171614,
      "updated": 1677171700
    },
    {
      "id": "63f79c00774b1700008f17a5",
      "text": "  この問題は分割統治法を使うと[$ O(N \\log N)]のアルゴリズムもあるらしい",
      "userId": "59fb21121207900012774b17",
      "created": 1677171713,
      "updated": 1677171750
    },
    {
      "id": "63db8de8774b170000b9704f",
      "text": " 2.5 計算量の使い方",
      "userId": "59fb21121207900012774b17",
      "created": 1675333097,
      "updated": 1675333097
    },
    {
      "id": "63f79c29774b1700008f17a6",
      "text": " 　実行環境に強く依存するが、大まかな感覚を掴むのは重要",
      "userId": "59fb21121207900012774b17",
      "created": 1677171753,
      "updated": 1677171788
    },
    {
      "id": "63f79c56774b1700008f17a8",
      "text": " 　アルゴリズム設計ではこれを知っておく必要がある",
      "userId": "59fb21121207900012774b17",
      "created": 1677171799,
      "updated": 1677171807
    },
    {
      "id": "63f79c4c774b1700008f17a7",
      "text": " 　　計算実行時間の制限",
      "userId": "59fb21121207900012774b17",
      "created": 1677171789,
      "updated": 1677171811
    },
    {
      "id": "63f79c62774b1700008f17a9",
      "text": " 　　ときたい問題のサイズ",
      "userId": "59fb21121207900012774b17",
      "created": 1677171811,
      "updated": 1677171820
    },
    {
      "id": "63f79c6e774b1700008f17aa",
      "text": " 　現代の家庭用PCでは[$ 10^9]回/sぐらい計算できる",
      "userId": "59fb21121207900012774b17",
      "created": 1677171823,
      "updated": 1677171870
    },
    {
      "id": "63f79cdfaff09e0000b47a98",
      "text": " 　　CPUのクロックが例えば3GHzなら1秒に3×10^9クロックの計算できる[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1677171936,
      "updated": 1677172023
    },
    {
      "id": "63f79c95774b1700008f17ab",
      "text": " 　　なるほど[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677171861,
      "updated": 1677172016
    },
    {
      "id": "63f79d4f774b1700008f17b1",
      "text": " 　[指数時間]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172048,
      "updated": 1677173379
    },
    {
      "id": "63f79d53774b1700008f17b2",
      "text": " 　　[$ O(N!)]や[$ O(2^N)]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172052,
      "updated": 1677172068
    },
    {
      "id": "63f79d66774b1700008f17b3",
      "text": " 　　Nが大きいと現実的な時間で計算が終わらない",
      "userId": "59fb21121207900012774b17",
      "created": 1677172070,
      "updated": 1677172108
    },
    {
      "id": "63f79d9a774b1700008f17b5",
      "text": " 　　 N=100の時[$ 2^{100}\\simeq10^{30}]ステップ必要で[$ 10^9]回/sの計算機を使うと30兆年ぐらいかかる",
      "userId": "59fb21121207900012774b17",
      "created": 1677172123,
      "updated": 1677172226
    },
    {
      "id": "63f79e02774b1700008f17b6",
      "text": " 　　 　[[宇宙猫.icon]]もびっくり",
      "userId": "59fb21121207900012774b17",
      "created": 1677172226,
      "updated": 1677172313
    },
    {
      "id": "63f79d73774b1700008f17b4",
      "text": " 　　でもNが十分に小さければ使える",
      "userId": "59fb21121207900012774b17",
      "created": 1677172083,
      "updated": 1677172089
    },
    {
      "id": "63f79cba774b1700008f17ac",
      "text": " 　[多項式時間]",
      "userId": "59fb21121207900012774b17",
      "created": 1677171899,
      "updated": 1677173374
    },
    {
      "id": "63f79cc6774b1700008f17ad",
      "text": " 　　定数d>0が存在して計算量が[$ N^d]の定数倍によって上から抑えられる",
      "userId": "59fb21121207900012774b17",
      "created": 1677171910,
      "updated": 1677171942
    },
    {
      "id": "63f79d03774b1700008f17ae",
      "text": " 　　[$ N\\log N]は多項式ではないけど[$ N\\log N\\leq N^2]だから[$ O(N\\log N)]は多項式時間",
      "userId": "59fb21121207900012774b17",
      "created": 1677171972,
      "updated": 1677173809
    },
    {
      "id": "63f79e84774b1700008f17bb",
      "text": " 　[定数時間]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172357,
      "updated": 1677173376
    },
    {
      "id": "63f79e8c774b1700008f17bc",
      "text": " 　　[$ O(1)]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172364,
      "updated": 1677172368
    },
    {
      "id": "63f79e95774b1700008f17bd",
      "text": "　　　Pythonのリストでinを使うとO(N)になるのでsetやdictを使ってハッシュテーブルを使う",
      "userId": "59fb21121207900012774b17",
      "created": 1677172373,
      "updated": 1677172412
    },
    {
      "id": "63db8de8774b170000b97050",
      "text": " 2.6 計算量に関する注釈",
      "userId": "59fb21121207900012774b17",
      "created": 1675333097,
      "updated": 1675333097
    },
    {
      "id": "63f79ec5774b1700008f17be",
      "text": " 　時間計算量と[領域計算量]（実行時のメモリ使用量）がある",
      "userId": "59fb21121207900012774b17",
      "created": 1677172422,
      "updated": 1677172457
    },
    {
      "id": "63f79ecc774b1700008f17bf",
      "text": " 　　本書での計算量は時間計算量のこと",
      "userId": "59fb21121207900012774b17",
      "created": 1677172428,
      "updated": 1677172440
    },
    {
      "id": "63f79eea774b1700008f17c0",
      "text": " 　入力データによっては計算が早く終わったり遅く終わったりする",
      "userId": "59fb21121207900012774b17",
      "created": 1677172459,
      "updated": 1677172481
    },
    {
      "id": "63f79f00774b1700008f17c1",
      "text": " 　　最悪ケースを[最悪時間計算量]",
      "userId": "59fb21121207900012774b17",
      "created": 1677172481,
      "updated": 1677172489
    },
    {
      "id": "63f79f36774b1700008f17c6",
      "text": " 　　　本書での計算量はこっち",
      "userId": "59fb21121207900012774b17",
      "created": 1677172535,
      "updated": 1677172537
    },
    {
      "id": "63f839e7774b1700005ba035",
      "text": " 　　[クイックソート]は平均的には高速だけど最悪時には遅い",
      "userId": "59fb21121207900012774b17",
      "created": 1677212135,
      "updated": 1677212135
    },
    {
      "id": "63f79f09774b1700008f17c2",
      "text": "　　入力データに特定の分布を仮定したときの時間計算量の期待値を[平均時間計算量]という",
      "userId": "59fb21121207900012774b17",
      "created": 1677172490,
      "updated": 1677212132
    },
    {
      "id": "63db8de8774b170000b97051",
      "text": " 2.7 [ランダウのO記法]の詳細",
      "userId": "59fb21121207900012774b17",
      "created": 1675333097,
      "updated": 1675333415
    },
    {
      "id": "63f7a0e9774b1700009834ef",
      "text": " 　前の説明をもうちょっと数学的に緻密にする",
      "userId": "59fb21121207900012774b17",
      "created": 1677172970,
      "updated": 1677173443
    },
    {
      "id": "63f7a101774b1700009834f1",
      "text": " 　O記法は上界",
      "userId": "59fb21121207900012774b17",
      "created": 1677172994,
      "updated": 1677173014
    },
    {
      "id": "63f7a133774b1700009834f3",
      "text": " 　　だから[$ O(N^2)]のアルゴリズムは[$ O(N^3)]でもある。ただ普通最も小さいもので表記する",
      "userId": "59fb21121207900012774b17",
      "created": 1677173043,
      "updated": 1677173084
    },
    {
      "id": "63f7a0f8774b1700009834f0",
      "text": " 　Ω記法は下界",
      "userId": "59fb21121207900012774b17",
      "created": 1677172985,
      "updated": 1677173017
    },
    {
      "id": "63f7a119774b1700009834f2",
      "text": " 　θ記法は上界と下界両方から挟み撃ちで評価",
      "userId": "59fb21121207900012774b17",
      "created": 1677173018,
      "updated": 1677173038
    },
    {
      "id": "63f7a163774b1700009834f4",
      "text": " 　　慣習としてθ記法が使えてもO記法を使うから本書も基本O記法を使う",
      "userId": "59fb21121207900012774b17",
      "created": 1677173092,
      "updated": 1677173118
    },
    {
      "id": "63db8de8774b170000b97052",
      "text": " 2.8 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333097,
      "updated": 1675333097
    },
    {
      "id": "63f7a183774b1700009834f5",
      "text": " 　計算量は実際的には定数倍や低次の項を無視する",
      "userId": "59fb21121207900012774b17",
      "created": 1677173123,
      "updated": 1677173152
    },
    {
      "id": "63f7a1ab774b1700009834f6",
      "text": " 　実際のアルゴリズム評価はforの反復回数評価のような方法で求めたものが計算時間評価の良い尺度になる",
      "userId": "59fb21121207900012774b17",
      "created": 1677173163,
      "updated": 1677217856
    },
    {
      "id": "63f7a1c9774b1700009834f7",
      "text": " 演習問題",
      "userId": "59fb21121207900012774b17",
      "created": 1677173193,
      "updated": 1677173202
    },
    {
      "id": "63f7a1d2774b1700009834f8",
      "text": " 　2.1",
      "userId": "59fb21121207900012774b17",
      "created": 1677173202,
      "updated": 1677173207
    },
    {
      "id": "63f7a1d7774b1700009834f9",
      "text": " 　2.2",
      "userId": "59fb21121207900012774b17",
      "created": 1677173207,
      "updated": 1677173209
    },
    {
      "id": "63f7a1d8774b1700009834fa",
      "text": " 　2.3",
      "userId": "59fb21121207900012774b17",
      "created": 1677173209,
      "updated": 1677173209
    },
    {
      "id": "63f7a1d9774b1700009834fb",
      "text": " 　2.4",
      "userId": "59fb21121207900012774b17",
      "created": 1677173209,
      "updated": 1677173212
    },
    {
      "id": "63f7a1da774b1700009834fc",
      "text": " 　2.5",
      "userId": "59fb21121207900012774b17",
      "created": 1677173212,
      "updated": 1677173212
    },
    {
      "id": "63f7a1db774b1700009834fd",
      "text": " 　2.6",
      "userId": "59fb21121207900012774b17",
      "created": 1677173212,
      "updated": 1677173212
    },
    {
      "id": "63d0311e774b170000601755",
      "text": "3章 設計技法(1)：[全探索]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333080
    },
    {
      "id": "63db8ded774b170000b97053",
      "text": " 3.1 全探索を学ぶ意義",
      "userId": "59fb21121207900012774b17",
      "created": 1675333102,
      "updated": 1675333103
    },
    {
      "id": "63f7a203774b1700009834fe",
      "text": "  遅くてもNが十分小さいなら実用できる",
      "userId": "59fb21121207900012774b17",
      "created": 1677173252,
      "updated": 1677173271
    },
    {
      "id": "63f7a208774b1700009834ff",
      "text": "  問題が深く理解できて高速なアルゴリズム設計に結びつく",
      "userId": "59fb21121207900012774b17",
      "created": 1677173256,
      "updated": 1677173284
    },
    {
      "id": "63f7a23f774b170000983502",
      "text": " 　　どうしたら全ての場合を考慮し尽くせるかを検討するのは有効",
      "userId": "59fb21121207900012774b17",
      "created": 1677173311,
      "updated": 1677173311
    },
    {
      "id": "63db8def774b170000b97059",
      "text": " 3.2 全探索(1)：[線形探索法]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333103,
      "updated": 1675333408
    },
    {
      "id": "63db8def774b170000b9705a",
      "text": " 3.3 線形探索法の応用",
      "userId": "59fb21121207900012774b17",
      "created": 1675333103,
      "updated": 1675333103
    },
    {
      "id": "63db8def774b170000b9705b",
      "text": " 3.4 全探索(2)：[ペアの全探索]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333103,
      "updated": 1675333409
    },
    {
      "id": "63db8def774b170000b9705c",
      "text": " 3.5 全探索(3)：[組合せの全探索]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333103,
      "updated": 1675333412
    },
    {
      "id": "63db8def774b170000b9705d",
      "text": " 3.6 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333103,
      "updated": 1675333103
    },
    {
      "id": "63d0311e774b170000601756",
      "text": "4章 設計技法(2)：[再帰]と[分割統治法]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333079
    },
    {
      "id": "63db8df7774b170000b9705e",
      "text": " 4.1 再帰とは",
      "userId": "59fb21121207900012774b17",
      "created": 1675333111,
      "updated": 1675333112
    },
    {
      "id": "63db8df8774b170000b9705f",
      "text": " 4.2 再帰の例(1)：[ユークリッドの互除法]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333112,
      "updated": 1675333392
    },
    {
      "id": "63db8df8774b170000b97060",
      "text": " 4.3 再帰の例(2)：[フィボナッチ数列]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333112,
      "updated": 1675333394
    },
    {
      "id": "63db8df8774b170000b97061",
      "text": " 4.4 [メモ化]して動的計画法へ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333112,
      "updated": 1675333399
    },
    {
      "id": "63db8df8774b170000b97062",
      "text": " 4.5 再帰の例(3)：再帰関数を用いた全探索",
      "userId": "59fb21121207900012774b17",
      "created": 1675333112,
      "updated": 1675333112
    },
    {
      "id": "63db8df8774b170000b97063",
      "text": " 4.6 分割統治法",
      "userId": "59fb21121207900012774b17",
      "created": 1675333112,
      "updated": 1675333112
    },
    {
      "id": "63db8df8774b170000b97064",
      "text": " 4.7 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333112,
      "updated": 1675333112
    },
    {
      "id": "63d0311e774b170000601757",
      "text": "5章 設計技法(3)：[動的計画法]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333078
    },
    {
      "id": "63d03184774b170000601768",
      "text": " よく見るやつ[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588548,
      "updated": 1675333077
    },
    {
      "id": "63d07c6c1280f0000010d285",
      "text": " [O(NP) algorithm]で文字列比較に対して適用したやつを触ったけど、一般的に[動的計画法]が何なのかはよく分からなかった[takker.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1674607724,
      "updated": 1675333077
    },
    {
      "id": "63f79d7faff09e0000b47a99",
      "text": " 　[過去の計算結果を利用して全体の計算量を減らす]系のアルゴリズムの多くに動的計画法って名前がついてるので一般的に説明しづらい[nishio.icon]",
      "userId": "58442db3ee4a2400116eb406",
      "created": 1677172096,
      "updated": 1677196519
    },
    {
      "id": "63f79dbbaff09e0000b47a9a",
      "text": " 　 対象が文字列だろうがグラフだろうが点群だろうが動的計画法は使われうる、抽象度の高い概念",
      "userId": "582e63d27c56960011aff09e",
      "created": 1677172155,
      "updated": 1677172190
    },
    {
      "id": "63db8e00774b170000b97065",
      "text": " 5.1 動的計画法とは",
      "userId": "59fb21121207900012774b17",
      "created": 1675333121,
      "updated": 1675333121
    },
    {
      "id": "63db8e00774b170000b97066",
      "text": " 5.2 最初の例題",
      "userId": "59fb21121207900012774b17",
      "created": 1675333121,
      "updated": 1675333121
    },
    {
      "id": "63db8e00774b170000b97067",
      "text": " 5.3 動的計画法に関連する諸概念",
      "userId": "59fb21121207900012774b17",
      "created": 1675333121,
      "updated": 1675333121
    },
    {
      "id": "63db8e00774b170000b97068",
      "text": " 5.4 動的計画法の例(1)：[ナップサック問題]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333121,
      "updated": 1675333366
    },
    {
      "id": "63db8e00774b170000b97069",
      "text": " 5.5 動的計画法の例(2)：[編集距離]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333121,
      "updated": 1675333367
    },
    {
      "id": "63db8e00774b170000b9706a",
      "text": " 5.6 動的計画法の例(3)：[区間分割]の仕方を最適化",
      "userId": "59fb21121207900012774b17",
      "created": 1675333121,
      "updated": 1675346601
    },
    {
      "id": "63db8e00774b170000b9706b",
      "text": " 5.7 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333121,
      "updated": 1675333121
    },
    {
      "id": "63d0311e774b170000601758",
      "text": "6章 設計技法(4)：[二分探索法]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333123
    },
    {
      "id": "63db8e0f774b170000b9706c",
      "text": " 6.1 配列の二分探索",
      "userId": "59fb21121207900012774b17",
      "created": 1675333136,
      "updated": 1675333136
    },
    {
      "id": "63db8e0f774b170000b9706d",
      "text": " 6.2 C++のstd::lower bound()",
      "userId": "59fb21121207900012774b17",
      "created": 1675333136,
      "updated": 1675333136
    },
    {
      "id": "63db8e0f774b170000b9706e",
      "text": " 6.3 一般化した二分探索法",
      "userId": "59fb21121207900012774b17",
      "created": 1675333136,
      "updated": 1675333136
    },
    {
      "id": "63db8e0f774b170000b9706f",
      "text": " 6.4 さらに一般化した二分探索法",
      "userId": "59fb21121207900012774b17",
      "created": 1675333136,
      "updated": 1675333136
    },
    {
      "id": "63db8e0f774b170000b97070",
      "text": " 6.5 応用例(1)：年齢当てゲーム",
      "userId": "59fb21121207900012774b17",
      "created": 1675333136,
      "updated": 1675333136
    },
    {
      "id": "63db8e0f774b170000b97071",
      "text": " 6.6 応用例(2)：std::lower bound() の活用例",
      "userId": "59fb21121207900012774b17",
      "created": 1675333136,
      "updated": 1675333136
    },
    {
      "id": "63db8e0f774b170000b97072",
      "text": " 6.7 応用例(3)：最適化問題を判定問題に",
      "userId": "59fb21121207900012774b17",
      "created": 1675333136,
      "updated": 1675333136
    },
    {
      "id": "63db8e0f774b170000b97073",
      "text": " 6.8 応用例(4)：[メディアン]を求める",
      "userId": "59fb21121207900012774b17",
      "created": 1675333136,
      "updated": 1675346611
    },
    {
      "id": "63db8e0f774b170000b97074",
      "text": " 6.9 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333136,
      "updated": 1675333136
    },
    {
      "id": "63d0311e774b170000601759",
      "text": "7章 設計技法(5)：[貪欲法]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333124
    },
    {
      "id": "63db8e1a774b170000b97075",
      "text": " 7.1 貪欲法とは",
      "userId": "59fb21121207900012774b17",
      "created": 1675333147,
      "updated": 1675333147
    },
    {
      "id": "63db8e1a774b170000b97076",
      "text": " 7.2 貪欲法が最適解を導くとは限らないこと",
      "userId": "59fb21121207900012774b17",
      "created": 1675333147,
      "updated": 1675333147
    },
    {
      "id": "63db8e1a774b170000b97077",
      "text": " 7.3 貪欲法パターン(1)：交換しても悪化しない",
      "userId": "59fb21121207900012774b17",
      "created": 1675333147,
      "updated": 1675333147
    },
    {
      "id": "63db8e1a774b170000b97078",
      "text": " 7.4 貪欲法パターン(2)：現在がよいほど未来もよい",
      "userId": "59fb21121207900012774b17",
      "created": 1675333147,
      "updated": 1675333147
    },
    {
      "id": "63db8e1a774b170000b97079",
      "text": " 7.5 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333147,
      "updated": 1675333147
    },
    {
      "id": "63d0311e774b17000060175a",
      "text": "8章 データ構造(1)：[配列]、[連結リスト]、[ハッシュテーブル]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333124
    },
    {
      "id": "63db8e21774b170000b9707a",
      "text": " 8.1 データ構造を学ぶ意義",
      "userId": "59fb21121207900012774b17",
      "created": 1675333154,
      "updated": 1675333154
    },
    {
      "id": "63db8e21774b170000b9707b",
      "text": " 8.2 配列",
      "userId": "59fb21121207900012774b17",
      "created": 1675333154,
      "updated": 1675333154
    },
    {
      "id": "63db8e21774b170000b9707c",
      "text": " 8.3 連結リスト",
      "userId": "59fb21121207900012774b17",
      "created": 1675333154,
      "updated": 1675333154
    },
    {
      "id": "63db8e21774b170000b9707d",
      "text": " 8.4 連結リストの挿入操作と削除操作",
      "userId": "59fb21121207900012774b17",
      "created": 1675333154,
      "updated": 1675333154
    },
    {
      "id": "63db8e21774b170000b9707e",
      "text": " 8.5 配列と連結リストの比較",
      "userId": "59fb21121207900012774b17",
      "created": 1675333154,
      "updated": 1675333154
    },
    {
      "id": "63db8e21774b170000b9707f",
      "text": " 8.6 ハッシュテーブル",
      "userId": "59fb21121207900012774b17",
      "created": 1675333154,
      "updated": 1675333154
    },
    {
      "id": "63db8e21774b170000b97080",
      "text": " 8.7 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333154,
      "updated": 1675333154
    },
    {
      "id": "63d0311e774b17000060175b",
      "text": "9章 データ構造(2)：[スタック]と[キュー]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333125
    },
    {
      "id": "63db8e27774b170000b97081",
      "text": " 9.1 スタックとキューの概念",
      "userId": "59fb21121207900012774b17",
      "created": 1675333159,
      "updated": 1675333159
    },
    {
      "id": "63db8e27774b170000b97082",
      "text": " 9.2 スタックとキューの動作と実装",
      "userId": "59fb21121207900012774b17",
      "created": 1675333159,
      "updated": 1675333159
    },
    {
      "id": "63db8e27774b170000b97083",
      "text": " 9.3 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333159,
      "updated": 1675333159
    },
    {
      "id": "63d0311e774b17000060175c",
      "text": "10章 データ構造(3)：[グラフ]と[木]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333125
    },
    {
      "id": "63db8e2c774b170000b97084",
      "text": " 10.1 グラフ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333164,
      "updated": 1675333164
    },
    {
      "id": "63db8e2c774b170000b97085",
      "text": " 10.2 グラフの例",
      "userId": "59fb21121207900012774b17",
      "created": 1675333164,
      "updated": 1675333164
    },
    {
      "id": "63db8e2c774b170000b97086",
      "text": " 10.3 グラフの実装",
      "userId": "59fb21121207900012774b17",
      "created": 1675333164,
      "updated": 1675333164
    },
    {
      "id": "63db8e2c774b170000b97087",
      "text": " 10.4 [重み付きグラフ]の実装",
      "userId": "59fb21121207900012774b17",
      "created": 1675333164,
      "updated": 1675333345
    },
    {
      "id": "63db8e2c774b170000b97088",
      "text": " 10.5 [木]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333164,
      "updated": 1675333352
    },
    {
      "id": "63db8e2c774b170000b97089",
      "text": " 10.6 [順序木]と[二分木]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333164,
      "updated": 1675333350
    },
    {
      "id": "63db8e2c774b170000b9708a",
      "text": " 10.7 二分木を用いるデータ構造の例(1)：[ヒープ]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333164,
      "updated": 1675333340
    },
    {
      "id": "63db8e2c774b170000b9708b",
      "text": " 10.8 二分木を用いるデータ構造の例(2)：[二分探索木]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333164,
      "updated": 1675333342
    },
    {
      "id": "63db8e2c774b170000b9708c",
      "text": " 10.9 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333164,
      "updated": 1675333164
    },
    {
      "id": "63d0311e774b17000060175d",
      "text": "11章 データ構造(4)：[Union-Find]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333171
    },
    {
      "id": "63db8e33774b170000b9708d",
      "text": " 11.1 Union-Findとは",
      "userId": "59fb21121207900012774b17",
      "created": 1675333171,
      "updated": 1675333172
    },
    {
      "id": "63db8e33774b170000b9708e",
      "text": " 11.2 Union-Findの仕組み",
      "userId": "59fb21121207900012774b17",
      "created": 1675333172,
      "updated": 1675333172
    },
    {
      "id": "63db8e33774b170000b9708f",
      "text": " 11.3 Union-Findの計算量を削減する工夫",
      "userId": "59fb21121207900012774b17",
      "created": 1675333172,
      "updated": 1675333172
    },
    {
      "id": "63db8e33774b170000b97090",
      "text": " 11.4 Union-Findの工夫その1：[union by size]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333172,
      "updated": 1675333335
    },
    {
      "id": "63db8e33774b170000b97091",
      "text": " 11.5 Union-Findの工夫その2：[経路圧縮]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333172,
      "updated": 1675333337
    },
    {
      "id": "63db8e33774b170000b97092",
      "text": " 11.6 Union-Findの実装",
      "userId": "59fb21121207900012774b17",
      "created": 1675333172,
      "updated": 1675333172
    },
    {
      "id": "63db8e33774b170000b97093",
      "text": " 11.7 Union-Findの応用：グラフの連結成分の個数",
      "userId": "59fb21121207900012774b17",
      "created": 1675333172,
      "updated": 1675333172
    },
    {
      "id": "63db8e33774b170000b97094",
      "text": " 11.8 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333172,
      "updated": 1675333172
    },
    {
      "id": "63d0311e774b17000060175e",
      "text": "12章 [ソート]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333126
    },
    {
      "id": "63db8e3b774b170000b97095",
      "text": " 12.1 ソートとは",
      "userId": "59fb21121207900012774b17",
      "created": 1675333180,
      "updated": 1675333180
    },
    {
      "id": "63db8e3c774b170000b97096",
      "text": " 12.2 ソートアルゴリズムの良し悪し",
      "userId": "59fb21121207900012774b17",
      "created": 1675333180,
      "updated": 1675333180
    },
    {
      "id": "63db8e3c774b170000b97097",
      "text": " 12.3 ソート(1)：[挿入ソート]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333180,
      "updated": 1675333317
    },
    {
      "id": "63db8e3c774b170000b97098",
      "text": " 12.4 ソート(2)：[マージソート]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333180,
      "updated": 1675333318
    },
    {
      "id": "63db8e3c774b170000b97099",
      "text": " 12.5 ソート(3)：[クイックソート]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333180,
      "updated": 1675333320
    },
    {
      "id": "63db8e3c774b170000b9709a",
      "text": " 12.6 ソート(4)：[ヒープソート]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333180,
      "updated": 1675333321
    },
    {
      "id": "63db8e3c774b170000b9709b",
      "text": " 12.7 ソートの計算量の下界",
      "userId": "59fb21121207900012774b17",
      "created": 1675333180,
      "updated": 1675333180
    },
    {
      "id": "63db8e3c774b170000b9709c",
      "text": " 12.8 ソート(5)：[バケットソート]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333180,
      "updated": 1675333323
    },
    {
      "id": "63db8e3c774b170000b9709d",
      "text": " 12.9 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333180,
      "updated": 1675333180
    },
    {
      "id": "63d0311e774b17000060175f",
      "text": "13章 グラフ(1)：[グラフ探索]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333127
    },
    {
      "id": "63db8e42774b170000b9709e",
      "text": " 13.1 グラフ探索を学ぶ意義",
      "userId": "59fb21121207900012774b17",
      "created": 1675333187,
      "updated": 1675333187
    },
    {
      "id": "63db8e43774b170000b9709f",
      "text": " 13.2 [深さ優先探索]と[幅優先探索]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333187,
      "updated": 1675333304
    },
    {
      "id": "63db8e43774b170000b970a0",
      "text": " 13.3 再帰関数を用いる深さ優先探索",
      "userId": "59fb21121207900012774b17",
      "created": 1675333187,
      "updated": 1675333187
    },
    {
      "id": "63db8e43774b170000b970a1",
      "text": " 13.4 「[行きがけ順]」と「[帰りがけ順]」",
      "userId": "59fb21121207900012774b17",
      "created": 1675333187,
      "updated": 1675333313
    },
    {
      "id": "63db8e43774b170000b970a2",
      "text": " 13.5 最短路アルゴリズムとしての幅優先探索",
      "userId": "59fb21121207900012774b17",
      "created": 1675333187,
      "updated": 1675333187
    },
    {
      "id": "63db8e43774b170000b970a3",
      "text": " 13.6 深さ優先探索と幅優先探索の計算量",
      "userId": "59fb21121207900012774b17",
      "created": 1675333187,
      "updated": 1675333187
    },
    {
      "id": "63db8e43774b170000b970a4",
      "text": " 13.7 グラフ探索例(1)：s-tパスを求める",
      "userId": "59fb21121207900012774b17",
      "created": 1675333187,
      "updated": 1675333187
    },
    {
      "id": "63db8e43774b170000b970a5",
      "text": " 13.8 グラフ探索例(2)：[二部グラフ判定]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333187,
      "updated": 1675333295
    },
    {
      "id": "63db8e43774b170000b970a6",
      "text": " 13.9 グラフ探索例(3)：[トポロジカルソート]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333187,
      "updated": 1675333290
    },
    {
      "id": "63db8e43774b170000b970a7",
      "text": " 13.10 グラフ探索例(4)：[木上の動的計画法]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333187,
      "updated": 1675333293
    },
    {
      "id": "63db8e43774b170000b970a8",
      "text": " 13.11 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333187,
      "updated": 1675333187
    },
    {
      "id": "63d0311e774b170000601760",
      "text": "14章 グラフ(2)：[最短路問題]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333127
    },
    {
      "id": "63db8e4b774b170000b970a9",
      "text": " 14.1 最短路問題とは",
      "userId": "59fb21121207900012774b17",
      "created": 1675333196,
      "updated": 1675333196
    },
    {
      "id": "63db8e4c774b170000b970aa",
      "text": " 14.2 最短路問題の整理",
      "userId": "59fb21121207900012774b17",
      "created": 1675333196,
      "updated": 1675333196
    },
    {
      "id": "63db8e4c774b170000b970ab",
      "text": " 14.3 緩和",
      "userId": "59fb21121207900012774b17",
      "created": 1675333196,
      "updated": 1675333196
    },
    {
      "id": "63db8e4c774b170000b970ac",
      "text": " 14.4 DAG上の最短路問題：動的計画法",
      "userId": "59fb21121207900012774b17",
      "created": 1675333196,
      "updated": 1675333196
    },
    {
      "id": "63db8e4c774b170000b970ad",
      "text": " 14.5 単一始点最短路問題：[ベルマン・フォード法]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333196,
      "updated": 1675333279
    },
    {
      "id": "63db8e4c774b170000b970ae",
      "text": " 14.6 単一始点最短路問題：[ダイクストラ法]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333196,
      "updated": 1675333281
    },
    {
      "id": "63db8e4c774b170000b970af",
      "text": " 14.7 全点対間最短路問題：[フロイド・ワーシャル法]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333196,
      "updated": 1675333282
    },
    {
      "id": "63db8e4c774b170000b970b0",
      "text": " 14.8 参考：[ポテンシャル]と[差分制約系]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333196,
      "updated": 1675333287
    },
    {
      "id": "63db8e4c774b170000b970b1",
      "text": " 14.9 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333196,
      "updated": 1675333196
    },
    {
      "id": "63d0311e774b170000601761",
      "text": "15章 グラフ(3)：[最小全域木問題]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333128
    },
    {
      "id": "63db8e52774b170000b970b2",
      "text": " 15.1 最小全域木問題とは",
      "userId": "59fb21121207900012774b17",
      "created": 1675333203,
      "updated": 1675333203
    },
    {
      "id": "63db8e52774b170000b970b3",
      "text": " 15.2 [クラスカル法]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333203,
      "updated": 1675333212
    },
    {
      "id": "63db8e52774b170000b970b4",
      "text": " 15.3 クラスカル法の実装",
      "userId": "59fb21121207900012774b17",
      "created": 1675333203,
      "updated": 1675333203
    },
    {
      "id": "63db8e52774b170000b970b5",
      "text": " 15.4 [全域木]の構造",
      "userId": "59fb21121207900012774b17",
      "created": 1675333203,
      "updated": 1675333215
    },
    {
      "id": "63db8e52774b170000b970b6",
      "text": " 15.5 クラスカル法の正当性",
      "userId": "59fb21121207900012774b17",
      "created": 1675333203,
      "updated": 1675333203
    },
    {
      "id": "63db8e52774b170000b970b7",
      "text": " 15.6 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333203,
      "updated": 1675333203
    },
    {
      "id": "63d0311e774b170000601762",
      "text": "16章 グラフ(4)：[ネットワークフロー]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333128
    },
    {
      "id": "63db8e60774b170000b970ba",
      "text": " 16.1 ネットワークフローを学ぶ意義",
      "userId": "59fb21121207900012774b17",
      "created": 1675333216,
      "updated": 1675333217
    },
    {
      "id": "63db8e61774b170000b970bb",
      "text": " 16.2 [グラフの連結度]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333217,
      "updated": 1675333226
    },
    {
      "id": "63db8e61774b170000b970bc",
      "text": " 16.3 [最大流問題]と[最小カット問題]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333217,
      "updated": 1675333237
    },
    {
      "id": "63db8e61774b170000b970bd",
      "text": " 16.4 [フォード・ファルカーソン法]の実装",
      "userId": "59fb21121207900012774b17",
      "created": 1675333217,
      "updated": 1675333229
    },
    {
      "id": "63db8e61774b170000b970be",
      "text": " 16.5 応用例(1)：[二部マッチング]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333217,
      "updated": 1675333230
    },
    {
      "id": "63db8e61774b170000b970bf",
      "text": " 16.6 応用例(2)：[点連結度]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333217,
      "updated": 1675333232
    },
    {
      "id": "63db8e61774b170000b970c0",
      "text": " 16.7 応用例(3)：[プロジェクト選択問題]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333217,
      "updated": 1675333235
    },
    {
      "id": "63db8e61774b170000b970c1",
      "text": " 16.8 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333217,
      "updated": 1675333217
    },
    {
      "id": "63d0311e774b170000601763",
      "text": "17章 PとNP",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333129
    },
    {
      "id": "63db8e7b774b170000b970c2",
      "text": " 17.1 問題の難しさの測り方",
      "userId": "59fb21121207900012774b17",
      "created": 1675333244,
      "updated": 1675333244
    },
    {
      "id": "63db8e7c774b170000b970c3",
      "text": " 17.2 PとNP",
      "userId": "59fb21121207900012774b17",
      "created": 1675333244,
      "updated": 1675333244
    },
    {
      "id": "63db8e7c774b170000b970c4",
      "text": " 17.3 [P ≠ NP予想]",
      "userId": "616ca537c25a92001e5f1e0d",
      "created": 1675333244,
      "updated": 1675333271
    },
    {
      "id": "63db8e7c774b170000b970c5",
      "text": " 17.4 [NP完全]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333244,
      "updated": 1675333478
    },
    {
      "id": "63db8e7c774b170000b970c6",
      "text": " 17.5 [多項式時間]帰着の例",
      "userId": "59fb21121207900012774b17",
      "created": 1675333244,
      "updated": 1675333474
    },
    {
      "id": "63db8e7c774b170000b970c7",
      "text": " 17.6 [NP困難]",
      "userId": "616ca537c25a92001e5f1e0d",
      "created": 1675333244,
      "updated": 1675333295
    },
    {
      "id": "63db8e7c774b170000b970c8",
      "text": " 17.7 [停止性問題]",
      "userId": "616ca537c25a92001e5f1e0d",
      "created": 1675333244,
      "updated": 1675333298
    },
    {
      "id": "63db8e7c774b170000b970c9",
      "text": " 17.8 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333244,
      "updated": 1675333244
    },
    {
      "id": "63d0311e774b170000601764",
      "text": "18章 難問対策",
      "userId": "59fb21121207900012774b17",
      "created": 1674588446,
      "updated": 1675333130
    },
    {
      "id": "63d03157774b170000601766",
      "text": "　これは何？[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1674588503,
      "updated": 1675333130
    },
    {
      "id": "63d07c9d1280f0000010d286",
      "text": "　[競プロ]対策とか？[takker.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1674607773,
      "updated": 1675333130
    },
    {
      "id": "63f79bd8aff09e0000b47a94",
      "text": "　いやこれ競プロに出せない系では[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1677171672,
      "updated": 1677171704
    },
    {
      "id": "63db8e81774b170000b970ca",
      "text": "　18.1 NP困難問題との対峙",
      "userId": "59fb21121207900012774b17",
      "created": 1675333249,
      "updated": 1675333249
    },
    {
      "id": "63db8e81774b170000b970cb",
      "text": " 18.2 特殊ケースで解ける場合",
      "userId": "59fb21121207900012774b17",
      "created": 1675333249,
      "updated": 1675333249
    },
    {
      "id": "63db8e81774b170000b970cc",
      "text": " 18.3 [貪欲法]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333249,
      "updated": 1677172925
    },
    {
      "id": "63db8e81774b170000b970cd",
      "text": " 18.4 [局所探索]と[焼きなまし法]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333249,
      "updated": 1675333268
    },
    {
      "id": "63db8e81774b170000b970ce",
      "text": " 18.5 [分枝限定法]",
      "userId": "59fb21121207900012774b17",
      "created": 1675333249,
      "updated": 1675333262
    },
    {
      "id": "63db8e81774b170000b970cf",
      "text": " 18.6 [整数計画問題]への定式化",
      "userId": "59fb21121207900012774b17",
      "created": 1675333249,
      "updated": 1675333264
    },
    {
      "id": "63db8e81774b170000b970d0",
      "text": " 18.7 近似アルゴリズム",
      "userId": "59fb21121207900012774b17",
      "created": 1675333249,
      "updated": 1675333249
    },
    {
      "id": "63db8e81774b170000b970d1",
      "text": " 18.8 まとめ",
      "userId": "59fb21121207900012774b17",
      "created": 1675333249,
      "updated": 1675333249
    },
    {
      "id": "63d0309e774b170000601744",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1674588319,
      "updated": 1674588319
    }
  ]
}