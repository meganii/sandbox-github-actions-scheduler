{
  "id": "6724c9a5a2553fad037bea1b",
  "title": "ゼロオーバーヘッド原則",
  "created": 1730464168,
  "updated": 1737789089,
  "lines": [
    {
      "id": "6724c9a5a2553fad037bea1b",
      "text": "ゼロオーバーヘッド原則",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1730464168,
      "updated": 1730464168
    },
    {
      "id": "6724c9ab71b3c2000085482d",
      "text": "> ゼロオーバーヘッドの原則(Zero Overhead Principal)とは、使わない機能の[オーバーヘッド]を支払うべきではないという原則である。ある機能があったとして、その機能を使わない場合、その機能をサポートするために必要なオーバーヘッドがもたらされてはならない。[C++]は伝統的に、この原則を強く意識してきた。[Bjarne Stroustrup]が[Simula]を使ってシミュレーターを書いたら、使いもしないGCのオーバーヘッドでプログラムの実行時間の80%が浪費されていたことは、あまりにも有名だ。 ",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1730464170,
      "updated": 1737789077
    },
    {
      "id": "6724c9e071b3c20000854831",
      "text": "\t[ガベージコレクション]",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1730464222,
      "updated": 1730464227
    },
    {
      "id": "6724c9c371b3c20000854830",
      "text": ">[本の虫: 2014-10-pre-Urbanaのレビュー: N4230-N4239 https://cpplover.blogspot.com/2014/12/2014-10-pre-urbana-n4230-n4239.html]",
      "userId": "5c30ba88e98efe0017e5172d",
      "created": 1730464194,
      "updated": 1737789089
    },
    {
      "id": "6724c9bf71b3c2000085482f",
      "text": "",
      "userId": "661b6e882a96e9002371b3c2",
      "created": 1730464190,
      "updated": 1730464190
    }
  ]
}