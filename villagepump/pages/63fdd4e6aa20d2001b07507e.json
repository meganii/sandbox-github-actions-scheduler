{
  "id": "63fdd4e6aa20d2001b07507e",
  "title": "雑に見る『Deep Learningの世界』",
  "created": 1677579498,
  "updated": 1677584315,
  "lines": [
    {
      "id": "63fdd4e6aa20d2001b07507e",
      "text": "雑に見る『Deep Learningの世界』",
      "userId": "59fb21121207900012774b17",
      "created": 1677579498,
      "updated": 1677579517
    },
    {
      "id": "63fdd7f8774b170000534256",
      "text": "このシリーズを見ていく[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677580280,
      "updated": 1677580286
    },
    {
      "id": "63fdd7d5774b170000534253",
      "text": "　https://www.youtube.com/watch?v=SyWwoMpP_P4&list=PLhDAH9aTfnxKXf__soUoAEOrbLAOnVHCP",
      "userId": "59fb21121207900012774b17",
      "created": 1677580246,
      "updated": 1677580284
    },
    {
      "id": "63fdd4fe774b170000534206",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd84a774b17000053425c",
      "text": "【深層学習】ディープラーニングとは関数近似器である【ディープラーニングの世界 vol. 1 】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580362,
      "updated": 1677580362
    },
    {
      "id": "63fdd84a774b17000053425d",
      "text": "【深層学習】学習 - なぜ必要なのか？何をするのか？【ディープラーニングの世界 vol. 2 】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580363,
      "updated": 1677580374
    },
    {
      "id": "63fdd84b774b17000053425e",
      "text": "【深層学習】関数 - なぜ「深さ」が AI を生み出しているのか？【ディープラーニングの世界 vol. 3 】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580363,
      "updated": 1677580387
    },
    {
      "id": "63fdd4fe774b170000534207",
      "text": "[https://youtu.be/Mw4j4yPsFtg]",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b170000534208",
      "text": " 要約[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579527
    },
    {
      "id": "63fdd57e774b17000053423f",
      "text": "　　こんな関数が欲しい",
      "userId": "59fb21121207900012774b17",
      "created": 1677579647,
      "updated": 1677581133
    },
    {
      "id": "63fdd586774b170000534240",
      "text": "　　　1. 複雑なものが分類できるぐらい十分複雑である",
      "userId": "59fb21121207900012774b17",
      "created": 1677579654,
      "updated": 1677581110
    },
    {
      "id": "63fdd5b5774b170000534242",
      "text": "　　　　複雑ではない例：1次関数",
      "userId": "59fb21121207900012774b17",
      "created": 1677579701,
      "updated": 1677581110
    },
    {
      "id": "63fdd587774b170000534241",
      "text": "　　　2. コンピュータで計算できる",
      "userId": "59fb21121207900012774b17",
      "created": 1677579655,
      "updated": 1677581110
    },
    {
      "id": "63fddb36774b17000053429c",
      "text": " 　非線形関数と線形関数を組み合わせることで所望の性質をもつ関数を得ることができる",
      "userId": "59fb21121207900012774b17",
      "created": 1677581111,
      "updated": 1677581111
    },
    {
      "id": "63fddb2a774b17000053429b",
      "text": " 　　パラメータがめっちゃ減らせる",
      "userId": "59fb21121207900012774b17",
      "created": 1677581098,
      "updated": 1677581117
    },
    {
      "id": "63fddb53774b17000053429f",
      "text": "  　単純な関数を何度もかけてるのでDeep",
      "userId": "59fb21121207900012774b17",
      "created": 1677581140,
      "updated": 1677581147
    },
    {
      "id": "63fddb53774b1700005342a0",
      "text": "  　　[$ f(f(f(f(...))))] Deep!",
      "userId": "59fb21121207900012774b17",
      "created": 1677581140,
      "updated": 1677581147
    },
    {
      "id": "63fdd504774b170000534239",
      "text": " 関数にこんな性質が欲しい",
      "userId": "59fb21121207900012774b17",
      "created": 1677579524,
      "updated": 1677579524
    },
    {
      "id": "63fdd4fe774b170000534209",
      "text": "  なんでも分類できるぐらい十分複雑",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b17000053420a",
      "text": "  計算できる",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b17000053420b",
      "text": " 関数を深くすると単純な関数が複雑になる",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b17000053420c",
      "text": "  パラメータも減らせる",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b17000053420d",
      "text": "   2次関数3パラメータを10回入れ子にしても必要なパラメーターは3パラメーターが10個で30",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b17000053420e",
      "text": "    c.f. 1024次関数は1024個必要",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b17000053420f",
      "text": " n変数二次関数のパラメータは[$ n^2/2]になって、まだ計算するには多すぎる",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677580239
    },
    {
      "id": "63fdd4fe774b170000534210",
      "text": "  n^2/2になるのはなぜ？[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579770
    },
    {
      "id": "63fdd4fe774b170000534211",
      "text": "   1変数だと1/2になる",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579741
    },
    {
      "id": "63fdd4fe774b170000534212",
      "text": "    3つじゃないの？",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579741
    },
    {
      "id": "63fdd6a4774b170000534244",
      "text": "    　[$ a x^2 + bx +c]のa,b,c",
      "userId": "59fb21121207900012774b17",
      "created": 1677579940,
      "updated": 1677579953
    },
    {
      "id": "63fdd6b8774b170000534245",
      "text": "    　と思ったけど後の方を聞くと[斉次多項式]を想定してるっぽい？",
      "userId": "59fb21121207900012774b17",
      "created": 1677579961,
      "updated": 1677580185
    },
    {
      "id": "63fdd79c774b170000534249",
      "text": "    　　https://ja.wikipedia.org/wiki/斉次多項式 ",
      "userId": "59fb21121207900012774b17",
      "created": 1677580189,
      "updated": 1677580189
    },
    {
      "id": "63fdd613774b170000534243",
      "text": "   　　[$ {}_{n+1}C_2 ]ってことかな",
      "userId": "59fb21121207900012774b17",
      "created": 1677579795,
      "updated": 1677580071
    },
    {
      "id": "63fdd4fe774b170000534214",
      "text": "  100×100のカラー画像は3万次元なので30000^2/2=4.5億パラメータ",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b170000534216",
      "text": "  1000万画素の画像があったら50兆パラメータになって計算できない",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677580108
    },
    {
      "id": "63fdd4fe774b170000534217",
      "text": " なので線形と非線形を組み合わせる。するとパラメータが減らせる",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677584154
    },
    {
      "id": "63fdd4fe774b170000534218",
      "text": "  n変数関数(n+1パラメータ)を非線形関数に食わせる",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b170000534219",
      "text": " 100×100のカラー画像3万次元の分類で1000個に分けるような関数を考える",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b17000053421a",
      "text": "  30000変数、1000個の確率を返す1024次関数",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd775774b170000534248",
      "text": "  　　まずここの意味がわからない[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677580150,
      "updated": 1677580171
    },
    {
      "id": "63fde642aff09e0000ac3b32",
      "text": "  　　動画見てないんだけどここまでの説明で僕も意味がわからないw[nishio.icon]",
      "userId": "582e63d27c56960011aff09e",
      "created": 1677583939,
      "updated": 1677583961
    },
    {
      "id": "63fde675aff09e0000ac3b33",
      "text": "  　　　まあそもそもニューラルネットはn次関数を扱ってるわけではないので比喩に過ぎない話で、意味がわからないなら下手な比喩ってことだろう",
      "userId": "582e63d27c56960011aff09e",
      "created": 1677583989,
      "updated": 1677584046
    },
    {
      "id": "63fde71c774b170000355bd2",
      "text": "  　　　自分の理解のせいでうまく書けていない可能性もありますが、あまり気にせずに先に進もうかな（どうせ詳しい数理は別にまたやることになる）[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677584156,
      "updated": 1677584199
    },
    {
      "id": "63fde7ab774b170000355bd3",
      "text": "  　　　　著者は東大で博士（数理科学）をとっているので[基素.icon]よりはるかに数学ができるはず",
      "userId": "59fb21121207900012774b17",
      "created": 1677584299,
      "updated": 1677584315
    },
    {
      "id": "63fdd4fe774b17000053421b",
      "text": "   パラメータ数は[$ 10^{3700}]で計算機では扱えない",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677580201
    },
    {
      "id": "63fdd4fe774b17000053421c",
      "text": "    どう計算するとこうなるの？[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677580206
    },
    {
      "id": "63fdd4fe774b17000053421d",
      "text": "    30000変数の1024次関数の次元ではない",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b17000053421e",
      "text": "     d=1024 N=30000",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b17000053421f",
      "text": "     31023C1024=10^1952≠10^3700",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b170000534223",
      "text": "  2次関数の10回の繰り返しの場合450億パラメータ",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677580214
    },
    {
      "id": "63fdd7ba774b170000534252",
      "text": "   どう計算すると450億になるの？[基素.icon]",
      "userId": "59fb21121207900012774b17",
      "created": 1677580218,
      "updated": 1677580220
    },
    {
      "id": "63fdd4fe774b170000534231",
      "text": "   1000万円ぐらいの計算機で計算可能",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b170000534232",
      "text": "  NN",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b170000534233",
      "text": "   300万",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b170000534234",
      "text": "   その辺のGPUで計算可能",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b170000534235",
      "text": "  CNN",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b170000534236",
      "text": "   数千",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677579518
    },
    {
      "id": "63fdd4fe774b170000534237",
      "text": "   10層のNN 隠れ層100次元の場合",
      "userId": "59fb21121207900012774b17",
      "created": 1677579518,
      "updated": 1677581821
    },
    {
      "id": "63fdd805774b170000534257",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1677580294,
      "updated": 1677580294
    },
    {
      "id": "63fdd865774b17000053425f",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1677580389,
      "updated": 1677580389
    },
    {
      "id": "63fdd865774b170000534260",
      "text": "【深層学習】[全結合層] - それはいちばん大事な部品のお話【ディープラーニングの世界 vol. 4 】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580389,
      "updated": 1677580960
    },
    {
      "id": "63fdd805774b170000534258",
      "text": "【深層学習】[畳み込み層]の本当の意味、あなたは説明できますか？【ディープラーニングの世界 vol. 5 】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580294,
      "updated": 1677580963
    },
    {
      "id": "63fdd805774b170000534259",
      "text": " [Convolution layer]",
      "userId": "59fb21121207900012774b17",
      "created": 1677580294,
      "updated": 1677580413
    },
    {
      "id": "63fdd87d774b170000534263",
      "text": "【深層学習】[プーリング]層 - シンプルだけど大きな役割を担う層【ディープラーニングの世界 vol. 6 】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580414,
      "updated": 1677580428
    },
    {
      "id": "63fdd81a774b17000053425b",
      "text": "【深層学習】[CNN] 実装してみた【ディープラーニングの世界 vol. 7 】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580315,
      "updated": 1677580965
    },
    {
      "id": "63fdd807774b17000053425a",
      "text": "【深層学習】[RNN] の意味を徹底解説！【ディープラーニングの世界 vol. 8 】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580296,
      "updated": 1677580966
    },
    {
      "id": "63fdd8b3774b170000534265",
      "text": "【深層学習】RNN の3通りの使い方 - RNN の混乱ポイントを倒す！【ディープラーニングの世界 vol. 9 】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580467,
      "updated": 1677580472
    },
    {
      "id": "63fdd8e3774b170000534268",
      "text": "【深層学習】[GRU] - RNN に記憶をもたせる試みその1【ディープラーニングの世界 vol. 10 】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580515,
      "updated": 1677580969
    },
    {
      "id": "63fdd8e9774b170000534269",
      "text": "【深層学習】[LSTM] - RNN に記憶をもたせる試みその2【ディープラーニングの世界 vol. 11 】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580522,
      "updated": 1677580970
    },
    {
      "id": "63fdd8b7774b170000534266",
      "text": "【深層学習】[bi-LSTM] - 前後の文脈を利用する Recurrent layer【ディープラーニングの世界 vol. 12 】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580472,
      "updated": 1677580972
    },
    {
      "id": "63fdd8cd774b170000534267",
      "text": "【深層学習】CNN紹介 \"[LeNet]\" 1990年代に活躍したCNN【ディープラーニングの世界 vol. 13 】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580493,
      "updated": 1677580530
    },
    {
      "id": "63fdd8f0774b17000053426a",
      "text": "【深層学習】CNN紹介 \"[AlexNet]\" 2012年に登場し、画像処理に革命を起こしたモデル【ディープラーニングの世界 vol. 14 】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580528,
      "updated": 1677580975
    },
    {
      "id": "63fdd8fe774b17000053426c",
      "text": "【深層学習】CNN紹介 \"[GoogLeNet]\" ILSVRC2014をInceptionで制したモデル【ディープラーニングの世界 vol. 15】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580543,
      "updated": 1677580976
    },
    {
      "id": "63fdd903774b17000053426d",
      "text": "【深層学習】 CNN 紹介 \"[VGGNet]\" シンプルで強い転移学習の味方【ディープラーニングの世界 vol. 16】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580548,
      "updated": 1677580977
    },
    {
      "id": "63fdd909774b17000053426e",
      "text": "【深層学習】 CNN 紹介 \"[ResNet]\" 言わずとしれた CNN の標準技術が登場！【ディープラーニングの世界 vol. 17】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580554,
      "updated": 1677580978
    },
    {
      "id": "63fdd90e774b17000053426f",
      "text": "【深層学習】 CNN 紹介 \"[Xception]\" 大胆仮説でパラメタ削減と汎化を達成【ディープラーニングの世界 vol. 18】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580558,
      "updated": 1677580980
    },
    {
      "id": "63fdd914774b170000534270",
      "text": "【深層学習】[SENet] - 「圧縮興奮機構」による性能向上【ディープラーニングの世界 vol. 19】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580565,
      "updated": 1677580981
    },
    {
      "id": "63fdd919774b170000534271",
      "text": "【深層学習】[RNNLM] - 自然言語処理に革命を起こした RNN について【ディープラーニングの世界 vol. 20】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580570,
      "updated": 1677580983
    },
    {
      "id": "63fdd91e774b170000534272",
      "text": "【深層学習】[word2vec] - 単語の意味を機械が理解する仕組み【ディープラーニングの世界 vol. 21】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580575,
      "updated": 1677580984
    },
    {
      "id": "63fdd8f9774b17000053426b",
      "text": "【深層学習】[word2vec] の数理 - なぜ単語の計算が可能なのか【ディープラーニングの世界 vol. 22】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580537,
      "updated": 1677580985
    },
    {
      "id": "63fdd932774b170000534273",
      "text": "【深層学習】[doc2vec] - 文章の意味を機械が理解する仕組み【ディープラーニングの世界 vol. 23",
      "userId": "59fb21121207900012774b17",
      "created": 1677580595,
      "updated": 1677580986
    },
    {
      "id": "63fdd95f774b170000534276",
      "text": "【深層学習】[Attention] - 全領域に応用され最高精度を叩き出す注意機構の仕組み【ディープラーニングの世界 vol. 24】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580640,
      "updated": 1677580987
    },
    {
      "id": "63fdd970774b170000534278",
      "text": "【深層学習】[fasttext] - 単語の内部構造を利用した版 word2vec 【ディープラーニングの世界 vol. 25】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580657,
      "updated": 1677580990
    },
    {
      "id": "63fdd975774b170000534279",
      "text": "【深層学習】[GNMT] - Google翻訳の中身を解説！(2016)【ディープラーニングの世界 vol. 26】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580662,
      "updated": 1677580992
    },
    {
      "id": "63fdd960774b170000534277",
      "text": "【深層学習】[SCDV] - 文章ベクトルをソフトクラスタとスパース化で精度アップ！【ディープラーニングの世界 vol. 27】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580640,
      "updated": 1677580993
    },
    {
      "id": "63fdd97d774b17000053427a",
      "text": "【深層学習】[Transformer] -[ Multi-Head Attention]を理解してやろうじゃないの【ディープラーニングの世界vol.28】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580670,
      "updated": 1677581001
    },
    {
      "id": "63fdd98a774b17000053427b",
      "text": "【深層学習】忙しい人のための Transformer と Multi-Head Attention【ディープラーニングの世界 vol.29 】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580683,
      "updated": 1677580683
    },
    {
      "id": "63fdd98f774b17000053427c",
      "text": "【深層学習】[ELMo] - 複数粒度の文脈情報を持つ単語ベクトルで広範囲のタスク性能改善【ディープラーニングの世界vol.30】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580687,
      "updated": 1677580997
    },
    {
      "id": "63fdd949774b170000534274",
      "text": "【深層学習】[GPT] - 伝説の始まり。事前学習とファインチューニングによるパラダイムシフト【ディープラーニングの世界vol.31】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580618,
      "updated": 1677581003
    },
    {
      "id": "63fdd949774b170000534275",
      "text": "【深層学習】[BERT] - 実務家必修。実務で超応用されまくっている自然言語処理モデル【ディープラーニングの世界vol.32】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580618,
      "updated": 1677581004
    },
    {
      "id": "63fdd9c1774b17000053427e",
      "text": "【深層学習】[GPT-2] - 大規模言語モデルの可能性を見せ、社会もざわつかせたモデルの仕組み【ディープラーニングの世界vol.33】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580737,
      "updated": 1677581008
    },
    {
      "id": "63fdd9c2774b17000053427f",
      "text": "【深層学習】[XLNet] 前編 - BERT の事前学習を工夫して強くなりました【ディープラーニングの世界vol.34-1】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580739,
      "updated": 1677581010
    },
    {
      "id": "63fdd9bb774b17000053427d",
      "text": "【深層学習】XLNet 後編 - 事前学習と推論時のモデルの違いを押さえよう【ディープラーニングの世界vol.34-2】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580731,
      "updated": 1677580749
    },
    {
      "id": "63fdd9d1774b170000534281",
      "text": "【深層学習】[RoBERTa] - データと学習方法だけで XLNet を超えたモデル【ディープラーニングの世界vol.35】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580754,
      "updated": 1677581011
    },
    {
      "id": "63fdd9cd774b170000534280",
      "text": "【深層学習】[ALBERT] - BERT の軽量版！Multi-Head Attention の新たな可能性【ディープラーニングの世界vol.36】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580749,
      "updated": 1677581012
    },
    {
      "id": "63fdd9dd774b170000534283",
      "text": "【深層学習】[T5] - 入出力をテキストにする Transformer の新利用法【ディープラーニングの世界vol.37】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580766,
      "updated": 1677581014
    },
    {
      "id": "63fdd9e2774b170000534284",
      "text": "【深層学習】[Scaling Law] - 大きい Transformer は強い【ディープラーニングの世界vol.38】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580771,
      "updated": 1677581016
    },
    {
      "id": "63fdd9e8774b170000534285",
      "text": "【深層学習】[GPT-3] ①-1 モデルと Sparse Transformer について【ディープラーニングの世界vol.39】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580776,
      "updated": 1677581021
    },
    {
      "id": "63fdd9ec774b170000534286",
      "text": "【深層学習】GPT-3 ①-2 追加学習なしでタスクに対応する仕組み【ディープラーニングの世界vol.39-2】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580781,
      "updated": 1677580781
    },
    {
      "id": "63fdd9f1774b170000534287",
      "text": "【深層学習】GPT-3 ② 限界と今後の研究テーマ【ディープラーニングの世界vol.40】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580786,
      "updated": 1677580786
    },
    {
      "id": "63fdd9d8774b170000534282",
      "text": "【深層学習】GPT-3 ③ 社会的影響編 - AIを誤用しないために【ディープラーニングの世界vol.41】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580761,
      "updated": 1677580793
    },
    {
      "id": "63fdd9f9774b170000534289",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1677580793,
      "updated": 1677580793
    },
    {
      "id": "63fdda1e774b17000053428a",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1677580830,
      "updated": 1677580830
    },
    {
      "id": "63fdda25774b17000053428e",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1677580838,
      "updated": 1677580838
    },
    {
      "id": "63fdda1e774b17000053428b",
      "text": "線形代数編",
      "userId": "59fb21121207900012774b17",
      "created": 1677580830,
      "updated": 1677580835
    },
    {
      "id": "63fdda22774b17000053428d",
      "text": "【線形代数シリーズ開始！】[行列]の理解はまずここから！【行列①単位ベクトルの行き先】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580835,
      "updated": 1677581206
    },
    {
      "id": "63fdda22774b17000053428c",
      "text": "【Axって何だろう？】行列とベクトルの積は電車の乗り継ぎ【行列②行列とベクトルの積】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580835,
      "updated": 1677580846
    },
    {
      "id": "63fdda2e774b17000053428f",
      "text": "【Axは内積なのだ】Deep Learning や数理統計の観点【行列③行列とベクトルの積と内積】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580846,
      "updated": 1677580861
    },
    {
      "id": "63fdda43774b170000534291",
      "text": "【逆行列攻略！】[逆行列]は縦ベクトルを1に戻すんです【行列④逆行列の基本公式",
      "userId": "59fb21121207900012774b17",
      "created": 1677580867,
      "updated": 1677581204
    },
    {
      "id": "63fdda4c774b170000534292",
      "text": "【線形代数入門】逆行列は成分抽出なのです【行列⑤逆行列の真髄】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580877,
      "updated": 1677580877
    },
    {
      "id": "63fdda3d774b170000534290",
      "text": "【対角化と和解せよ！】対角化は変換の表現技法なのです【行列⑥対角化】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580861,
      "updated": 1677580895
    },
    {
      "id": "63fdda5f774b170000534293",
      "text": "【対角化の計算規則】Aはpiをλi倍するのです - 哲学の次は計算を学ぼう【行列⑦対角化】 ",
      "userId": "59fb21121207900012774b17",
      "created": 1677580895,
      "updated": 1677580901
    },
    {
      "id": "63fdda64774b170000534294",
      "text": "【A=PΛP^{-1}】[対角化]は 成分抽出 → 拡大・縮小 → ベクトルへ戻す の流れだよ【行列⑧対角化",
      "userId": "59fb21121207900012774b17",
      "created": 1677580900,
      "updated": 1677581199
    },
    {
      "id": "63fdda78774b170000534296",
      "text": "【分析頻出】関係性を行列で表す方法【行列⑨2次形式】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580921,
      "updated": 1677580921
    },
    {
      "id": "63fdda72774b170000534295",
      "text": "【いよいよ実践！】[分散]・共分散行列を考えるとベクトルに意味が宿ります【行列⑩分散・共分散行列】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580915,
      "updated": 1677581198
    },
    {
      "id": "63fdda84774b170000534298",
      "text": "【共分散行列の意味】[共分散行列]はベクトルに変数としての魂を与える【行列11分散・共分散行列】 ",
      "userId": "59fb21121207900012774b17",
      "created": 1677580933,
      "updated": 1677581195
    },
    {
      "id": "63fdda8a774b170000534299",
      "text": "【共分散行列の代数】よく使う事実の背後には抽象数学の透明な美しさがあります【行列12分散・共分散行列】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580938,
      "updated": 1677580938
    },
    {
      "id": "63fdda91774b17000053429a",
      "text": "【共分散と幾何】共分散は[内積]で、相関はコサインなのです【行列13分散・共分散行列】",
      "userId": "59fb21121207900012774b17",
      "created": 1677580945,
      "updated": 1677581218
    },
    {
      "id": "63fdda7e774b170000534297",
      "text": "",
      "userId": "59fb21121207900012774b17",
      "created": 1677580927,
      "updated": 1677580927
    }
  ]
}